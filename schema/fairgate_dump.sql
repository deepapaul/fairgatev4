-- MySQL dump 10.13  Distrib 5.5.38, for debian-linux-gnu (x86_64)
--
-- Host: localhost    Database: fairgate_v4
-- ------------------------------------------------------
-- Server version	5.5.38-0ubuntu0.14.04.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `archivecontactsto`
--

DROP TABLE IF EXISTS `archivecontactsto`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `archivecontactsto` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `contact_id` int(11) DEFAULT NULL,
  `club_id` int(11) DEFAULT NULL,
  `author` varchar(100) DEFAULT NULL,
  `archived_date` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=1697 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_categorisation`
--

DROP TABLE IF EXISTS `fg_categorisation`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_categorisation` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `category_name` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `category_name_idx` (`category_name`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_club`
--

DROP TABLE IF EXISTS `fg_club`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_club` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `parent_club_id` int(11) NOT NULL DEFAULT '1',
  `federation_id` int(11) DEFAULT '0',
  `is_fairgate` tinyint(1) NOT NULL,
  `is_federation` tinyint(1) NOT NULL,
  `is_sub_federation` tinyint(1) NOT NULL,
  `club_type` enum('federation','sub_federation','sub_federation_club','federation_club','standard_club') DEFAULT NULL,
  `subfed_level` tinyint(1) NOT NULL DEFAULT '0',
  `is_registered` tinyint(1) DEFAULT NULL,
  `title` varchar(255) DEFAULT NULL,
  `url_identifier` varchar(255) NOT NULL,
  `year` int(11) DEFAULT NULL,
  `correspondence_id` int(11) DEFAULT NULL,
  `billing_id` int(11) DEFAULT NULL,
  `is_active` tinyint(1) DEFAULT '0',
  `is_visible` tinyint(1) DEFAULT '0',
  `is_deleted` tinyint(1) NOT NULL DEFAULT '0',
  `email` varchar(255) DEFAULT NULL,
  `website` varchar(255) DEFAULT NULL,
  `next_contact_date` datetime DEFAULT NULL,
  `responsible_contact_id` int(11) DEFAULT NULL,
  `fairgate_solution_contact` int(11) DEFAULT NULL,
  `fairgate_sponsor_contact` int(11) DEFAULT NULL,
  `fairgate_invoice_contact` int(11) DEFAULT NULL,
  `first_contact_type_id` int(11) NOT NULL,
  `assignment_country` int(11) NOT NULL,
  `assignment_state` int(11) NOT NULL,
  `assignment_activity` int(11) NOT NULL,
  `assignment_subactivity` int(11) NOT NULL,
  `last_updated` datetime DEFAULT NULL,
  `invoice_date` datetime DEFAULT NULL,
  `next_renewal_date` datetime DEFAULT NULL,
  `is_backend_access` tinyint(1) DEFAULT '1',
  `access_updated_on` datetime DEFAULT NULL,
  `access_updated_by` int(11) DEFAULT NULL,
  `hear_about_fairgate` varchar(255) NOT NULL,
  `backend_lang` varchar(2) DEFAULT NULL,
  `created_at` datetime DEFAULT NULL,
  `is_sbo` tinyint(1) NOT NULL DEFAULT '0',
  `newsletter_powered` enum('0','1','2') NOT NULL DEFAULT '2',
  `okk` enum('Y','N') NOT NULL DEFAULT 'N',
  `state` enum('P','C','CF','F','SF','D') NOT NULL DEFAULT 'CF',
  `invoice_dispatch_type` enum('POST','EMAIL') NOT NULL DEFAULT 'POST',
  `dun_dispatch_type` enum('POST','EMAIL') NOT NULL DEFAULT 'EMAIL',
  `clientstate_amount` int(11) DEFAULT '0',
  `created_by` int(11) NOT NULL DEFAULT '1',
  `disk_space` int(11) DEFAULT '0',
  `diskspace_amount` float DEFAULT '0',
  `is_fg_newsletter_subscriber` tinyint(1) NOT NULL DEFAULT '1',
  `clientstatecheck` varchar(200) NOT NULL,
  `default_contact_subscription` tinyint(1) NOT NULL DEFAULT '1',
  `club_number` bigint(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_fg_club_fg_club_address1` (`correspondence_id`),
  KEY `fk_fg_club_fg_club_address2` (`billing_id`),
  KEY `assignment_country` (`assignment_country`),
  KEY `assignment_state` (`assignment_state`),
  KEY `assignment_activity` (`assignment_activity`),
  KEY `assignment_subactivity` (`assignment_subactivity`),
  KEY `fairgate_solution_contact` (`fairgate_solution_contact`),
  KEY `fairgate_invoice_contact` (`fairgate_invoice_contact`),
  KEY `fairgate_sponsor_contact` (`fairgate_sponsor_contact`),
  KEY `access_updated_by` (`access_updated_by`),
  KEY `parent_club_id` (`parent_club_id`),
  KEY `url_identifier_idx` (`url_identifier`),
  KEY `is_federation_index` (`is_federation`),
  KEY `responsible_index` (`responsible_contact_id`),
  KEY `created_by` (`created_by`),
  KEY `is_deleted` (`is_deleted`),
  KEY `is_sub_federation` (`is_sub_federation`),
  CONSTRAINT `fg_club_ibfk_1` FOREIGN KEY (`correspondence_id`) REFERENCES `fg_club_address` (`id`),
  CONSTRAINT `fg_club_ibfk_17` FOREIGN KEY (`fairgate_solution_contact`) REFERENCES `fg_cm_contact` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fg_club_ibfk_18` FOREIGN KEY (`fairgate_sponsor_contact`) REFERENCES `fg_cm_contact` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fg_club_ibfk_19` FOREIGN KEY (`fairgate_invoice_contact`) REFERENCES `fg_cm_contact` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fg_club_ibfk_2` FOREIGN KEY (`billing_id`) REFERENCES `fg_club_address` (`id`),
  CONSTRAINT `fg_club_ibfk_20` FOREIGN KEY (`assignment_country`) REFERENCES `fg_subcategorisation` (`id`) ON DELETE NO ACTION,
  CONSTRAINT `fg_club_ibfk_21` FOREIGN KEY (`assignment_state`) REFERENCES `fg_subsubcategorisation` (`id`) ON DELETE NO ACTION,
  CONSTRAINT `fg_club_ibfk_22` FOREIGN KEY (`assignment_activity`) REFERENCES `fg_subcategorisation` (`id`) ON DELETE NO ACTION,
  CONSTRAINT `fg_club_ibfk_23` FOREIGN KEY (`assignment_subactivity`) REFERENCES `fg_subsubcategorisation` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fg_club_ibfk_24` FOREIGN KEY (`access_updated_by`) REFERENCES `fg_cm_contact` (`id`),
  CONSTRAINT `fg_club_ibfk_26` FOREIGN KEY (`created_by`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=8680 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_club_address`
--

DROP TABLE IF EXISTS `fg_club_address`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_club_address` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `company` varchar(255) DEFAULT NULL,
  `street` varchar(255) DEFAULT NULL,
  `pobox` varchar(255) NOT NULL,
  `city` varchar(255) DEFAULT NULL,
  `zipcode` varchar(255) DEFAULT NULL,
  `state` varchar(255) DEFAULT NULL,
  `country` varchar(255) DEFAULT NULL,
  `language` varchar(255) DEFAULT NULL,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  `co` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4533 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_club_bookmarks`
--

DROP TABLE IF EXISTS `fg_club_bookmarks`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_club_bookmarks` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `club_id` int(11) NOT NULL,
  `contact_id` int(11) NOT NULL,
  `type` enum('class','filter','subfed') DEFAULT NULL,
  `class_id` int(11) DEFAULT NULL,
  `filter_id` int(11) DEFAULT NULL,
  `subfed_id` int(11) DEFAULT NULL,
  `sort_order` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `fk_fg_club_bookmarks_fg_cm_contact1_idx` (`contact_id`),
  KEY `fk_fg_club_bookmarks_fg_club1_idx` (`club_id`),
  KEY `fk_fg_club_bookmarks_fg_club2_idx` (`subfed_id`),
  KEY `fk_fg_club_bookmarks_fg_club_filter1_idx` (`filter_id`),
  KEY `fk_fg_club_bookmarks_fg_club_class1_idx` (`class_id`),
  CONSTRAINT `fg_cm_bookmarks_ibfk_10` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_cm_bookmarks_ibfk_20` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fk_fg_club_bookmarks_fg_club1` FOREIGN KEY (`subfed_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_fg_club_bookmarks_fg_club_class1` FOREIGN KEY (`class_id`) REFERENCES `fg_club_class` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_fg_club_bookmarks_fg_club_filter1` FOREIGN KEY (`filter_id`) REFERENCES `fg_club_filter` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=486 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_club_class`
--

DROP TABLE IF EXISTS `fg_club_class`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_club_class` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `classification_id` int(11) NOT NULL,
  `federation_id` int(11) NOT NULL,
  `title` varchar(255) DEFAULT NULL,
  `is_active` tinyint(1) DEFAULT '1',
  `sort_order` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `fk_fg_club_class_fg_club_classification1` (`classification_id`),
  KEY `fk_fg_club_class_fg_club1` (`federation_id`),
  CONSTRAINT `fg_club_class_ibfk_30` FOREIGN KEY (`federation_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fk_fg_club_class_fg_club_classification10` FOREIGN KEY (`classification_id`) REFERENCES `fg_club_classification` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=2959 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_club_class_assignment`
--

DROP TABLE IF EXISTS `fg_club_class_assignment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_club_class_assignment` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `assined_federation_id` int(11) DEFAULT NULL,
  `club_id` int(11) DEFAULT NULL,
  `class_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `assined_federation_id` (`assined_federation_id`),
  KEY `fk_fg_club_class_assignment_fg_club1_idx` (`club_id`),
  KEY `fk_fg_club_class_assignment_fg_club_class_idx` (`class_id`),
  CONSTRAINT `fg_club_class_assignment_ibfk_30` FOREIGN KEY (`assined_federation_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fk_fg_club_class_assignment_fg_club1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fk_fg_club_class_assignment_fg_club_classification_class1` FOREIGN KEY (`class_id`) REFERENCES `fg_club_class` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=1404 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_club_class_i18n`
--

DROP TABLE IF EXISTS `fg_club_class_i18n`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_club_class_i18n` (
  `id` int(11) NOT NULL DEFAULT '0',
  `title_lang` varchar(255) DEFAULT NULL,
  `lang` char(2) NOT NULL DEFAULT '',
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`,`lang`),
  CONSTRAINT `fg_club_class_i18n_id_fg_club_class_id0` FOREIGN KEY (`id`) REFERENCES `fg_club_class` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_club_class_log`
--

DROP TABLE IF EXISTS `fg_club_class_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_club_class_log` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `club_id` int(11) NOT NULL,
  `class_id` int(11) NOT NULL,
  `date` datetime DEFAULT NULL,
  `kind` enum('data','assigned club') DEFAULT NULL,
  `field` varchar(255) DEFAULT NULL,
  `value_before` text,
  `value_after` text,
  `changed_by_contact` int(11) DEFAULT NULL,
  `changed_by_club` int(11) DEFAULT NULL,
  `is_historical` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `fk_fg_club_class_log_fg_club_class1` (`class_id`),
  KEY `fk_fg_club_class_log_fg_cm_contact1` (`changed_by_contact`),
  KEY `fk_fg_club_class_log_fg_club1_idx` (`club_id`),
  KEY `fk_fg_club_class_log_fg_club2_idx` (`changed_by_club`)
) ENGINE=InnoDB AUTO_INCREMENT=7517 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_club_classification`
--

DROP TABLE IF EXISTS `fg_club_classification`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_club_classification` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `federation_id` int(11) DEFAULT NULL,
  `title` varchar(255) DEFAULT NULL,
  `sublevel_assign` enum('not visible','assign','not assign') DEFAULT 'not visible',
  `class_assign` enum('multiple','single') DEFAULT 'multiple',
  `is_active` tinyint(1) DEFAULT '1',
  `sort_order` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `index_category` (`is_active`),
  KEY `fk_fg_club_classification_fg_club1` (`federation_id`),
  CONSTRAINT `fk_fg_club_classification_fg_club10` FOREIGN KEY (`federation_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=1254 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_club_classification_i18n`
--

DROP TABLE IF EXISTS `fg_club_classification_i18n`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_club_classification_i18n` (
  `id` int(11) NOT NULL DEFAULT '0',
  `title_lang` varchar(255) DEFAULT NULL,
  `lang` char(2) NOT NULL DEFAULT '',
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`lang`,`id`),
  KEY `fg_club_classification_i18n_id_fg_club_classification_id0` (`id`),
  CONSTRAINT `fg_club_classification_i18n_id_fg_club_classification_id0` FOREIGN KEY (`id`) REFERENCES `fg_club_classification` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_club_filter`
--

DROP TABLE IF EXISTS `fg_club_filter`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_club_filter` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) DEFAULT NULL,
  `table_attributes` int(255) DEFAULT NULL,
  `table_rows` int(11) DEFAULT NULL,
  `contact_id` int(11) NOT NULL,
  `club_id` int(11) NOT NULL,
  `updated_at` datetime NOT NULL,
  `filter_data` text NOT NULL,
  `is_broken` tinyint(1) NOT NULL DEFAULT '0',
  `sort_order` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_fg_fiter_fg_contact1` (`contact_id`),
  KEY `club_id` (`club_id`),
  KEY `fg_filter_ibfk_30_idx` (`table_attributes`),
  CONSTRAINT `fg_filter_ibfk_10` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_filter_ibfk_20` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_filter_ibfk_30` FOREIGN KEY (`table_attributes`) REFERENCES `fg_club_table_settings` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=578 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_club_i18n`
--

DROP TABLE IF EXISTS `fg_club_i18n`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_club_i18n` (
  `id` int(11) NOT NULL DEFAULT '0',
  `title_lang` varchar(255) DEFAULT NULL,
  `lang` char(2) NOT NULL DEFAULT '',
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`,`lang`),
  CONSTRAINT `fg_club_i18n_ibfk_1` FOREIGN KEY (`id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_club_languages`
--

DROP TABLE IF EXISTS `fg_club_languages`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_club_languages` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `club_id` int(11) NOT NULL,
  `short_name` varchar(255) NOT NULL,
  `system_language_code` varchar(2) NOT NULL,
  `is_default` tinyint(4) NOT NULL DEFAULT '0',
  `is_active` tinyint(4) NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `system_language_id` (`system_language_code`),
  KEY `club_id` (`club_id`),
  KEY `short_name_idx` (`short_name`),
  KEY `is_default_idx` (`is_default`),
  KEY `is_active_idx` (`is_active`),
  CONSTRAINT `fg_club_languages_ibfk_1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=399 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `updateDefaultLangTrigg` AFTER UPDATE ON `fg_club_languages` FOR EACH ROW BEGIN 
-- CALL updateDefaultLang(NEW.short_name,OLD.club_id,NEW.is_default);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `fg_club_log`
--

DROP TABLE IF EXISTS `fg_club_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_club_log` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `club_id` int(11) DEFAULT NULL,
  `date` datetime DEFAULT NULL,
  `kind` enum('data','executive board','user rights','assigned club') DEFAULT NULL,
  `field` varchar(255) DEFAULT NULL,
  `value_before` varchar(255) DEFAULT NULL,
  `value_after` varchar(255) DEFAULT NULL,
  `changed_by` int(11) DEFAULT NULL,
  `rolelog_id` int(11) DEFAULT NULL,
  `class_log_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_fg_club_log_fg_club1` (`club_id`),
  KEY `fk_fg_club_log_fg_cm_contact1` (`changed_by`),
  KEY `rolelog_id` (`rolelog_id`),
  KEY `fk_fg_club_log_fg_club_class_log1_idx` (`class_log_id`),
  CONSTRAINT `fg_club_log_ibfk_1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_club_log_ibfk_2` FOREIGN KEY (`changed_by`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_club_log_ibfk_3` FOREIGN KEY (`rolelog_id`) REFERENCES `fg_rm_role_log` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_club_log_ibfk_4` FOREIGN KEY (`class_log_id`) REFERENCES `fg_club_class` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=6496 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_club_log_notes`
--

DROP TABLE IF EXISTS `fg_club_log_notes`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_club_log_notes` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `note_club_id` int(11) DEFAULT NULL,
  `note_contact_id` int(11) DEFAULT NULL,
  `assigned_club_id` int(11) DEFAULT NULL,
  `date` datetime DEFAULT NULL,
  `type` enum('club','contact') DEFAULT NULL,
  `value_before` text,
  `value_after` text,
  `changed_by` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `note_club_id` (`note_club_id`),
  KEY `note_contact_id` (`note_contact_id`),
  KEY `assigned_club_id` (`assigned_club_id`),
  KEY `changed_by` (`changed_by`),
  CONSTRAINT `fg_club_log_notes_ibfk_1` FOREIGN KEY (`note_club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_club_log_notes_ibfk_2` FOREIGN KEY (`note_contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_club_log_notes_ibfk_3` FOREIGN KEY (`assigned_club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_club_log_notes_ibfk_4` FOREIGN KEY (`changed_by`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=1685 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_club_notes`
--

DROP TABLE IF EXISTS `fg_club_notes`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_club_notes` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `club_id` int(11) NOT NULL,
  `edited_on` datetime DEFAULT NULL,
  `note` text,
  `created_by_contact` int(11) NOT NULL,
  `created_by_club` int(11) NOT NULL,
  `edited_by_contact` int(11) DEFAULT NULL,
  `edited_by_club` int(11) DEFAULT NULL,
  `date` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_fg_cm_notes_fg_cm_contact2` (`created_by_contact`),
  KEY `fk_fg_club_notes_fg_club1_idx` (`club_id`),
  KEY `fk_fg_club_notes_fg_club2_idx` (`created_by_club`),
  KEY `fk_fg_club_notes_fg_club3_idx` (`edited_by_club`),
  KEY `fk_fg_club_notes_fg_cm_contact1_idx` (`edited_by_contact`),
  CONSTRAINT `fg_club_notes_ibfk_1` FOREIGN KEY (`edited_by_contact`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_club_notes_ibfk_2` FOREIGN KEY (`edited_by_club`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_cm_notes_ibfk_10` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_cm_notes_ibfk_20` FOREIGN KEY (`created_by_contact`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fk_fg_club_notes_fg_club1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_fg_club_notes_fg_club2` FOREIGN KEY (`created_by_club`) REFERENCES `fg_club` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=714 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_club_salutation_settings`
--

DROP TABLE IF EXISTS `fg_club_salutation_settings`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_club_salutation_settings` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `club_id` int(11) NOT NULL,
  `female_formal` varchar(255) NOT NULL,
  `female_informal` varchar(255) NOT NULL,
  `male_formal` varchar(255) NOT NULL,
  `male_informal` varchar(255) NOT NULL,
  `family_formal` varchar(255) NOT NULL,
  `family_informal` varchar(255) NOT NULL,
  `company_no_maincontact` varchar(255) NOT NULL,
  `subscriber` varchar(255) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `fg_club_salutation_settings_ibfk_1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=21 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_club_salutation_settings_i18n`
--

DROP TABLE IF EXISTS `fg_club_salutation_settings_i18n`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_club_salutation_settings_i18n` (
  `id` int(11) NOT NULL,
  `lang` char(2) NOT NULL,
  `female_formal_lang` varchar(255) NOT NULL,
  `female_informal_lang` varchar(255) NOT NULL,
  `male_formal_lang` varchar(255) NOT NULL,
  `male_informal_lang` varchar(255) NOT NULL,
  `family_formal_lang` varchar(255) NOT NULL,
  `family_informal_lang` varchar(255) NOT NULL,
  `company_no_maincontact_lang` varchar(255) NOT NULL,
  `subscriber_lang` varchar(255) NOT NULL,
  PRIMARY KEY (`id`,`lang`),
  CONSTRAINT `fg_club_salutation_settings_i18n_ibfk_1` FOREIGN KEY (`id`) REFERENCES `fg_club_salutation_settings` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_club_settings`
--

DROP TABLE IF EXISTS `fg_club_settings`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_club_settings` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `club_id` int(11) NOT NULL,
  `fiscal_year` date DEFAULT NULL,
  `currency` varchar(10) DEFAULT NULL,
  `currency_position` enum('left','right') NOT NULL DEFAULT 'left',
  `majority_age` int(2) NOT NULL DEFAULT '18',
  `profile_access_age` int(2) NOT NULL DEFAULT '16',
  PRIMARY KEY (`id`),
  KEY `fk_fg_club_settings_fg_club1_idx` (`club_id`),
  CONSTRAINT `fk_fg_club_settings_fg_club1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=167 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_club_table_settings`
--

DROP TABLE IF EXISTS `fg_club_table_settings`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_club_table_settings` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) DEFAULT NULL,
  `attributes` text,
  `club_id` int(11) NOT NULL,
  `contact_id` int(11) NOT NULL,
  `is_temp` tinyint(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `fk_fg_club_table_settings_fg_contact1` (`club_id`),
  KEY `contact_id` (`contact_id`),
  CONSTRAINT `fg_club_table_settings_ibfk_3` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_club_table_settings_ibfk_4` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=247 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_club_terminology`
--

DROP TABLE IF EXISTS `fg_club_terminology`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_club_terminology` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `club_id` int(11) NOT NULL,
  `default_singular_term` varchar(255) NOT NULL,
  `default_plural_term` varchar(255) NOT NULL,
  `singular` varchar(255) DEFAULT NULL,
  `plural` varchar(255) DEFAULT NULL,
  `sort_order` int(11) NOT NULL DEFAULT '0',
  `is_federation` tinyint(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `fg_club_terminology_ibfk_1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=427 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_club_terminology_i18n`
--

DROP TABLE IF EXISTS `fg_club_terminology_i18n`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_club_terminology_i18n` (
  `id` int(11) NOT NULL,
  `singular_lang` varchar(255) DEFAULT NULL,
  `plural_lang` varchar(255) DEFAULT NULL,
  `lang` char(2) NOT NULL DEFAULT '',
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`,`lang`),
  CONSTRAINT `fg_club_terminology_i18n_ibfk_1` FOREIGN KEY (`id`) REFERENCES `fg_club_terminology` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cm_attribute`
--

DROP TABLE IF EXISTS `fg_cm_attribute`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cm_attribute` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `attributeset_id` int(11) NOT NULL,
  `fieldname` varchar(255) DEFAULT NULL,
  `fieldname_short` varchar(255) DEFAULT NULL,
  `input_type` enum('multiline','singleline','checkbox','select','date','email','url','fileupload','imageupload','login email','radio','number') DEFAULT 'singleline',
  `fieldtype` enum('int','text','date') DEFAULT 'text',
  `is_system_field` tinyint(1) DEFAULT '0',
  `is_crucial_system_field` tinyint(1) NOT NULL DEFAULT '0',
  `is_fairgate_field` tinyint(1) DEFAULT '0',
  `is_company` tinyint(1) DEFAULT '1',
  `is_personal` tinyint(1) DEFAULT '1',
  `predefined_value` text,
  `is_single_edit` tinyint(1) DEFAULT '0',
  `is_visible_subfed` tinyint(1) DEFAULT '0',
  `is_editable_subfed` tinyint(1) DEFAULT '0',
  `is_required_fedmember_subfed` tinyint(1) DEFAULT '0',
  `is_visible_club` tinyint(1) DEFAULT '0',
  `is_editable_club` tinyint(1) DEFAULT '0',
  `is_required_fedmember_club` tinyint(1) DEFAULT '0',
  `addres_type` enum('correspondance','invoice','both') DEFAULT 'both',
  `address_id` int(11) DEFAULT NULL,
  `fed_profile_status` tinyint(1) DEFAULT '0',
  `is_active` tinyint(1) DEFAULT '1',
  `club_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_fg_cm_attribute_fg_cm_attributeset1` (`attributeset_id`),
  KEY `fk_fg_cm_attribute_fg_club1` (`club_id`),
  KEY `fk_fg_cm_attribute_fg_cm_attribute1_idx` (`address_id`),
  CONSTRAINT `fg_cm_attribute_ibfk_1` FOREIGN KEY (`attributeset_id`) REFERENCES `fg_cm_attributeset` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_cm_attribute_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_fg_cm_attribute_fg_cm_attribute1` FOREIGN KEY (`address_id`) REFERENCES `fg_cm_attribute` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=73186 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cm_attribute_i18n`
--

DROP TABLE IF EXISTS `fg_cm_attribute_i18n`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cm_attribute_i18n` (
  `id` int(11) NOT NULL DEFAULT '0',
  `fieldname_lang` varchar(255) DEFAULT NULL,
  `fieldname_short_lang` varchar(255) DEFAULT NULL,
  `lang` char(2) NOT NULL DEFAULT '',
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`,`lang`),
  CONSTRAINT `fg_cm_attribute_i18n_id_fg_cm_attribute_id` FOREIGN KEY (`id`) REFERENCES `fg_cm_attribute` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cm_attribute_required`
--

DROP TABLE IF EXISTS `fg_cm_attribute_required`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cm_attribute_required` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `attribute_id` int(11) NOT NULL,
  `club_id` int(11) NOT NULL,
  `membership_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `attribute_id` (`attribute_id`,`club_id`,`membership_id`),
  UNIQUE KEY `attribute_id_2` (`attribute_id`,`club_id`,`membership_id`),
  KEY `fk_fg_cm_attribute_required_fg_cm_attribute1_idx` (`attribute_id`),
  KEY `fk_fg_cm_attribute_required_fg_club1_idx` (`club_id`),
  KEY `fk_fg_cm_attribute_required_fg_cm_membership1_idx` (`membership_id`),
  CONSTRAINT `fg_cm_attribute_required_ibfk_4` FOREIGN KEY (`attribute_id`) REFERENCES `fg_cm_attribute` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_cm_attribute_required_ibfk_5` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_cm_attribute_required_ibfk_6` FOREIGN KEY (`membership_id`) REFERENCES `fg_cm_membership` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=118 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cm_attributeset`
--

DROP TABLE IF EXISTS `fg_cm_attributeset`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cm_attributeset` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) DEFAULT NULL,
  `is_system` tinyint(1) NOT NULL DEFAULT '0',
  `sort_order` int(11) DEFAULT '0',
  `is_fairgate` tinyint(1) NOT NULL DEFAULT '0',
  `club_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `fg_cm_attributeset_ibfk_1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=465 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cm_attributeset_i18n`
--

DROP TABLE IF EXISTS `fg_cm_attributeset_i18n`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cm_attributeset_i18n` (
  `id` int(11) NOT NULL,
  `lang` char(2) NOT NULL,
  `title_lang` varchar(255) DEFAULT NULL,
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`lang`,`id`),
  KEY `fk_fg_cm_attributeset_i18n_fg_cm_attributeset1_idx` (`id`),
  CONSTRAINT `fg_cm_attributeset_i18n_ibfk_1` FOREIGN KEY (`id`) REFERENCES `fg_cm_attributeset` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cm_bookmarks`
--

DROP TABLE IF EXISTS `fg_cm_bookmarks`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cm_bookmarks` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `club_id` int(11) NOT NULL,
  `contact_id` int(11) NOT NULL,
  `type` enum('role','filter','membership') DEFAULT NULL,
  `role_id` int(11) DEFAULT NULL,
  `filter_id` int(11) DEFAULT NULL,
  `membership_id` int(11) DEFAULT NULL,
  `sort_order` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `fk_fg_cm_bookmarks_fg_cm_contact1_idx` (`contact_id`),
  KEY `fk_fg_cm_bookmarks_fg_club1_idx` (`club_id`),
  KEY `fk_fg_cm_bookmarks_fg_rm_role1_idx` (`role_id`),
  KEY `fk_fg_cm_bookmarks_fg_filter1_idx` (`filter_id`),
  KEY `fk_fg_cm_bookmarks_fg_cm_membership1_idx` (`membership_id`),
  CONSTRAINT `fg_cm_bookmarks_ibfk_1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_cm_bookmarks_ibfk_2` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_cm_bookmarks_ibfk_3` FOREIGN KEY (`role_id`) REFERENCES `fg_rm_role` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_cm_bookmarks_ibfk_4` FOREIGN KEY (`filter_id`) REFERENCES `fg_filter` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_cm_bookmarks_ibfk_5` FOREIGN KEY (`membership_id`) REFERENCES `fg_cm_membership` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=909 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cm_change_email`
--

DROP TABLE IF EXISTS `fg_cm_change_email`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cm_change_email` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `contact_id` int(10) NOT NULL,
  `change_interval` int(10) NOT NULL,
  `last_send` datetime DEFAULT NULL,
  `club_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `fg_cm_change_email_ibfk_1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cm_change_log`
--

DROP TABLE IF EXISTS `fg_cm_change_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cm_change_log` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `contact_id` int(11) NOT NULL,
  `club_id` int(11) DEFAULT NULL,
  `date` datetime DEFAULT NULL,
  `kind` enum('data','assignment','linked contacts','user rights','notes','documents','login','emails','contact type','contact status','password','communication') DEFAULT 'data',
  `field` varchar(255) DEFAULT NULL,
  `value_before` text,
  `value_after` text,
  `changed_by` int(11) DEFAULT NULL,
  `is_confirmed` tinyint(1) DEFAULT NULL,
  `confirmed_by` int(11) DEFAULT NULL,
  `historical_id` int(11) DEFAULT NULL,
  `is_historical` tinyint(1) NOT NULL DEFAULT '0',
  `attribute_id` int(11) DEFAULT NULL,
  `newsletter_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `fg_cm_change_log_ibfk_1` (`contact_id`),
  KEY `fg_cm_change_log_ibfk_2` (`changed_by`),
  KEY `fg_cm_change_log_ibfk_3` (`confirmed_by`),
  KEY `date` (`date`),
  KEY `kind` (`kind`),
  KEY `field` (`field`),
  KEY `is_confirmed` (`is_confirmed`),
  KEY `contactid_kind_field` (`contact_id`,`kind`,`field`),
  KEY `contactid_date_kind` (`contact_id`,`date`,`kind`),
  KEY `club_id` (`club_id`),
  KEY `newsletter_id` (`newsletter_id`),
  CONSTRAINT `fg_cm_change_log_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_cm_change_log_ibfk_2` FOREIGN KEY (`changed_by`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_cm_change_log_ibfk_3` FOREIGN KEY (`confirmed_by`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_cm_change_log_ibfk_4` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_cm_change_log_ibfk_5` FOREIGN KEY (`newsletter_id`) REFERENCES `fg_cn_newsletter` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=845032 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cm_change_toconfirm`
--

DROP TABLE IF EXISTS `fg_cm_change_toconfirm`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cm_change_toconfirm` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `contact_id` int(11) NOT NULL,
  `attribute_id` int(11) NOT NULL,
  `date` datetime DEFAULT NULL,
  `value` text,
  `changed_by` int(11) NOT NULL,
  `log_once` tinyint(4) DEFAULT '1',
  `club_id` int(11) NOT NULL,
  `type` enum('change','mutation','creation') NOT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_fg_cm_notes_fg_cm_contact1` (`contact_id`),
  KEY `fk_fg_cm_notes_fg_cm_contact2` (`changed_by`),
  KEY `fk_fg_cm_change_toconfirm_fg_cm_attribute1` (`attribute_id`),
  CONSTRAINT `fk_fg_cm_change_toconfirm_fg_cm_attribute1` FOREIGN KEY (`attribute_id`) REFERENCES `fg_cm_attribute` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fk_fg_cm_notes_fg_cm_contact1000` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fk_fg_cm_notes_fg_cm_contact2000` FOREIGN KEY (`changed_by`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cm_club_attribute`
--

DROP TABLE IF EXISTS `fg_cm_club_attribute`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cm_club_attribute` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `attribute_id` int(11) NOT NULL,
  `club_id` int(11) NOT NULL,
  `is_visible_contact` tinyint(1) DEFAULT '1',
  `is_set_privacy_itself` tinyint(1) DEFAULT '0',
  `privacy_contact` enum('community','team','private') DEFAULT 'private',
  `is_visible_teamadmin` tinyint(1) DEFAULT '1',
  `is_changable_contact` tinyint(1) DEFAULT '1',
  `is_changable_teamadmin` tinyint(1) DEFAULT '1',
  `is_confirm_contact` tinyint(1) DEFAULT '0',
  `is_mandatory` tinyint(1) DEFAULT '0',
  `is_edited` tinyint(1) DEFAULT '0',
  `sort_order` int(11) DEFAULT '0',
  `is_required_type` enum('not_required','all_contacts','all_members','selected_members') DEFAULT 'not_required',
  `profile_status` tinyint(1) DEFAULT '0',
  `is_confirm_teamadmin` tinyint(1) DEFAULT '0',
  `is_required_fedmember_subfed` tinyint(1) NOT NULL DEFAULT '0',
  `is_required_fedmember_club` tinyint(1) NOT NULL DEFAULT '0',
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `attribute_id` (`attribute_id`,`club_id`),
  KEY `fk_fg_cm_club_attribute_fg_cm_attribute1` (`attribute_id`),
  KEY `fk_fg_cm_club_attribute_fg_club1` (`club_id`),
  CONSTRAINT `fg_cm_club_attribute_ibfk_1` FOREIGN KEY (`attribute_id`) REFERENCES `fg_cm_attribute` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_cm_club_attribute_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=381156 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cm_contact`
--

DROP TABLE IF EXISTS `fg_cm_contact`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cm_contact` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `club_id` int(11) NOT NULL,
  `is_member` tinyint(1) DEFAULT '0',
  `is_company` tinyint(1) DEFAULT '0',
  `comp_def_contact` int(11) DEFAULT NULL,
  `comp_def_contact_fun` varchar(255) DEFAULT NULL,
  `is_draft` tinyint(1) DEFAULT '0',
  `is_deleted` tinyint(1) DEFAULT '0',
  `is_permanent_delete` tinyint(1) NOT NULL DEFAULT '0',
  `language_code` varchar(2) NOT NULL,
  `is_fairgate` tinyint(1) DEFAULT NULL,
  `last_updated` datetime NOT NULL,
  `community_status` enum('open','blocked') NOT NULL DEFAULT 'open',
  `is_new` tinyint(1) DEFAULT '0',
  `is_newsletter_subscriber` tinyint(1) DEFAULT '0',
  `own_lang` varchar(2) DEFAULT NULL,
  `member_id` int(11) NOT NULL DEFAULT '0',
  `is_conversation_reply` tinyint(1) NOT NULL DEFAULT '1',
  `dispatch_type_invoice` enum('POST','EMAIL') NOT NULL DEFAULT 'POST',
  `dispatch_type_dun` enum('POST','EMAIL') NOT NULL DEFAULT 'POST',
  `has_main_contact` tinyint(1) NOT NULL DEFAULT '1',
  `has_main_contact_address` tinyint(1) NOT NULL DEFAULT '0',
  `created_at` datetime NOT NULL,
  `origin` enum('contact','membership','team') NOT NULL DEFAULT 'contact',
  `team_id` int(11) DEFAULT NULL,
  `is_searchable` tinyint(1) NOT NULL DEFAULT '0',
  `joining_date` datetime NOT NULL,
  `leaving_date` datetime NOT NULL,
  `archived_on` datetime NOT NULL,
  `resigned_on` datetime DEFAULT NULL,
  `export_data_sharing` tinyint(1) NOT NULL DEFAULT '1',
  `same_invoice_address` tinyint(4) NOT NULL DEFAULT '1',
  `loginCountFlag` tinyint(1) NOT NULL DEFAULT '0',
  `login_count` int(11) NOT NULL DEFAULT '0',
  `last_login` datetime DEFAULT NULL,
  `is_former_fed_member` tinyint(1) NOT NULL DEFAULT '0',
  `map` tinyint(1) NOT NULL DEFAULT '1',
  `membership_cat_id` int(11) DEFAULT NULL,
  `import_table` varchar(50) DEFAULT NULL,
  `import_id` int(11) DEFAULT NULL,
  `is_stealth_mode` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `fk_fg_contact_fg_club` (`club_id`),
  KEY `is_draft` (`is_draft`),
  KEY `is_deleted` (`is_deleted`),
  KEY `is_permanent_delete` (`is_permanent_delete`),
  KEY `team_id` (`team_id`),
  KEY `is_fairgate` (`is_fairgate`),
  KEY `membership_cat_id` (`membership_cat_id`),
  CONSTRAINT `fg_cm_contact_ibfk_1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_cm_contact_ibfk_2` FOREIGN KEY (`team_id`) REFERENCES `fg_rm_role` (`id`) ON DELETE SET NULL ON UPDATE NO ACTION,
  CONSTRAINT `fg_cm_contact_ibfk_3` FOREIGN KEY (`membership_cat_id`) REFERENCES `fg_cm_membership` (`id`) ON DELETE SET NULL ON UPDATE SET NULL
) ENGINE=InnoDB AUTO_INCREMENT=547959 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`fairgate`@`localhost`*/ /*!50003 TRIGGER `assignMemberId` BEFORE INSERT ON `fg_cm_contact`
 FOR EACH ROW BEGIN
        DECLARE maxMemberId INT;
        IF NEW.member_id ='0' THEN
			SELECT memberIdCount(NEW.club_id) INTO  maxMemberId;
        	SET NEW.member_id = maxMemberId + 1;
        END IF;
	END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `fg_cm_contact_emails`
--

DROP TABLE IF EXISTS `fg_cm_contact_emails`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cm_contact_emails` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `attribute_id` int(11) NOT NULL,
  `contact_id` int(11) NOT NULL,
  `value` varchar(1000) DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `attribute_id` (`attribute_id`,`contact_id`),
  KEY `fk_fg_cm_attribute_value_int_fg_cm_attribute1` (`attribute_id`),
  KEY `fk_fg_cm_contact_emails_fg_contact1` (`contact_id`),
  CONSTRAINT `fg_cm_contact_emails_ibfk_1` FOREIGN KEY (`attribute_id`) REFERENCES `fg_cm_attribute` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_cm_contact_emails_ibfk_2` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=3377327 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cm_contact_privacy`
--

DROP TABLE IF EXISTS `fg_cm_contact_privacy`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cm_contact_privacy` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `contact_id` int(11) NOT NULL,
  `attribute_id` int(11) NOT NULL,
  `privacy` enum('community','team','private') NOT NULL,
  PRIMARY KEY (`id`),
  KEY `attribute_id` (`attribute_id`),
  KEY `contact_id` (`contact_id`),
  CONSTRAINT `fg_cm_contact_privacy_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_cm_contact_privacy_ibfk_2` FOREIGN KEY (`attribute_id`) REFERENCES `fg_cm_attribute` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=41 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cm_documents`
--

DROP TABLE IF EXISTS `fg_cm_documents`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cm_documents` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) NOT NULL,
  `contact_id` int(11) NOT NULL,
  `created_by` int(11) NOT NULL,
  `date` datetime DEFAULT NULL,
  `file` text,
  `file_size` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_fg_cm_notes_fg_cm_contact1` (`contact_id`),
  KEY `fk_fg_cm_notes_fg_cm_contact2` (`created_by`),
  CONSTRAINT `fg_cm_documents_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_cm_documents_ibfk_2` FOREIGN KEY (`created_by`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cm_linkedcontact`
--

DROP TABLE IF EXISTS `fg_cm_linkedcontact`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cm_linkedcontact` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `contact_id` int(11) NOT NULL,
  `linked_contact_id` int(11) NOT NULL,
  `relation_id` int(11) DEFAULT NULL,
  `relation` varchar(40) DEFAULT NULL,
  `type` enum('household','otherpersonal','othercompany') NOT NULL,
  `club_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `contact_id` (`contact_id`),
  KEY `relation_id` (`relation_id`),
  KEY `club_id` (`club_id`),
  KEY `linked_contact_id` (`linked_contact_id`),
  KEY `linked_contact_id_2` (`linked_contact_id`),
  CONSTRAINT `fg_cm_linkedcontact_ibfk_3` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_cm_linkedcontact_ibfk_4` FOREIGN KEY (`relation_id`) REFERENCES `fg_cm_relation` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_cm_linkedcontact_ibfk_5` FOREIGN KEY (`linked_contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=3736 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cm_log_assignment`
--

DROP TABLE IF EXISTS `fg_cm_log_assignment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cm_log_assignment` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `contact_id` int(11) NOT NULL,
  `category_club_id` int(11) NOT NULL,
  `role_type` enum('fed','club') DEFAULT 'club',
  `category_id` int(11) NOT NULL,
  `role_id` int(11) NOT NULL,
  `function_id` int(11) DEFAULT NULL,
  `date` datetime DEFAULT NULL,
  `category_title` varchar(255) DEFAULT NULL,
  `value_before` text,
  `value_after` text,
  `changed_by` int(11) DEFAULT NULL,
  `historical_id` int(11) DEFAULT NULL,
  `is_historical` tinyint(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `contact_id` (`contact_id`),
  KEY `category_club_id` (`category_club_id`),
  KEY `category_id` (`category_id`),
  KEY `role_id` (`role_id`),
  KEY `function_id` (`function_id`),
  KEY `changed_by` (`changed_by`)
) ENGINE=InnoDB AUTO_INCREMENT=148222 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cm_log_connection`
--

DROP TABLE IF EXISTS `fg_cm_log_connection`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cm_log_connection` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `contact_id` int(11) NOT NULL,
  `linked_contact_id` int(11) NOT NULL,
  `assigned_club_id` int(11) DEFAULT NULL,
  `date` datetime DEFAULT NULL,
  `connection_type` varchar(255) DEFAULT NULL,
  `relation` varchar(255) DEFAULT NULL,
  `value_before` text,
  `value_after` text,
  `changed_by` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `contact_id` (`contact_id`),
  KEY `assigned_club_id` (`assigned_club_id`),
  KEY `changed_by` (`changed_by`),
  KEY `linked_contact_id` (`linked_contact_id`),
  CONSTRAINT `fg_cm_log_connection_ibfk_1` FOREIGN KEY (`assigned_club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_cm_log_connection_ibfk_2` FOREIGN KEY (`changed_by`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=5287 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cm_membership`
--

DROP TABLE IF EXISTS `fg_cm_membership`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cm_membership` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `club_id` int(11) NOT NULL,
  `title` varchar(255) DEFAULT NULL,
  `sort_order` int(11) NOT NULL DEFAULT '0',
  `is_fed_category` tinyint(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `fk_fg_cm_membership_fg_club1_idx` (`club_id`),
  CONSTRAINT `fg_cm_membership_ibfk_1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=604 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cm_membership_history`
--

DROP TABLE IF EXISTS `fg_cm_membership_history`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cm_membership_history` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `contact_id` int(11) NOT NULL,
  `membership_club_id` int(11) NOT NULL,
  `membership_id` int(11) NOT NULL,
  `membership_type` enum('club','federation') DEFAULT NULL,
  `joining_date` datetime DEFAULT NULL,
  `leaving_date` datetime DEFAULT NULL,
  `changed_by` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `contact_id` (`contact_id`),
  KEY `membership_id` (`membership_id`),
  KEY `membership_club_id` (`membership_club_id`),
  KEY `changed_by` (`changed_by`),
  CONSTRAINT `fg_cm_membership_history_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_cm_membership_history_ibfk_2` FOREIGN KEY (`membership_id`) REFERENCES `fg_cm_membership` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_cm_membership_history_ibfk_3` FOREIGN KEY (`membership_club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_cm_membership_history_ibfk_4` FOREIGN KEY (`changed_by`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=4689 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cm_membership_i18n`
--

DROP TABLE IF EXISTS `fg_cm_membership_i18n`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cm_membership_i18n` (
  `id` int(11) NOT NULL,
  `lang` char(2) NOT NULL,
  `title_lang` varchar(255) DEFAULT NULL,
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`lang`,`id`),
  KEY `fk_fg_cm_membership_i18n_fg_cm_membership1_idx` (`id`),
  CONSTRAINT `fg_cm_membership_i18n_ibfk_1` FOREIGN KEY (`id`) REFERENCES `fg_cm_membership` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cm_membership_log`
--

DROP TABLE IF EXISTS `fg_cm_membership_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cm_membership_log` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `club_id` int(11) NOT NULL,
  `contact_id` int(11) DEFAULT NULL,
  `membership_id` int(11) NOT NULL,
  `date` datetime DEFAULT NULL,
  `kind` enum('data','assigned contacts') DEFAULT NULL,
  `field` varchar(255) DEFAULT NULL,
  `value_before` text,
  `value_after` text,
  `changed_by` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `club_id` (`club_id`),
  KEY `membership_id` (`membership_id`),
  KEY `changed_by` (`changed_by`),
  KEY `contact_id` (`contact_id`),
  CONSTRAINT `fg_cm_membership_log_ibfk_1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_cm_membership_log_ibfk_2` FOREIGN KEY (`membership_id`) REFERENCES `fg_cm_membership` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_cm_membership_log_ibfk_3` FOREIGN KEY (`changed_by`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_cm_membership_log_ibfk_4` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=6915 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cm_notes`
--

DROP TABLE IF EXISTS `fg_cm_notes`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cm_notes` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `contact_id` int(11) NOT NULL,
  `date` datetime DEFAULT NULL,
  `edited_on` datetime DEFAULT NULL,
  `note` text,
  `created_by` int(11) NOT NULL,
  `edited_by` int(11) NOT NULL,
  `club_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_fg_cm_notes_fg_cm_contact1` (`contact_id`),
  KEY `fk_fg_cm_notes_fg_cm_contact2` (`created_by`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `fg_cm_notes_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_cm_notes_ibfk_2` FOREIGN KEY (`created_by`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_cm_notes_ibfk_3` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=1238 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cm_overview_settings`
--

DROP TABLE IF EXISTS `fg_cm_overview_settings`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cm_overview_settings` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `club_id` int(11) NOT NULL,
  `settings` text CHARACTER SET utf8 NOT NULL,
  `type` enum('contact','sponsor') DEFAULT 'contact',
  PRIMARY KEY (`id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `fg_cm_overview_settings_ibfk_1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=53 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cm_relation`
--

DROP TABLE IF EXISTS `fg_cm_relation`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cm_relation` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `club_id` int(11) DEFAULT NULL,
  `name` varchar(255) NOT NULL,
  `is_household` tinyint(1) NOT NULL DEFAULT '0',
  `is_other_personal` tinyint(1) NOT NULL DEFAULT '1',
  `sort_order` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `fg_cm_relation_ibfk_1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cm_relation_first_level`
--

DROP TABLE IF EXISTS `fg_cm_relation_first_level`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cm_relation_first_level` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `relation_id` int(11) NOT NULL,
  `first_level_relation_id` int(11) NOT NULL,
  `is_system` tinyint(4) NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `relation_id` (`relation_id`),
  KEY `fk_fg_cm_relation_first_level_fg_cm_relation` (`relation_id`),
  KEY `fk_fg_cm_relation_first_level_fg_cm_relation1` (`first_level_relation_id`),
  CONSTRAINT `fg_cm_relation_first_level_ibfk_7` FOREIGN KEY (`relation_id`) REFERENCES `fg_cm_relation` (`id`) ON DELETE CASCADE,
  CONSTRAINT `fg_cm_relation_first_level_ibfk_8` FOREIGN KEY (`first_level_relation_id`) REFERENCES `fg_cm_relation` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cm_relation_i18n`
--

DROP TABLE IF EXISTS `fg_cm_relation_i18n`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cm_relation_i18n` (
  `id` int(11) NOT NULL,
  `lang` char(2) NOT NULL,
  `title_lang` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`,`lang`),
  CONSTRAINT `fg_cm_relation_i18n_ibfk_1` FOREIGN KEY (`id`) REFERENCES `fg_cm_relation` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cm_relation_second_level`
--

DROP TABLE IF EXISTS `fg_cm_relation_second_level`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cm_relation_second_level` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `relation_id` int(11) NOT NULL,
  `first_level_relation_id` int(11) NOT NULL,
  `second_level_relation_id` int(11) NOT NULL,
  `is_system` tinyint(4) NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `relation_id` (`relation_id`),
  KEY `first_level_relation_id` (`first_level_relation_id`),
  KEY `second_level_relation_id` (`second_level_relation_id`),
  CONSTRAINT `fg_cm_relation_second_level_ibfk_7` FOREIGN KEY (`relation_id`) REFERENCES `fg_cm_relation` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_cm_relation_second_level_ibfk_8` FOREIGN KEY (`first_level_relation_id`) REFERENCES `fg_cm_relation` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_cm_relation_second_level_ibfk_9` FOREIGN KEY (`second_level_relation_id`) REFERENCES `fg_cm_relation` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=50 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cn_newsletter`
--

DROP TABLE IF EXISTS `fg_cn_newsletter`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cn_newsletter` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `club_id` int(11) NOT NULL,
  `subject` varchar(255) DEFAULT NULL,
  `sender_name` varchar(255) DEFAULT NULL,
  `sender_email` varchar(255) DEFAULT NULL,
  `template_id` int(11) DEFAULT NULL,
  `salutation_type` enum('INDIVIDUAL','SAME','NONE') NOT NULL DEFAULT 'INDIVIDUAL',
  `salutation` varchar(255) DEFAULT NULL,
  `is_hide_table_contents` tinyint(1) DEFAULT NULL,
  `newsletter_type` enum('GENERAL','EMAIL') NOT NULL DEFAULT 'GENERAL',
  `email_content` text,
  `send_mode` enum('IMMEDIATE','SCHEDULED') NOT NULL DEFAULT 'IMMEDIATE',
  `send_date` datetime NOT NULL,
  `is_display_in_archive` tinyint(1) NOT NULL DEFAULT '0',
  `publish_type` enum('MANDATORY','SUBSCRIPTION') NOT NULL DEFAULT 'MANDATORY',
  `last_updated` datetime DEFAULT NULL,
  `updated_by` int(11) DEFAULT NULL,
  `step` int(1) NOT NULL DEFAULT '0',
  `status` enum('draft','scheduled','sending','sent') NOT NULL DEFAULT 'draft',
  `language_selection` enum('ALL','SELECTED') NOT NULL DEFAULT 'SELECTED',
  `last_spool_contact_id` int(11) NOT NULL DEFAULT '0',
  `last_contact_id` int(11) NOT NULL DEFAULT '0',
  `last_spool_admin_receiver_id` int(11) NOT NULL DEFAULT '0',
  `recepient_count` int(11) NOT NULL DEFAULT '0',
  `is_cron` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber_selection` enum('0','1') NOT NULL DEFAULT '1',
  `receiver_type` enum('ALL','SPORTS','NONSPORTS') NOT NULL DEFAULT 'ALL',
  `newsletter_content` longtext,
  `created_at` datetime NOT NULL,
  `created_by` int(11) DEFAULT NULL,
  `include_former_members` tinyint(1) NOT NULL DEFAULT '0',
  `recepient_list` int(11) DEFAULT NULL,
  `is_recepient_updated` tinyint(1) NOT NULL DEFAULT '0',
  `resent_status` int(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `fk_fg_cn_newsletter_fg_cn_newsletter_template1` (`template_id`),
  KEY `fk_fg_cn_newsletter_fg_cm_contact1` (`updated_by`),
  KEY `club_id` (`club_id`),
  KEY `created_by` (`created_by`),
  KEY `recepient_list` (`recepient_list`),
  CONSTRAINT `fg_cn_newsletter_ibfk_1` FOREIGN KEY (`updated_by`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_cn_newsletter_ibfk_2` FOREIGN KEY (`template_id`) REFERENCES `fg_cn_newsletter_template` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_cn_newsletter_ibfk_3` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_cn_newsletter_ibfk_4` FOREIGN KEY (`created_by`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_cn_newsletter_ibfk_5` FOREIGN KEY (`recepient_list`) REFERENCES `fg_cn_recepients` (`id`) ON DELETE SET NULL ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=1661 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cn_newsletter_article`
--

DROP TABLE IF EXISTS `fg_cn_newsletter_article`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cn_newsletter_article` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `content_id` int(11) NOT NULL,
  `title` varchar(255) DEFAULT NULL,
  `teaser_text` text,
  `content` text,
  PRIMARY KEY (`id`),
  KEY `fk_fg_cn_newsletter_article_fg_cn_newsletter_content1` (`content_id`),
  CONSTRAINT `fg_cn_newsletter_article_ibfk_1` FOREIGN KEY (`content_id`) REFERENCES `fg_cn_newsletter_content` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=240 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cn_newsletter_article_documents`
--

DROP TABLE IF EXISTS `fg_cn_newsletter_article_documents`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cn_newsletter_article_documents` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `article_id` int(11) DEFAULT NULL,
  `newsletter_id` int(11) DEFAULT NULL,
  `documents_id` int(11) DEFAULT NULL,
  `sort_order` int(11) NOT NULL DEFAULT '0',
  `doc_type` enum('NEW','APPEND') DEFAULT NULL,
  `filename` varchar(255) DEFAULT NULL,
  `title` varchar(255) DEFAULT NULL,
  `created_at` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_fg_cn_newsletter_article_documents_fg_dm_documents1` (`documents_id`),
  KEY `fk_fg_cn_newsletter_article_documents_fg_cn_newsletter_article1` (`article_id`),
  KEY `newsletter_id` (`newsletter_id`),
  CONSTRAINT `fg_cn_newsletter_article_documents_ibfk_1` FOREIGN KEY (`documents_id`) REFERENCES `fg_dm_documents` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_cn_newsletter_article_documents_ibfk_2` FOREIGN KEY (`newsletter_id`) REFERENCES `fg_cn_newsletter` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fk_fg_cn_newsletter_article_documents_fg_cn_newsletter_article1` FOREIGN KEY (`article_id`) REFERENCES `fg_cn_newsletter_article` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=551 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cn_newsletter_article_media`
--

DROP TABLE IF EXISTS `fg_cn_newsletter_article_media`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cn_newsletter_article_media` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `article_id` int(11) NOT NULL,
  `gallery_item_id` int(11) DEFAULT NULL,
  `media_text` text,
  `description` text NOT NULL,
  `media_type` enum('gallery','image','video') DEFAULT NULL,
  `sort_order` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_fg_cn_newsletter_article_media_fg_cn_newsletter_article1` (`article_id`),
  CONSTRAINT `fk_fg_cn_newsletter_article_media_fg_cn_newsletter_article1` FOREIGN KEY (`article_id`) REFERENCES `fg_cn_newsletter_article` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=190 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cn_newsletter_content`
--

DROP TABLE IF EXISTS `fg_cn_newsletter_content`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cn_newsletter_content` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `newsletter_id` int(11) NOT NULL,
  `content_type` enum('INTRO','CLOSING','NEWS','TEAM NEWS','ARTICLE','IMAGE','OTHER','SPONSOR') DEFAULT NULL,
  `news_id` int(11) DEFAULT NULL,
  `image_path` varchar(255) DEFAULT NULL,
  `sort_order` int(11) NOT NULL DEFAULT '0',
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  `intro_closing_words` text,
  `picture_position` enum('LEFT','RIGHT','NONE') DEFAULT 'LEFT',
  `image_link` varchar(255) DEFAULT NULL,
  `sponsor_ad_area_id` int(11) DEFAULT NULL,
  `sponsor_ad_width` varchar(5) DEFAULT NULL,
  `content_title` varchar(160) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_fg_cn_newsletter_content_fg_cn_newsletter1` (`newsletter_id`),
  KEY `fk_fg_cn_newsletter_content_fg_sm_ad_area1_idx` (`sponsor_ad_area_id`),
  CONSTRAINT `fk_fg_cn_newsletter_content_fg_cn_newsletter1` FOREIGN KEY (`newsletter_id`) REFERENCES `fg_cn_newsletter` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_fg_cn_newsletter_content_fg_sm_ad_area1` FOREIGN KEY (`sponsor_ad_area_id`) REFERENCES `fg_sm_ad_area` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=1585 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cn_newsletter_content_services`
--

DROP TABLE IF EXISTS `fg_cn_newsletter_content_services`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cn_newsletter_content_services` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `content_id` int(11) NOT NULL,
  `service_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_fg_cn_newsletter_content_services_fg_cn_newsletter_conte_idx` (`content_id`),
  KEY `fk_fg_cn_newsletter_content_services_fg_sm_services1_idx` (`service_id`),
  CONSTRAINT `fk_fg_cn_newsletter_content_services_fg_cn_newsletter_content1` FOREIGN KEY (`content_id`) REFERENCES `fg_cn_newsletter_content` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_fg_cn_newsletter_content_services_fg_sm_services1` FOREIGN KEY (`service_id`) REFERENCES `fg_sm_services` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=854 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cn_newsletter_exclude_contacts`
--

DROP TABLE IF EXISTS `fg_cn_newsletter_exclude_contacts`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cn_newsletter_exclude_contacts` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `newsletter_id` int(11) NOT NULL,
  `email` varchar(255) NOT NULL,
  `salutation` varchar(250) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `newsletter_id` (`newsletter_id`),
  CONSTRAINT `fg_cn_newsletter_exclude_contacts_ibfk_1` FOREIGN KEY (`newsletter_id`) REFERENCES `fg_cn_newsletter` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=858 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cn_newsletter_intro_closing_words`
--

DROP TABLE IF EXISTS `fg_cn_newsletter_intro_closing_words`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cn_newsletter_intro_closing_words` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `club_id` int(11) NOT NULL,
  `title` varchar(255) DEFAULT NULL,
  `intro_text` text,
  `word_type` enum('INTRO','CLOSING','OTHER') DEFAULT NULL,
  `sort_order` int(11) NOT NULL DEFAULT '0',
  `updated_by` int(11) NOT NULL,
  `updated_date` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `updated_by` (`updated_by`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `fg_cn_newsletter_intro_closing_words_ibfk_1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_cn_newsletter_intro_closing_words_ibfk_2` FOREIGN KEY (`updated_by`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=481 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cn_newsletter_log`
--

DROP TABLE IF EXISTS `fg_cn_newsletter_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cn_newsletter_log` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `date` datetime NOT NULL,
  `club_id` int(11) NOT NULL,
  `newsletter_id` int(11) DEFAULT NULL,
  `subject` varchar(255) DEFAULT NULL,
  `template` varchar(255) DEFAULT NULL,
  `newsletter_type` enum('MANDATORY','SUBSCRIPTION','SIMPLE EMAIL') DEFAULT NULL,
  `recepients` int(11) DEFAULT NULL,
  `sent_by` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `newsletter_id` (`newsletter_id`),
  KEY `contact_id` (`sent_by`),
  KEY `fk_fg_cn_newsletter_log_fg_club1` (`club_id`),
  CONSTRAINT `fg_cn_newsletter_log_ibfk_1` FOREIGN KEY (`newsletter_id`) REFERENCES `fg_cn_newsletter` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_cn_newsletter_log_ibfk_2` FOREIGN KEY (`sent_by`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_fg_cn_newsletter_log_fg_club1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=241 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cn_newsletter_manual_contacts`
--

DROP TABLE IF EXISTS `fg_cn_newsletter_manual_contacts`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cn_newsletter_manual_contacts` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `newsletter_id` int(11) NOT NULL,
  `contact_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `newsletter_id` (`newsletter_id`),
  KEY `contact_id` (`contact_id`),
  CONSTRAINT `fg_cn_newsletter_exclude_contacts_ibfk_10` FOREIGN KEY (`newsletter_id`) REFERENCES `fg_cn_newsletter` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_cn_newsletter_manual_contacts_ibfk_11` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=466 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cn_newsletter_manual_contacts_email`
--

DROP TABLE IF EXISTS `fg_cn_newsletter_manual_contacts_email`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cn_newsletter_manual_contacts_email` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `newsletter_id` int(11) NOT NULL,
  `selection_type` enum('main','substitute') NOT NULL DEFAULT 'main',
  `email_type` enum('contact_field','parent_email') NOT NULL,
  `email_field_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `newsletter_id` (`newsletter_id`),
  KEY `email_field_id` (`email_field_id`),
  CONSTRAINT `fg_cn_newsletter_manual_contacts_email_ibfk_100` FOREIGN KEY (`newsletter_id`) REFERENCES `fg_cn_newsletter` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_cn_newsletter_manual_contacts_email_ibfk_101` FOREIGN KEY (`email_field_id`) REFERENCES `fg_cm_attribute` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=748 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cn_newsletter_publish_lang`
--

DROP TABLE IF EXISTS `fg_cn_newsletter_publish_lang`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cn_newsletter_publish_lang` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `newsletter_id` int(11) NOT NULL,
  `language_code` varchar(2) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_fg_cn_newsletter_publish_lang_fg_club_languages1` (`language_code`),
  KEY `fk_fg_cn_newsletter_publish_lang_fg_cn_newsletter1` (`newsletter_id`),
  CONSTRAINT `fg_cn_newsletter_publish_lang_ibfk_1` FOREIGN KEY (`newsletter_id`) REFERENCES `fg_cn_newsletter` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=3482 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cn_newsletter_receiver_log`
--

DROP TABLE IF EXISTS `fg_cn_newsletter_receiver_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cn_newsletter_receiver_log` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `corres_lang` varchar(2) NOT NULL,
  `send_date` datetime NOT NULL,
  `club_id` int(11) NOT NULL,
  `newsletter_id` int(11) NOT NULL,
  `contact_id` text NOT NULL,
  `subscriber_id` int(11) DEFAULT NULL,
  `email` varchar(160) NOT NULL,
  `is_sent` tinyint(1) NOT NULL DEFAULT '0',
  `opened_at` datetime DEFAULT NULL,
  `is_bounced` tinyint(1) NOT NULL DEFAULT '0',
  `bounce_message` text,
  `resent_email` varchar(160) NOT NULL,
  `salutation` varchar(250) NOT NULL,
  `bounce_count` int(5) NOT NULL,
  `email_field_ids` text NOT NULL,
  `linked_contact_ids` text NOT NULL,
  `is_email_changed` tinyint(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  UNIQUE KEY `email_salutation` (`email`,`salutation`,`newsletter_id`),
  KEY `newsletter_id` (`newsletter_id`),
  KEY `subscriber_id` (`subscriber_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `fg_cn_newsletter_receiver_log_ibfk_3` FOREIGN KEY (`newsletter_id`) REFERENCES `fg_cn_newsletter` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_cn_newsletter_receiver_log_ibfk_4` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=60705 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cn_newsletter_sidebar`
--

DROP TABLE IF EXISTS `fg_cn_newsletter_sidebar`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cn_newsletter_sidebar` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(160) DEFAULT NULL,
  `newsletter_id` int(11) NOT NULL,
  `sponsor_ad_area_id` int(11) NOT NULL,
  `sort_order` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_fg_cn_newsletter_sidebar_fg_sm_ad_area1_idx` (`sponsor_ad_area_id`),
  KEY `fk_fg_cn_newsletter_sidebar_fg_cn_newsletter1_idx` (`newsletter_id`),
  CONSTRAINT `fk_fg_cn_newsletter_sidebar_fg_cn_newsletter1` FOREIGN KEY (`newsletter_id`) REFERENCES `fg_cn_newsletter` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_fg_cn_newsletter_sidebar_fg_sm_ad_area1` FOREIGN KEY (`sponsor_ad_area_id`) REFERENCES `fg_sm_ad_area` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=78 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cn_newsletter_sidebar_services`
--

DROP TABLE IF EXISTS `fg_cn_newsletter_sidebar_services`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cn_newsletter_sidebar_services` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `newsletter_sidebar_id` int(11) NOT NULL,
  `service_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_fg_cn_newsletter_sidebar_services_fg_cn_newsletter_sideb_idx` (`newsletter_sidebar_id`),
  KEY `fk_fg_cn_newsletter_sidebar_services_fg_sm_services1_idx` (`service_id`),
  CONSTRAINT `fk_fg_cn_newsletter_sidebar_services_fg_cn_newsletter_sidebar1` FOREIGN KEY (`newsletter_sidebar_id`) REFERENCES `fg_cn_newsletter_sidebar` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_fg_cn_newsletter_sidebar_services_fg_sm_services1` FOREIGN KEY (`service_id`) REFERENCES `fg_sm_services` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=700 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cn_newsletter_template`
--

DROP TABLE IF EXISTS `fg_cn_newsletter_template`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cn_newsletter_template` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) DEFAULT NULL,
  `club_id` int(11) NOT NULL,
  `header_image` varchar(255) DEFAULT NULL,
  `article_display` enum('teaser','fulltext') NOT NULL DEFAULT 'teaser',
  `color_bg` varchar(10) DEFAULT NULL,
  `color_toc_bg` varchar(10) DEFAULT NULL,
  `color_std_text` varchar(10) DEFAULT NULL,
  `color_toc_text` varchar(10) DEFAULT NULL,
  `color_title_text` varchar(10) DEFAULT NULL,
  `last_updated` datetime DEFAULT NULL,
  `edited_by` int(11) DEFAULT NULL,
  `created_on` datetime NOT NULL,
  `created_by` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_fg_cn_newsletter_template_fg_club1` (`club_id`),
  KEY `fk_fg_cn_newsletter_template_fg_cm_contact1` (`edited_by`),
  KEY `created_by` (`created_by`),
  CONSTRAINT `fg_cn_newsletter_template_ibfk_1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_cn_newsletter_template_ibfk_2` FOREIGN KEY (`edited_by`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_cn_newsletter_template_ibfk_3` FOREIGN KEY (`created_by`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=698 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cn_recepients`
--

DROP TABLE IF EXISTS `fg_cn_recepients`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cn_recepients` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) DEFAULT NULL,
  `club_id` int(11) NOT NULL,
  `updated_at` datetime NOT NULL,
  `filter_data` text NOT NULL,
  `is_all_active` tinyint(1) NOT NULL DEFAULT '0',
  `contact_count` int(11) NOT NULL DEFAULT '0',
  `mandatory_count` int(11) NOT NULL DEFAULT '0',
  `subscriber_count` int(11) NOT NULL DEFAULT '0',
  `temp_id` varchar(15) NOT NULL,
  `sort_order` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `fg_cn_recepients_ibfk_11` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=688 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cn_recepients_email`
--

DROP TABLE IF EXISTS `fg_cn_recepients_email`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cn_recepients_email` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `recepient_list_id` int(11) NOT NULL,
  `selection_type` enum('main','substitute') NOT NULL DEFAULT 'main',
  `email_type` enum('contact_field','parent_email') NOT NULL,
  `email_field_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `recepient_list_id` (`recepient_list_id`),
  KEY `email_field_id` (`email_field_id`),
  CONSTRAINT `fg_cn_recepients_email_ibfk_100` FOREIGN KEY (`recepient_list_id`) REFERENCES `fg_cn_recepients` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_cn_recepients_email_ibfk_101` FOREIGN KEY (`email_field_id`) REFERENCES `fg_cm_attribute` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=1397 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cn_recepients_exception`
--

DROP TABLE IF EXISTS `fg_cn_recepients_exception`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cn_recepients_exception` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `recepient_list_id` int(11) NOT NULL,
  `contact_id` int(11) NOT NULL,
  `type` enum('included','excluded') NOT NULL DEFAULT 'included',
  PRIMARY KEY (`id`),
  KEY `contact_id` (`contact_id`),
  KEY `fk_fg_cn_recepients_exception_fg_cn_recepients1_idx` (`recepient_list_id`),
  CONSTRAINT `fg_cn_recepients_exception_ibfk_20` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_fg_cn_recepients_exception_fg_cn_recepients1` FOREIGN KEY (`recepient_list_id`) REFERENCES `fg_cn_recepients` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=639 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cn_recepients_mandatory`
--

DROP TABLE IF EXISTS `fg_cn_recepients_mandatory`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cn_recepients_mandatory` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `recepient_list_id` int(11) NOT NULL,
  `contact_id` int(11) NOT NULL,
  `email_field_id` int(11) NOT NULL,
  `email_type` enum('parentemail','emailfield') NOT NULL,
  `email` varchar(160) NOT NULL,
  `linked_contact_id` int(11) DEFAULT NULL,
  `salutation` varchar(250) NOT NULL,
  `corres_lang` varchar(2) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `linked_contact_id` (`linked_contact_id`),
  KEY `email_field_id` (`email_field_id`),
  KEY `recepient_list_id` (`recepient_list_id`),
  KEY `contact_id` (`contact_id`),
  CONSTRAINT `fg_cn_recepients_mandatory_ibfk_1` FOREIGN KEY (`email_field_id`) REFERENCES `fg_cm_attribute` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_cn_recepients_mandatory_ibfk_2` FOREIGN KEY (`linked_contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_cn_recepients_mandatory_ibfk_3` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_cn_recepients_mandatory_ibfk_4` FOREIGN KEY (`recepient_list_id`) REFERENCES `fg_cn_recepients` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=1036827 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cn_sms`
--

DROP TABLE IF EXISTS `fg_cn_sms`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cn_sms` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `content` text,
  `sending_area` enum('CLUB','TEAM') DEFAULT NULL,
  `sender` varchar(255) DEFAULT NULL,
  `state` enum('DRAFT','SCHEDULED','SENT') NOT NULL DEFAULT 'DRAFT',
  `send_mode` enum('IMMEDIATE','SCHEDULED') NOT NULL DEFAULT 'IMMEDIATE',
  `send_date` datetime NOT NULL,
  `contact_selection` enum('ACTIVE','CONTACT TYPE','FILTER','ASSIGNMENT') NOT NULL DEFAULT 'ACTIVE',
  `is_member` tinyint(1) DEFAULT NULL,
  `is_sponsor` tinyint(1) DEFAULT NULL,
  `is_company` tinyint(1) DEFAULT NULL,
  `sponsor_type` enum('ALL','ACTIVE','ACTIVEFORMER') NOT NULL DEFAULT 'ALL',
  `former_sponsor_month` int(11) DEFAULT NULL,
  `phone_selection` enum('MOBILE1','MOBILE2','BOTH') NOT NULL DEFAULT 'MOBILE1',
  `last_updated` datetime DEFAULT NULL,
  `updated_by` int(11) DEFAULT NULL,
  `step` tinyint(1) NOT NULL DEFAULT '0',
  `language_selection` enum('ALL','SELECTED') NOT NULL DEFAULT 'SELECTED',
  `last_spool_contact_id` int(11) NOT NULL DEFAULT '0',
  `recepient_count` int(11) NOT NULL DEFAULT '0',
  `contact_id` int(11) NOT NULL,
  `club_id` int(11) NOT NULL,
  `team_id` int(11) DEFAULT NULL,
  `is_deleted` tinyint(1) NOT NULL DEFAULT '0',
  `is_verification` tinyint(1) DEFAULT '0',
  `opposite_selection` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_fg_cn_sms_fg_cm_contact1` (`contact_id`),
  KEY `fk_fg_cn_sms_fg_club1` (`club_id`),
  KEY `fk_fg_cn_sms_fg_rm_role1` (`team_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cn_sms_club_packages`
--

DROP TABLE IF EXISTS `fg_cn_sms_club_packages`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cn_sms_club_packages` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) DEFAULT NULL,
  `sort_order` int(11) DEFAULT NULL,
  `price` decimal(10,2) DEFAULT NULL,
  `total_credits` int(11) DEFAULT NULL,
  `balance_credits` int(11) DEFAULT NULL,
  `sponsor_type` enum('NO','MANUAL','BOOKING') DEFAULT NULL,
  `sponsor_text` text,
  `club_id` int(11) NOT NULL,
  `booking_date` datetime DEFAULT NULL,
  `is_club` tinyint(1) NOT NULL DEFAULT '1',
  `is_all` int(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `fk_fg_cn_sms_club_packages_fg_club1` (`club_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cn_sms_contacts`
--

DROP TABLE IF EXISTS `fg_cn_sms_contacts`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cn_sms_contacts` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `sms_id` int(11) NOT NULL,
  `filter_id` int(11) DEFAULT NULL,
  `category_id` int(11) DEFAULT NULL,
  `role_id` int(11) DEFAULT NULL,
  `function_id` int(11) DEFAULT NULL,
  `selection_type` enum('ASSIGMENT','FILTER') NOT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_fg_cn_sms_contacts_fg_cn_sms1` (`sms_id`),
  KEY `fk_fg_cn_sms_contacts_fg_rm_role1` (`role_id`),
  KEY `fk_fg_cn_sms_contacts_fg_rm_function1` (`function_id`),
  KEY `fk_fg_cn_sms_contacts_fg_rm_category1` (`category_id`),
  KEY `fk_fg_cn_sms_contacts_fg_filter1` (`filter_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cn_sms_credits`
--

DROP TABLE IF EXISTS `fg_cn_sms_credits`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cn_sms_credits` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `club_id` int(11) NOT NULL,
  `date` datetime DEFAULT NULL,
  `club_packages_id` int(11) NOT NULL,
  `sms_id` int(11) NOT NULL,
  `credits` int(11) DEFAULT NULL,
  `status` enum('DRAFT','SCHEDULED','SENT') NOT NULL,
  `is_test` tinyint(1) NOT NULL DEFAULT '0',
  `recredits` int(11) NOT NULL DEFAULT '0' COMMENT 'Failed sms recredits count',
  PRIMARY KEY (`id`),
  KEY `fk_fg_cn_sms_packages_priority_fg_cn_sms_club_packages1` (`club_packages_id`),
  KEY `fk_fg_cn_sms_packages_priority_fg_cn_sms1` (`sms_id`),
  KEY `fk_fg_cn_sms_packages_priority_fg_club1` (`club_id`),
  CONSTRAINT `fg_cn_sms_credits_ibfk_1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fg_cn_sms_credits_ibfk_2` FOREIGN KEY (`club_packages_id`) REFERENCES `fg_cn_sms_club_packages` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fg_cn_sms_credits_ibfk_3` FOREIGN KEY (`sms_id`) REFERENCES `fg_cn_sms` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cn_sms_excluded_numbers`
--

DROP TABLE IF EXISTS `fg_cn_sms_excluded_numbers`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cn_sms_excluded_numbers` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `sms_id` int(11) NOT NULL,
  `mobile_number` varchar(255) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `sms_id` (`sms_id`),
  CONSTRAINT `fg_cn_sms_excluded_numbers_ibfk_1` FOREIGN KEY (`sms_id`) REFERENCES `fg_cn_sms` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cn_sms_job_log`
--

DROP TABLE IF EXISTS `fg_cn_sms_job_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cn_sms_job_log` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `job_id` varchar(255) NOT NULL,
  `sms_id` int(11) NOT NULL,
  `status_message` text NOT NULL,
  `date` datetime NOT NULL COMMENT 'job sending time',
  PRIMARY KEY (`id`),
  KEY `sms_id` (`sms_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COMMENT='To log the job wise status while sending SMS';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cn_sms_lang`
--

DROP TABLE IF EXISTS `fg_cn_sms_lang`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cn_sms_lang` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `sms_id` int(11) NOT NULL,
  `language_code` varchar(2) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_fg_cn_sms_publish_lang_fg_club_languages1` (`language_code`),
  KEY `fk_fg_cn_sms_publish_lang_fg_cn_sms1` (`sms_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cn_sms_number_verification`
--

DROP TABLE IF EXISTS `fg_cn_sms_number_verification`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cn_sms_number_verification` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `phone_number` varchar(25) DEFAULT NULL,
  `verfication_code` varchar(45) DEFAULT NULL,
  `contact_id` int(11) NOT NULL,
  `status` tinyint(4) DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `fk_fg_cn_sms_number_verification_fg_cm_contact1` (`contact_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cn_sms_packages`
--

DROP TABLE IF EXISTS `fg_cn_sms_packages`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cn_sms_packages` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) DEFAULT NULL,
  `credits` int(11) DEFAULT NULL,
  `price` decimal(10,2) DEFAULT NULL,
  `visibility` tinyint(1) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='For sms packages information. Independent table';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cn_sms_recipients`
--

DROP TABLE IF EXISTS `fg_cn_sms_recipients`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cn_sms_recipients` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `contact_id` int(11) DEFAULT NULL,
  `created_at` datetime NOT NULL,
  `sms_id` int(11) NOT NULL,
  `status` enum('DELIVERED','FAILED','BUFFERED','SENT','UNCONFIRMED') DEFAULT NULL,
  `status_message` text,
  `actual_sms_content` text,
  `job_id` varchar(255) DEFAULT NULL,
  `phone_number` varchar(45) DEFAULT NULL,
  `field_name` enum('MOBILE','MOBILE2') DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `sms_id` (`sms_id`),
  KEY `contact_id` (`contact_id`),
  KEY `status` (`status`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cn_sms_spool`
--

DROP TABLE IF EXISTS `fg_cn_sms_spool`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cn_sms_spool` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `created_at` datetime NOT NULL,
  `actual_sms_content` text,
  `sms_id` int(11) NOT NULL,
  `job_id` varchar(255) DEFAULT NULL,
  `phone_number` varchar(45) DEFAULT NULL,
  `sender` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `sms_id` (`sms_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cn_sms_team_packages`
--

DROP TABLE IF EXISTS `fg_cn_sms_team_packages`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cn_sms_team_packages` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `club_packages_id` int(11) NOT NULL,
  `team_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_fg_cn_sms_team_packages_fg_cn_sms_club_packages_copy11` (`club_packages_id`),
  KEY `fk_fg_cn_sms_team_packages_fg_rm_role1` (`team_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cn_subscriber`
--

DROP TABLE IF EXISTS `fg_cn_subscriber`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cn_subscriber` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `club_id` int(11) NOT NULL,
  `email` varchar(160) NOT NULL,
  `first_name` varchar(160) NOT NULL,
  `last_name` varchar(160) NOT NULL,
  `company` varchar(160) NOT NULL,
  `gender` enum('Male','Female') NOT NULL,
  `salutation` enum('Informal','Formal') NOT NULL,
  `created_at` datetime NOT NULL,
  `created_by` int(11) DEFAULT NULL,
  `edited_at` datetime DEFAULT NULL,
  `edited_by` int(11) DEFAULT NULL,
  `import_table` varchar(50) NOT NULL,
  `import_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `edited_by` (`edited_by`),
  KEY `club_id` (`club_id`),
  KEY `created_by` (`created_by`),
  CONSTRAINT `fg_cn_subscriber_ibfk_0` FOREIGN KEY (`edited_by`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_cn_subscriber_ibfk_1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE,
  CONSTRAINT `fg_cn_subscriber_ibfk_2` FOREIGN KEY (`created_by`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=774 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_cn_subscriber_log`
--

DROP TABLE IF EXISTS `fg_cn_subscriber_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_cn_subscriber_log` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `subscriber_id` int(11) NOT NULL,
  `club_id` int(11) DEFAULT NULL,
  `newsletter_id` int(11) DEFAULT NULL,
  `date` datetime DEFAULT NULL,
  `kind` enum('data','communication') DEFAULT 'data',
  `field` varchar(255) DEFAULT NULL,
  `value_before` varchar(255) DEFAULT NULL,
  `value_after` varchar(255) DEFAULT NULL,
  `changed_by` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `subscriber_id` (`subscriber_id`),
  KEY `club_id` (`club_id`),
  KEY `changed_by` (`changed_by`),
  KEY `newsletter_id` (`newsletter_id`),
  CONSTRAINT `fg_cn_subscriber_log_ibfk_1` FOREIGN KEY (`subscriber_id`) REFERENCES `fg_cn_subscriber` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_cn_subscriber_log_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_cn_subscriber_log_ibfk_3` FOREIGN KEY (`changed_by`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_cn_subscriber_log_ibfk_4` FOREIGN KEY (`newsletter_id`) REFERENCES `fg_cn_newsletter` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=4090 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_dm_assigment`
--

DROP TABLE IF EXISTS `fg_dm_assigment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_dm_assigment` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '	',
  `document_id` int(11) NOT NULL,
  `document_type` enum('CLUB','TEAM','WORKGROUP','CONTACT','CMS') NOT NULL,
  `club_id` int(11) DEFAULT NULL,
  `contact_id` int(11) DEFAULT NULL,
  `contact_assign_type` enum('MANUAL','FILTER') DEFAULT NULL,
  `role_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_fg_dm_assigment_fg_dm_documents1` (`document_id`),
  KEY `fk_fg_dm_assigment_fg_club1_idx` (`club_id`),
  KEY `fk_fg_dm_assigment_fg_cm_contact1_idx` (`contact_id`),
  KEY `fk_fg_dm_assigment_fg_rm_role1_idx` (`role_id`),
  CONSTRAINT `fk_fg_dm_assigment_fg_club1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_fg_dm_assigment_fg_cm_contact1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_fg_dm_assigment_fg_dm_documents1` FOREIGN KEY (`document_id`) REFERENCES `fg_dm_documents` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fk_fg_dm_assigment_fg_rm_role1` FOREIGN KEY (`role_id`) REFERENCES `fg_rm_role` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=26056 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_dm_assigment_exclude`
--

DROP TABLE IF EXISTS `fg_dm_assigment_exclude`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_dm_assigment_exclude` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `document_id` int(11) NOT NULL,
  `club_id` int(11) DEFAULT NULL,
  `contact_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_fg_dm_assigment_exclude_fg_club1_idx` (`club_id`),
  KEY `fk_fg_dm_assigment_exclude_fg_cm_contact1_idx` (`contact_id`),
  KEY `fk_fg_dm_assigment_exclude_fg_dm_documents1_idx` (`document_id`),
  CONSTRAINT `fk_fg_dm_assigment_exclude_fg_club1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_fg_dm_assigment_exclude_fg_cm_contact1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_fg_dm_assigment_exclude_fg_dm_documents1` FOREIGN KEY (`document_id`) REFERENCES `fg_dm_documents` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=847 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_dm_bookmarks`
--

DROP TABLE IF EXISTS `fg_dm_bookmarks`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_dm_bookmarks` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `club_id` int(11) NOT NULL,
  `contact_id` int(11) NOT NULL,
  `type` enum('CLUB','TEAM','WORKGROUP','CONTACT') NOT NULL,
  `category_id` int(11) NOT NULL,
  `subcategory_id` int(11) NOT NULL,
  `sort_order` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `fk_fg_dm_bookmarks_fg_dm_document_category1_idx` (`category_id`),
  KEY `fk_fg_dm_bookmarks_fg_dm_document_subcategory1_idx` (`subcategory_id`),
  KEY `fk_fg_dm_bookmarks_fg_club1_idx` (`club_id`),
  KEY `fk_fg_dm_bookmarks_fg_cm_contact1_idx` (`contact_id`),
  CONSTRAINT `fk_fg_dm_bookmarks_fg_club1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_fg_dm_bookmarks_fg_cm_contact1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_fg_dm_bookmarks_fg_dm_document_category1` FOREIGN KEY (`category_id`) REFERENCES `fg_dm_document_category` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_fg_dm_bookmarks_fg_dm_document_subcategory1` FOREIGN KEY (`subcategory_id`) REFERENCES `fg_dm_document_subcategory` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=705 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_dm_contact_sighted`
--

DROP TABLE IF EXISTS `fg_dm_contact_sighted`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_dm_contact_sighted` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `document_id` int(11) NOT NULL,
  `contact_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `document_id` (`document_id`),
  KEY `contact_id` (`contact_id`),
  CONSTRAINT `fg_dm_contact_sighted_ibfk_1` FOREIGN KEY (`document_id`) REFERENCES `fg_dm_documents` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_dm_contact_sighted_ibfk_2` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_dm_document_category`
--

DROP TABLE IF EXISTS `fg_dm_document_category`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_dm_document_category` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) DEFAULT NULL,
  `document_type` enum('CLUB','TEAM','WORKGROUP','CONTACT','CMS') DEFAULT 'CLUB',
  `club_id` int(11) NOT NULL,
  `sort_order` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `fg_dm_document_category_ibfk_1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=441 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_dm_document_category_i18n`
--

DROP TABLE IF EXISTS `fg_dm_document_category_i18n`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_dm_document_category_i18n` (
  `id` int(11) NOT NULL,
  `lang` char(2) NOT NULL,
  `title_lang` varchar(160) DEFAULT NULL,
  PRIMARY KEY (`id`,`lang`),
  KEY `fk_fg_dm_document_category_i18n_fg_dm_document_category1_idx` (`id`),
  CONSTRAINT `fk_fg_dm_document_category_i18n_fg_dm_document_category1` FOREIGN KEY (`id`) REFERENCES `fg_dm_document_category` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_dm_document_log`
--

DROP TABLE IF EXISTS `fg_dm_document_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_dm_document_log` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `club_id` int(11) NOT NULL,
  `document_type` enum('CLUB','TEAM','WORKGROUP','CONTACT','CMS') DEFAULT NULL,
  `documents_id` int(11) NOT NULL,
  `date` datetime DEFAULT NULL,
  `kind` enum('data','deposited_with','visible_for','visible_for_contact','included','excluded','filter') DEFAULT NULL,
  `field` varchar(255) DEFAULT NULL,
  `value_after` text,
  `value_before` text,
  `value_before_id` text,
  `value_after_id` text,
  `changed_by` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_fg_dm_document_log_fg_dm_documents1_idx` (`documents_id`),
  KEY `fk_fg_dm_document_log_fg_club1_idx` (`club_id`),
  KEY `fk_fg_dm_document_log_fg_cm_contact1_idx` (`changed_by`),
  CONSTRAINT `fk_fg_dm_document_log_fg_club1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_fg_dm_document_log_fg_cm_contact1` FOREIGN KEY (`changed_by`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_fg_dm_document_log_fg_dm_documents1` FOREIGN KEY (`documents_id`) REFERENCES `fg_dm_documents` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=10174 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_dm_document_subcategory`
--

DROP TABLE IF EXISTS `fg_dm_document_subcategory`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_dm_document_subcategory` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `club_id` int(11) NOT NULL,
  `category_id` int(11) NOT NULL,
  `title` varchar(160) DEFAULT NULL,
  `document_type` enum('CLUB','TEAM','WORKGROUP','CONTACT','CMS') DEFAULT 'CLUB',
  `sort_order` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_fg_dm_document_subcategory_fg_club1_idx` (`club_id`),
  KEY `fk_fg_dm_document_subcategory_fg_dm_document_category1_idx` (`category_id`),
  CONSTRAINT `fk_fg_dm_document_subcategory_fg_club1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_fg_dm_document_subcategory_fg_dm_document_category1` FOREIGN KEY (`category_id`) REFERENCES `fg_dm_document_category` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=559 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_dm_document_subcategory_i18n`
--

DROP TABLE IF EXISTS `fg_dm_document_subcategory_i18n`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_dm_document_subcategory_i18n` (
  `id` int(11) NOT NULL,
  `lang` char(2) NOT NULL,
  `title_lang` varchar(160) DEFAULT NULL,
  PRIMARY KEY (`id`,`lang`),
  KEY `fk_fg_dm_document_subcategory_i18n_fg_dm_document_subcatego_idx` (`id`),
  CONSTRAINT `fk_fg_dm_document_subcategory_i18n_fg_dm_document_subcategory1` FOREIGN KEY (`id`) REFERENCES `fg_dm_document_subcategory` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_dm_documents`
--

DROP TABLE IF EXISTS `fg_dm_documents`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_dm_documents` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `club_id` int(11) NOT NULL,
  `category_id` int(11) NOT NULL,
  `subcategory_id` int(11) NOT NULL,
  `name` varchar(160) DEFAULT NULL,
  `description` text,
  `author` varchar(160) DEFAULT NULL,
  `current_revision` int(11) DEFAULT NULL,
  `filter` text,
  `document_type` enum('CLUB','TEAM','WORKGROUP','CONTACT','CMS') NOT NULL DEFAULT 'CLUB',
  `deposited_with` enum('ALL','SELECTED','NONE') NOT NULL DEFAULT 'NONE',
  `visible_for` enum('none','team','team_functions','team_admin','club_contact_admin','workgroup','workgroup_admin','main_document_admin') DEFAULT 'none',
  `is_visible_to_contact` int(1) DEFAULT '0',
  `function_sel` enum('ALL','SELECTED') DEFAULT 'SELECTED',
  PRIMARY KEY (`id`),
  UNIQUE KEY `current_revison_UNIQUE` (`current_revision`),
  KEY `fk_fg_dm_documents_fg_dm_document_subcategory1_idx` (`subcategory_id`),
  KEY `fk_fg_dm_documents_fg_club1_idx` (`club_id`),
  KEY `fk_fg_dm_documents_fg_dm_document_category1_idx` (`category_id`,`id`),
  CONSTRAINT `fg_dm_documents_ibfk_1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_dm_documents_ibfk_2` FOREIGN KEY (`current_revision`) REFERENCES `fg_dm_version` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_dm_documents_ibfk_3` FOREIGN KEY (`category_id`) REFERENCES `fg_dm_document_category` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_dm_documents_ibfk_4` FOREIGN KEY (`subcategory_id`) REFERENCES `fg_dm_document_subcategory` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=3112 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_dm_documents_i18n`
--

DROP TABLE IF EXISTS `fg_dm_documents_i18n`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_dm_documents_i18n` (
  `id` int(11) NOT NULL,
  `lang` char(2) NOT NULL,
  `name_lang` varchar(160) DEFAULT NULL,
  `description_lang` text,
  `author_lang` varchar(160) DEFAULT NULL,
  PRIMARY KEY (`lang`,`id`),
  KEY `fk_fg_dm_documents_i18n_fg_dm_documents1_idx` (`id`),
  CONSTRAINT `fk_fg_dm_documents_i18n_fg_dm_documents1` FOREIGN KEY (`id`) REFERENCES `fg_dm_documents` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_dm_media_manager`
--

DROP TABLE IF EXISTS `fg_dm_media_manager`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_dm_media_manager` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `club_id` int(11) NOT NULL,
  `directory` enum('pages','news','teams') NOT NULL,
  `sub_directory` enum('files','images','flash') NOT NULL,
  `name` varchar(255) NOT NULL,
  `file_name` varchar(255) NOT NULL,
  `size` bigint(20) NOT NULL,
  `type` varchar(25) NOT NULL,
  `author` int(11) NOT NULL,
  `last_updated` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `club_id` (`club_id`,`author`),
  KEY `author` (`author`),
  CONSTRAINT `fg_dm_media_manager_ibfk_1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_dm_media_manager_ibfk_2` FOREIGN KEY (`author`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_dm_team_functions`
--

DROP TABLE IF EXISTS `fg_dm_team_functions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_dm_team_functions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `document_id` int(11) NOT NULL,
  `function_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `document_id` (`document_id`),
  KEY `function_id` (`function_id`),
  CONSTRAINT `fg_dm_team_functions_ibfk_1` FOREIGN KEY (`document_id`) REFERENCES `fg_dm_documents` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_dm_team_functions_ibfk_2` FOREIGN KEY (`function_id`) REFERENCES `fg_rm_function` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=150 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_dm_version`
--

DROP TABLE IF EXISTS `fg_dm_version`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_dm_version` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `document_id` int(11) NOT NULL,
  `file` varchar(255) DEFAULT NULL,
  `created_at` datetime DEFAULT NULL,
  `created_by` int(11) NOT NULL,
  `updated_at` datetime DEFAULT NULL,
  `sort_order` int(11) DEFAULT NULL,
  `size` int(11) NOT NULL,
  `updated_by` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `sort_order` (`sort_order`),
  KEY `fg_dm_version_dm_documents1` (`document_id`),
  KEY `fk_fg_dm_version_fg_cm_contact1_idx` (`created_by`),
  KEY `fk_fg_dm_version_fg_cm_contact2_idx` (`updated_by`),
  CONSTRAINT `fg_dm_version_dm_documents1` FOREIGN KEY (`document_id`) REFERENCES `fg_dm_documents` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fk_fg_dm_version_fg_cm_contact1` FOREIGN KEY (`created_by`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_fg_dm_version_fg_cm_contact2` FOREIGN KEY (`updated_by`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=3511 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_dn_club_domains`
--

DROP TABLE IF EXISTS `fg_dn_club_domains`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_dn_club_domains` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `club_id` int(11) NOT NULL,
  `domain` varchar(256) DEFAULT NULL,
  `is_default` tinyint(1) NOT NULL DEFAULT '0',
  `domain_type` enum('main','addon') DEFAULT 'main',
  `mail_requester_id` int(11) DEFAULT NULL,
  `mail_request_status` enum('NONE','REQUEST','DELETEREQUEST','CONFIRMED') NOT NULL DEFAULT 'NONE',
  PRIMARY KEY (`id`),
  KEY `club_id` (`club_id`),
  KEY `mail_requester_id` (`mail_requester_id`),
  KEY `domain_idx` (`domain`(255)),
  CONSTRAINT `fg_dn_club_domains_ibfk_1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_dn_club_domains_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_dn_club_domains_ibfk_3` FOREIGN KEY (`mail_requester_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_filter`
--

DROP TABLE IF EXISTS `fg_filter`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_filter` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) DEFAULT NULL,
  `type` enum('general','role') NOT NULL DEFAULT 'general',
  `table_attributes` int(255) DEFAULT NULL,
  `table_rows` int(11) DEFAULT NULL,
  `contact_id` int(11) NOT NULL,
  `club_id` int(11) NOT NULL,
  `updated_at` datetime NOT NULL,
  `filter_data` text NOT NULL,
  `is_broken` tinyint(1) NOT NULL DEFAULT '0',
  `sort_order` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_fg_fiter_fg_contact1` (`contact_id`),
  KEY `club_id` (`club_id`),
  KEY `table_attributes` (`table_attributes`),
  CONSTRAINT `fg_filter_ibfk_1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_filter_ibfk_2` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_filter_ibfk_3` FOREIGN KEY (`table_attributes`) REFERENCES `fg_table_settings` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=1591 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_first_contact_type`
--

DROP TABLE IF EXISTS `fg_first_contact_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_first_contact_type` (
  `id` int(11) NOT NULL,
  `title` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_mail_message`
--

DROP TABLE IF EXISTS `fg_mail_message`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_mail_message` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `newsletter_id` int(11) DEFAULT NULL,
  `receiver_log_id` int(11) DEFAULT NULL,
  `email` varchar(255) DEFAULT NULL,
  `email_flag` varchar(255) NOT NULL,
  `salutation` varchar(255) DEFAULT NULL,
  `admin_receiver_id` int(11) DEFAULT NULL,
  `cron_instance` tinyint(1) NOT NULL DEFAULT '1',
  `user_culture` enum('de','en') NOT NULL DEFAULT 'de',
  `priority` int(11) NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `newsletter_id_2` (`newsletter_id`,`email`,`salutation`),
  KEY `newsletter_id` (`newsletter_id`),
  KEY `receiver_log_id` (`receiver_log_id`),
  CONSTRAINT `fg_mail_message_ibfk_1` FOREIGN KEY (`newsletter_id`) REFERENCES `fg_cn_newsletter` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_mail_message_ibfk_2` FOREIGN KEY (`receiver_log_id`) REFERENCES `fg_cn_newsletter_receiver_log` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=12276 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_mb_club_modules`
--

DROP TABLE IF EXISTS `fg_mb_club_modules`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_mb_club_modules` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `club_id` int(11) NOT NULL,
  `module_id` int(11) NOT NULL,
  `is_cost_onetime` tinyint(4) DEFAULT NULL,
  `cost_onetime` float DEFAULT NULL,
  `is_cost_yearly` tinyint(4) DEFAULT NULL,
  `cost_yearly` float DEFAULT NULL,
  `invoice_amount` float DEFAULT NULL,
  `signed_on` datetime DEFAULT NULL,
  `signed_by` int(11) NOT NULL,
  `is_module_active` tinyint(1) DEFAULT NULL,
  `backend_terms` enum('0','1') NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `fk_fg_mb_club_modules_fg_club1` (`club_id`),
  KEY `fk_fg_mb_club_modules_fg_mb_module1` (`module_id`),
  KEY `fk_fg_mb_club_modules_fg_cm_contact1` (`signed_by`),
  KEY `club_id` (`club_id`,`module_id`),
  CONSTRAINT `fg_mb_club_modules_ibfk_1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fk_fg_mb_club_modules_fg_cm_contact1` FOREIGN KEY (`signed_by`) REFERENCES `fg_cm_contact` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_fg_mb_club_modules_fg_mb_module1` FOREIGN KEY (`module_id`) REFERENCES `fg_mb_module` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=472 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_mb_module`
--

DROP TABLE IF EXISTS `fg_mb_module`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_mb_module` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) DEFAULT NULL,
  `module_key` enum('sponsor','frontend1','frontend2','invoice','additionallang','communication','webhosting','document') NOT NULL,
  `sort_order` int(11) NOT NULL,
  `is_visible` tinyint(4) NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `is_visible` (`is_visible`)
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_message`
--

DROP TABLE IF EXISTS `fg_message`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_message` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `club_id` int(11) DEFAULT NULL,
  `answer_to` enum('ALL','MYSELF') NOT NULL DEFAULT 'MYSELF',
  `message_type` enum('CONVERSATION','GROUP') DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `fg_message_ibfk_1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_message_attachments`
--

DROP TABLE IF EXISTS `fg_message_attachments`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_message_attachments` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `message_data_id` int(11) NOT NULL,
  `file` varchar(999) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_fg_message_attachments_fg_message_data1` (`message_data_id`),
  CONSTRAINT `fk_fg_message_attachments_fg_message_data1` FOREIGN KEY (`message_data_id`) REFERENCES `fg_message_data` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_message_data`
--

DROP TABLE IF EXISTS `fg_message_data`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_message_data` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `message_id` int(11) DEFAULT NULL,
  `thread_id` int(11) DEFAULT NULL,
  `sender_id` int(11) DEFAULT NULL,
  `subject` varchar(255) DEFAULT NULL,
  `message` text,
  `is_read` tinyint(4) DEFAULT NULL,
  `updated_at` datetime NOT NULL,
  `is_deleted` tinyint(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `fk_fg_message_data_fg_message_thread1` (`thread_id`),
  KEY `fk_fg_message_data_fg_message1` (`message_id`),
  KEY `sender_id` (`sender_id`),
  CONSTRAINT `fg_message_data_ibfk_2` FOREIGN KEY (`message_id`) REFERENCES `fg_message` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_message_data_ibfk_3` FOREIGN KEY (`thread_id`) REFERENCES `fg_message_thread` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_message_data_ibfk_4` FOREIGN KEY (`sender_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_message_receivers`
--

DROP TABLE IF EXISTS `fg_message_receivers`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_message_receivers` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `club_id` int(11) DEFAULT NULL,
  `contact_id` int(11) DEFAULT NULL,
  `message_id` int(11) DEFAULT NULL,
  `team_id` int(11) DEFAULT NULL,
  `function_id` int(11) DEFAULT NULL,
  `is_read` tinyint(4) DEFAULT NULL,
  `read_at` datetime NOT NULL,
  `is_deleted` tinyint(4) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_fg_message_receivers_fg_message1` (`message_id`),
  KEY `team_id` (`team_id`),
  KEY `contact_id` (`contact_id`),
  KEY `function_id` (`function_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `fg_message_receivers_ibfk_2` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE,
  CONSTRAINT `fg_message_receivers_ibfk_3` FOREIGN KEY (`message_id`) REFERENCES `fg_message` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_message_receivers_ibfk_4` FOREIGN KEY (`team_id`) REFERENCES `fg_rm_role` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_message_receivers_ibfk_5` FOREIGN KEY (`function_id`) REFERENCES `fg_rm_function` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_message_receivers_ibfk_6` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_message_thread`
--

DROP TABLE IF EXISTS `fg_message_thread`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_message_thread` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `message_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `message_id` (`message_id`),
  CONSTRAINT `fg_message_thread_ibfk_1` FOREIGN KEY (`message_id`) REFERENCES `fg_message` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_rm_category`
--

DROP TABLE IF EXISTS `fg_rm_category`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_rm_category` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `club_id` int(11) DEFAULT NULL,
  `title` varchar(255) DEFAULT NULL,
  `contact_assign` enum('manual','filter-driven') DEFAULT 'manual',
  `role_assign` enum('multiple','single') DEFAULT 'multiple',
  `function_assign` enum('same','individual','none') DEFAULT 'none',
  `is_active` tinyint(1) DEFAULT '1',
  `is_team` tinyint(1) NOT NULL DEFAULT '0',
  `is_workgroup` tinyint(1) NOT NULL DEFAULT '0',
  `sort_order` int(11) NOT NULL DEFAULT '0',
  `is_allowed_fedmember_subfed` tinyint(1) NOT NULL DEFAULT '0',
  `is_allowed_fedmember_club` tinyint(1) NOT NULL DEFAULT '0',
  `is_required_fedmember_subfed` tinyint(1) NOT NULL DEFAULT '0',
  `is_required_fedmember_club` tinyint(1) NOT NULL DEFAULT '0',
  `is_fed_category` tinyint(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `fk_fg_rm_category_fg_club1` (`club_id`),
  KEY `index_category` (`is_active`,`is_team`,`is_workgroup`),
  CONSTRAINT `fk_fg_rm_category_fg_club1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=2276 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_rm_category_i18n`
--

DROP TABLE IF EXISTS `fg_rm_category_i18n`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_rm_category_i18n` (
  `id` int(11) NOT NULL DEFAULT '0',
  `title_lang` varchar(255) DEFAULT NULL,
  `lang` char(2) NOT NULL DEFAULT '',
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`,`lang`),
  CONSTRAINT `fg_rm_category_i18n_id_fg_rm_category_id` FOREIGN KEY (`id`) REFERENCES `fg_rm_category` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_rm_category_role_function`
--

DROP TABLE IF EXISTS `fg_rm_category_role_function`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_rm_category_role_function` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `category_id` int(11) NOT NULL,
  `role_id` int(11) NOT NULL,
  `function_id` int(11) DEFAULT NULL,
  `club_id` int(11) DEFAULT NULL,
  `fn_count` int(11) DEFAULT '0',
  PRIMARY KEY (`id`),
  UNIQUE KEY `category_id` (`category_id`,`role_id`,`function_id`,`club_id`),
  KEY `function_id` (`function_id`),
  KEY `role_id` (`role_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `fg_rm_category_role_function_ibfk_1` FOREIGN KEY (`category_id`) REFERENCES `fg_rm_category` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_rm_category_role_function_ibfk_2` FOREIGN KEY (`role_id`) REFERENCES `fg_rm_role` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_rm_category_role_function_ibfk_3` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_rm_category_role_function_ibfk_4` FOREIGN KEY (`function_id`) REFERENCES `fg_rm_function` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=14521 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_rm_function`
--

DROP TABLE IF EXISTS `fg_rm_function`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_rm_function` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `category_id` int(11) NOT NULL,
  `title` varchar(255) DEFAULT NULL,
  `is_active` tinyint(1) DEFAULT '1',
  `is_visible` tinyint(1) DEFAULT '1',
  `sort_order` int(11) NOT NULL,
  `is_federation` tinyint(1) NOT NULL DEFAULT '0',
  `is_required_assignment` tinyint(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `fk_fg_rm_function_fg_rm_category1` (`category_id`),
  CONSTRAINT `fk_fg_rm_function_fg_rm_category1` FOREIGN KEY (`category_id`) REFERENCES `fg_rm_category` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=7094 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_rm_function_i18n`
--

DROP TABLE IF EXISTS `fg_rm_function_i18n`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_rm_function_i18n` (
  `id` int(11) NOT NULL DEFAULT '0',
  `title_lang` varchar(255) DEFAULT NULL,
  `lang` char(2) NOT NULL DEFAULT '',
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`,`lang`),
  CONSTRAINT `fg_rm_function_i18n_id_fg_rm_function_id` FOREIGN KEY (`id`) REFERENCES `fg_rm_function` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_rm_function_log`
--

DROP TABLE IF EXISTS `fg_rm_function_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_rm_function_log` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `club_id` int(11) NOT NULL,
  `role_id` int(11) DEFAULT NULL,
  `function_id` int(11) DEFAULT NULL,
  `date` datetime DEFAULT NULL,
  `kind` enum('data','assigned contacts') DEFAULT NULL,
  `field` varchar(255) DEFAULT NULL,
  `value_before` text,
  `value_after` text,
  `changed_by` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_fg_rm_function_log_fg_cm_contact1` (`changed_by`),
  KEY `fk_fg_rm_function_log_fg_rm_role1` (`role_id`),
  KEY `fk_fg_rm_function_log_fg_rm_function1` (`function_id`),
  CONSTRAINT `fg_rm_function_log_ibfk_1` FOREIGN KEY (`role_id`) REFERENCES `fg_rm_role` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_rm_function_log_ibfk_2` FOREIGN KEY (`function_id`) REFERENCES `fg_rm_function` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_rm_function_log_ibfk_3` FOREIGN KEY (`changed_by`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=45447 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_rm_role`
--

DROP TABLE IF EXISTS `fg_rm_role`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_rm_role` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `category_id` int(11) NOT NULL,
  `title` varchar(255) DEFAULT NULL,
  `is_active` tinyint(1) DEFAULT '1',
  `is_executive_board` tinyint(1) unsigned DEFAULT '0',
  `sort_order` int(11) NOT NULL DEFAULT '0',
  `club_id` int(11) NOT NULL,
  `team_category_id` int(11) DEFAULT NULL,
  `description` text,
  `image` varchar(255) DEFAULT NULL,
  `type` enum('G','T','W') NOT NULL DEFAULT 'G',
  `filter_id` int(11) DEFAULT NULL,
  `filter_updated` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_fg_rm_role_function_fg_rm_category1` (`category_id`),
  KEY `fk_fg_rm_role_fg_club1` (`club_id`),
  KEY `team_category_id` (`team_category_id`),
  KEY `is_executive_board` (`is_executive_board`),
  KEY `filter_id` (`filter_id`),
  CONSTRAINT `fg_rm_role_ibfk_3` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_rm_role_ibfk_4` FOREIGN KEY (`team_category_id`) REFERENCES `fg_team_category` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_rm_role_ibfk_5` FOREIGN KEY (`filter_id`) REFERENCES `fg_filter` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_fg_rm_role_function_fg_rm_category1` FOREIGN KEY (`category_id`) REFERENCES `fg_rm_category` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=5659 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_rm_role_contact`
--

DROP TABLE IF EXISTS `fg_rm_role_contact`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_rm_role_contact` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `contact_id` int(11) NOT NULL,
  `fg_rm_crf_id` int(11) NOT NULL,
  `assined_club_id` int(11) DEFAULT NULL,
  `contact_club_id` int(11) DEFAULT NULL,
  `update_type` enum('R','F') DEFAULT NULL COMMENT 'for identifying updated values on duplicate key',
  `update_count` int(11) NOT NULL DEFAULT '0' COMMENT 'for identifying updated values on duplicate key',
  `update_time` datetime DEFAULT NULL COMMENT 'for identifying updated values on duplicate key',
  PRIMARY KEY (`id`),
  UNIQUE KEY `contact_id` (`contact_id`,`fg_rm_crf_id`),
  KEY `fk_fg_rm_role_contact_fg_contact1` (`contact_id`),
  KEY `fk_fg_rm_role_contact_fg_rm_category_role_function1` (`fg_rm_crf_id`),
  KEY `assined_club_id` (`assined_club_id`),
  KEY `contact_club_id` (`contact_club_id`),
  CONSTRAINT `fg_rm_role_contact_ibfk_1` FOREIGN KEY (`fg_rm_crf_id`) REFERENCES `fg_rm_category_role_function` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_rm_role_contact_ibfk_2` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_rm_role_contact_ibfk_3` FOREIGN KEY (`assined_club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_rm_role_contact_ibfk_4` FOREIGN KEY (`contact_club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=167595 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_rm_role_function`
--

DROP TABLE IF EXISTS `fg_rm_role_function`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_rm_role_function` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `function_id` int(11) NOT NULL,
  `role_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_fg_rm_role_function_fg_rm_role1` (`role_id`),
  KEY `fk_fg_rm_role_function_fg_rm_function1` (`function_id`),
  CONSTRAINT `fk_fg_rm_role_function_fg_rm_function1` FOREIGN KEY (`function_id`) REFERENCES `fg_rm_function` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fk_fg_rm_role_function_fg_rm_role1` FOREIGN KEY (`role_id`) REFERENCES `fg_rm_role` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=25574 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_rm_role_i18n`
--

DROP TABLE IF EXISTS `fg_rm_role_i18n`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_rm_role_i18n` (
  `id` int(11) NOT NULL DEFAULT '0',
  `title_lang` varchar(255) DEFAULT NULL,
  `description_lang` text,
  `lang` char(2) NOT NULL DEFAULT '',
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`,`lang`),
  CONSTRAINT `fg_rm_role_i18n_id_fg_rm_role_id` FOREIGN KEY (`id`) REFERENCES `fg_rm_role` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_rm_role_log`
--

DROP TABLE IF EXISTS `fg_rm_role_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_rm_role_log` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `club_id` int(11) NOT NULL,
  `role_id` int(11) NOT NULL,
  `date` datetime DEFAULT NULL,
  `kind` enum('data','user rights','team category','assigned contacts','sponsor services') DEFAULT NULL,
  `field` varchar(255) DEFAULT NULL,
  `value_before` text,
  `value_after` text,
  `changed_by` int(11) DEFAULT NULL,
  `historical_id` int(11) DEFAULT NULL,
  `is_historical` tinyint(1) NOT NULL DEFAULT '0',
  `contactlog_id` int(11) DEFAULT NULL,
  `booking_id` int(11) DEFAULT NULL,
  `import_table` varchar(50) DEFAULT NULL,
  `import_contact` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_fg_rm_role_log_fg_rm_role1` (`role_id`),
  KEY `fk_fg_rm_role_log_fg_cm_contact1` (`changed_by`),
  KEY `contactlog_id` (`contactlog_id`),
  KEY `booking_id` (`booking_id`),
  CONSTRAINT `fg_rm_role_log_ibfk_1` FOREIGN KEY (`role_id`) REFERENCES `fg_rm_role` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_rm_role_log_ibfk_2` FOREIGN KEY (`changed_by`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_rm_role_log_ibfk_4` FOREIGN KEY (`contactlog_id`) REFERENCES `fg_cm_change_log` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=200490 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_rm_role_manual_contacts`
--

DROP TABLE IF EXISTS `fg_rm_role_manual_contacts`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_rm_role_manual_contacts` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `role_id` int(11) NOT NULL,
  `contact_id` int(11) NOT NULL,
  `type` enum('included','excluded') NOT NULL DEFAULT 'included',
  PRIMARY KEY (`id`),
  KEY `role_id` (`role_id`),
  KEY `contact_id` (`contact_id`),
  CONSTRAINT `fg_rm_role_manual_contacts_ibfk_1` FOREIGN KEY (`role_id`) REFERENCES `fg_rm_role` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_rm_role_manual_contacts_ibfk_2` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=3397 DEFAULT CHARSET=utf8 ROW_FORMAT=FIXED;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_sm_ad_area`
--

DROP TABLE IF EXISTS `fg_sm_ad_area`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_sm_ad_area` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `club_id` int(11) NOT NULL,
  `is_system` tinyint(1) NOT NULL DEFAULT '0',
  `title` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_fg_sm_ad_area_fg_club1_idx` (`club_id`),
  CONSTRAINT `fk_fg_sm_ad_area_fg_club1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=105 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_sm_booking_deposited`
--

DROP TABLE IF EXISTS `fg_sm_booking_deposited`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_sm_booking_deposited` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `booking_id` int(11) NOT NULL,
  `contact_id` int(11) DEFAULT NULL,
  `role_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_fg_sm_booking_deposited_fg_cm_contact1_idx` (`contact_id`),
  KEY `fk_fg_sm_booking_deposited_fg_rm_role1_idx` (`role_id`),
  KEY `fk_fg_sm_booking_deposited_fg_sm_bookings1_idx` (`booking_id`),
  CONSTRAINT `fk_fg_sm_booking_deposited_fg_cm_contact1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_fg_sm_booking_deposited_fg_rm_role1` FOREIGN KEY (`role_id`) REFERENCES `fg_rm_role` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_fg_sm_booking_deposited_fg_sm_bookings1` FOREIGN KEY (`booking_id`) REFERENCES `fg_sm_bookings` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=868 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_sm_bookings`
--

DROP TABLE IF EXISTS `fg_sm_bookings`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_sm_bookings` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `category_id` int(11) NOT NULL,
  `service_id` int(11) NOT NULL,
  `contact_id` int(11) NOT NULL,
  `club_id` int(11) NOT NULL,
  `begin_date` datetime DEFAULT NULL,
  `end_date` datetime DEFAULT NULL,
  `payment_plan` enum('none','regular','custom') DEFAULT 'none',
  `first_payment_date` datetime DEFAULT NULL,
  `last_payment_date` datetime DEFAULT NULL,
  `repetition_months` smallint(2) DEFAULT NULL,
  `amount` decimal(10,2) DEFAULT NULL,
  `discount_type` enum('P','A','N') DEFAULT NULL,
  `discount` decimal(10,2) DEFAULT NULL,
  `created_at` date DEFAULT NULL,
  `created_by` int(11) NOT NULL,
  `updated_at` date DEFAULT NULL,
  `updated_by` int(11) DEFAULT NULL,
  `timestamp` varchar(15) DEFAULT NULL,
  `is_deleted` tinyint(1) NOT NULL DEFAULT '0',
  `is_skipped` int(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `service_id` (`service_id`),
  KEY `contact_id` (`contact_id`),
  KEY `club_id` (`club_id`),
  KEY `fk_fg_sm_bookings_fg_sm_category1_idx` (`category_id`),
  KEY `fk_fg_sm_bookings_fg_cm_contact1_idx` (`created_by`),
  KEY `fk_fg_sm_bookings_fg_cm_contact2_idx` (`updated_by`),
  CONSTRAINT `fg_sm_bookings_ibfk_10` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_sm_bookings_ibfk_6` FOREIGN KEY (`service_id`) REFERENCES `fg_sm_services` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_sm_bookings_ibfk_8` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_fg_sm_bookings_fg_cm_contact1` FOREIGN KEY (`created_by`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_fg_sm_bookings_fg_cm_contact2` FOREIGN KEY (`updated_by`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_fg_sm_bookings_fg_sm_category1` FOREIGN KEY (`category_id`) REFERENCES `fg_sm_category` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=1845 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_sm_bookmarks`
--

DROP TABLE IF EXISTS `fg_sm_bookmarks`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_sm_bookmarks` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `club_id` int(11) NOT NULL,
  `contact_id` int(11) NOT NULL,
  `type` enum('service','prospect','future_sponsor','active_sponsor','former_sponsor','single_person','company','active_assignments','former_assignments','future_assignments','recently_ended') NOT NULL,
  `services_id` int(11) DEFAULT NULL,
  `sort_order` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `fk_fg_sm_bookmarks_fg_club1_idx` (`club_id`),
  KEY `fk_fg_sm_bookmarks_fg_sm_services1_idx` (`services_id`),
  KEY `fk_fg_sm_bookmarks_fg_cm_contact1_idx` (`contact_id`),
  CONSTRAINT `fk_fg_sm_bookmarks_fg_club1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_fg_sm_bookmarks_fg_cm_contact1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_fg_sm_bookmarks_fg_sm_services1` FOREIGN KEY (`services_id`) REFERENCES `fg_sm_services` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=253 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_sm_category`
--

DROP TABLE IF EXISTS `fg_sm_category`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_sm_category` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `club_id` int(11) NOT NULL,
  `is_system` tinyint(1) NOT NULL DEFAULT '0',
  `title` varchar(255) DEFAULT NULL,
  `sort_order` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `fg_sm_category_ibfk_1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=156 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_sm_paymentplans`
--

DROP TABLE IF EXISTS `fg_sm_paymentplans`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_sm_paymentplans` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `booking_id` int(11) NOT NULL,
  `date` datetime NOT NULL,
  `amount` decimal(10,2) DEFAULT NULL,
  `discount_type` enum('P','A','N') DEFAULT 'N',
  `discount` decimal(10,2) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `booking_id` (`booking_id`),
  CONSTRAINT `fg_sm_paymentplans_ibfk_1` FOREIGN KEY (`booking_id`) REFERENCES `fg_sm_bookings` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=13955 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_sm_services`
--

DROP TABLE IF EXISTS `fg_sm_services`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_sm_services` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `club_id` int(11) NOT NULL,
  `category_id` int(11) NOT NULL,
  `title` varchar(255) DEFAULT NULL,
  `description` text,
  `price` decimal(10,2) DEFAULT NULL,
  `service_type` enum('club','team','contact') NOT NULL,
  `payment_plan` enum('none','regular','custom') DEFAULT 'none',
  `repetition_months` smallint(2) DEFAULT NULL,
  `sort_order` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `club_id` (`club_id`),
  KEY `category_id` (`category_id`),
  CONSTRAINT `fg_sm_services_ibfk_4` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fg_sm_services_ibfk_5` FOREIGN KEY (`category_id`) REFERENCES `fg_sm_category` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=437 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_sm_services_i18n`
--

DROP TABLE IF EXISTS `fg_sm_services_i18n`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_sm_services_i18n` (
  `id` int(11) NOT NULL,
  `lang` char(2) NOT NULL DEFAULT '',
  `title_lang` varchar(255) DEFAULT NULL,
  `description_lang` text,
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`,`lang`),
  KEY `fk_fg_sm_services_i18n_fg_sm_services1_idx` (`id`),
  CONSTRAINT `fk_fg_sm_services_i18n_fg_sm_services1` FOREIGN KEY (`id`) REFERENCES `fg_sm_services` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_sm_services_log`
--

DROP TABLE IF EXISTS `fg_sm_services_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_sm_services_log` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `club_id` int(11) NOT NULL,
  `service_id` int(11) NOT NULL,
  `date` datetime DEFAULT NULL,
  `kind` enum('data','assignment') DEFAULT NULL,
  `field` varchar(255) DEFAULT NULL,
  `value_before` text,
  `value_after` text,
  `changed_by` int(11) NOT NULL,
  `action_type` enum('assigned','changed','stopped','deleted','skipped') DEFAULT NULL,
  `sponsor_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_fg_sm_services_log_fg_cm_contact1_idx` (`sponsor_id`),
  KEY `fk_fg_sm_services_log_fg_club1_idx` (`club_id`),
  KEY `fk_fg_sm_services_log_fg_cm_contact2_idx` (`changed_by`),
  KEY `fk_fg_sm_services_log_fg_sm_services1_idx` (`service_id`),
  CONSTRAINT `fk_fg_sm_services_log_fg_club1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_fg_sm_services_log_fg_cm_contact1` FOREIGN KEY (`sponsor_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_fg_sm_services_log_fg_cm_contact2` FOREIGN KEY (`changed_by`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_fg_sm_services_log_fg_sm_services1` FOREIGN KEY (`service_id`) REFERENCES `fg_sm_services` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=4263 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_sm_sponsor_ads`
--

DROP TABLE IF EXISTS `fg_sm_sponsor_ads`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_sm_sponsor_ads` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `club_id` int(11) NOT NULL,
  `contact_id` int(11) NOT NULL,
  `ad_area_id` int(11) DEFAULT NULL,
  `description` text,
  `image` varchar(255) DEFAULT NULL,
  `url` varchar(255) DEFAULT NULL,
  `image_size` int(11) DEFAULT NULL,
  `is_default` tinyint(1) DEFAULT '0',
  `sort_order` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_fg_sm_sponsor_ads_fg_cm_contact1_idx` (`contact_id`),
  KEY `fk_fg_sm_sponsor_ads_fg_sm_ad_area1_idx` (`ad_area_id`),
  KEY `fk_fg_sm_sponsor_ads_fg_club1_idx` (`club_id`),
  CONSTRAINT `fk_fg_sm_sponsor_ads_fg_club1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_fg_sm_sponsor_ads_fg_cm_contact1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_fg_sm_sponsor_ads_fg_sm_ad_area1` FOREIGN KEY (`ad_area_id`) REFERENCES `fg_sm_ad_area` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=985 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_sm_sponsor_log`
--

DROP TABLE IF EXISTS `fg_sm_sponsor_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_sm_sponsor_log` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `club_id` int(11) NOT NULL,
  `contact_id` int(11) NOT NULL,
  `category_id` int(11) NOT NULL,
  `service_id` int(11) NOT NULL,
  `date` datetime DEFAULT NULL,
  `kind` enum('assignment') DEFAULT 'assignment',
  `action_type` enum('assigned','changed','stopped','deleted') DEFAULT NULL,
  `changed_by` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_fg_sm_sponsor_log_fg_club1_idx` (`club_id`),
  KEY `fk_fg_sm_sponsor_log_fg_sm_services1_idx` (`service_id`),
  KEY `fk_fg_sm_sponsor_log_fg_sm_category1_idx` (`category_id`),
  KEY `fk_fg_sm_sponsor_log_fg_cm_contact1_idx` (`changed_by`),
  KEY `fk_fg_sm_sponsor_log_fg_cm_contact2_idx` (`contact_id`),
  CONSTRAINT `fk_fg_sm_sponsor_log_fg_club1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_fg_sm_sponsor_log_fg_cm_contact1` FOREIGN KEY (`changed_by`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_fg_sm_sponsor_log_fg_cm_contact2` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_fg_sm_sponsor_log_fg_sm_category1` FOREIGN KEY (`category_id`) REFERENCES `fg_sm_category` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `fk_fg_sm_sponsor_log_fg_sm_services1` FOREIGN KEY (`service_id`) REFERENCES `fg_sm_services` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=2192 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_subcategorisation`
--

DROP TABLE IF EXISTS `fg_subcategorisation`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_subcategorisation` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `subsubcategory_name` varchar(45) DEFAULT NULL,
  `fg_categorisation_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `fg_categorisation_id` (`fg_categorisation_id`),
  CONSTRAINT `fg_subcategorisation_ibfk_1` FOREIGN KEY (`fg_categorisation_id`) REFERENCES `fg_categorisation` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_subsubcategorisation`
--

DROP TABLE IF EXISTS `fg_subsubcategorisation`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_subsubcategorisation` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `subsubcategory_name` varchar(45) DEFAULT NULL,
  `fg_subcategorisation_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `fg_subcategorisation_id` (`fg_subcategorisation_id`),
  CONSTRAINT `fg_subsubcategorisation_ibfk_1` FOREIGN KEY (`fg_subcategorisation_id`) REFERENCES `fg_subcategorisation` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=109 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_table_settings`
--

DROP TABLE IF EXISTS `fg_table_settings`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_table_settings` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) DEFAULT NULL,
  `attributes` text,
  `contact_id` int(11) NOT NULL,
  `is_temp` tinyint(1) NOT NULL DEFAULT '0',
  `type` enum('DATA','SPONSOR','INVOICE','PAIDINVOICE') NOT NULL,
  `club_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_fg_table_settings_fg_contact1` (`contact_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `fg_table_settings_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fg_table_settings_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=407 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_team_category`
--

DROP TABLE IF EXISTS `fg_team_category`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_team_category` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) DEFAULT NULL,
  `club_id` int(11) NOT NULL,
  `sort_order` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `fk_fg_team_category_fg_club1` (`club_id`),
  CONSTRAINT `fg_team_category_ibfk_1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=830 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_team_category_i18n`
--

DROP TABLE IF EXISTS `fg_team_category_i18n`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_team_category_i18n` (
  `id` int(11) NOT NULL DEFAULT '0',
  `title_lang` varchar(255) DEFAULT NULL,
  `lang` char(2) NOT NULL DEFAULT '',
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`,`lang`),
  CONSTRAINT `fg_team_category_i18n_id_fg_team_category_id` FOREIGN KEY (`id`) REFERENCES `fg_team_category` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_temp_add_connection`
--

DROP TABLE IF EXISTS `fg_temp_add_connection`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_temp_add_connection` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `club_id` int(11) DEFAULT NULL,
  `contact_id` int(11) DEFAULT NULL,
  `linked_contact_id` int(11) DEFAULT NULL,
  `relation_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=166 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_temp_attribute`
--

DROP TABLE IF EXISTS `fg_temp_attribute`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_temp_attribute` (
  `uid` int(11) NOT NULL AUTO_INCREMENT,
  `id` varchar(25) DEFAULT NULL,
  `cat_id` varchar(25) DEFAULT NULL,
  `type` varchar(10) DEFAULT NULL,
  `attributeset_id` varchar(25) DEFAULT NULL,
  `fieldname` varchar(255) DEFAULT NULL,
  `fieldname_short` varchar(255) DEFAULT NULL,
  `input_type` enum('multiline','singleline','checkbox','select','date','email','url','fileupload','imageupload','login email','radio','number') DEFAULT NULL,
  `isCompany` varchar(5) DEFAULT NULL,
  `isPersonal` varchar(5) DEFAULT NULL,
  `predefined_value` text,
  `is_single_edit` varchar(5) DEFAULT NULL,
  `isVisibleSubfed` varchar(5) DEFAULT NULL,
  `isEditableSubfed` varchar(5) DEFAULT NULL,
  `is_required_fedmember_subfed` varchar(5) DEFAULT NULL,
  `isVisibleClub` varchar(5) DEFAULT NULL,
  `isEditableClub` varchar(5) DEFAULT NULL,
  `is_required_fedmember_club` varchar(5) DEFAULT NULL,
  `addres_type` enum('correspondance','invoice','both') DEFAULT NULL,
  `isVisibleContact` varchar(5) DEFAULT NULL,
  `is_setPrivacyItself` varchar(5) DEFAULT NULL,
  `privacyContact` enum('community','team','private') DEFAULT NULL,
  `isVisibleTeamadmin` varchar(5) DEFAULT NULL,
  `isChangableContact` varchar(5) DEFAULT NULL,
  `isChangableTeamadmin` varchar(5) DEFAULT NULL,
  `isConfirmContact` varchar(5) DEFAULT NULL,
  `is_required_type` enum('not_required','all_contacts','all_members','selected_members') DEFAULT 'not_required',
  `isConfirmTeamadmin` varchar(5) DEFAULT NULL,
  `sort_order` varchar(20) DEFAULT NULL,
  `isDeleted` varchar(5) DEFAULT NULL,
  `isActive` varchar(5) DEFAULT NULL,
  `club_id` varchar(25) NOT NULL,
  `random` varchar(30) NOT NULL,
  PRIMARY KEY (`uid`)
) ENGINE=MyISAM AUTO_INCREMENT=1170 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_temp_attribute_i18n`
--

DROP TABLE IF EXISTS `fg_temp_attribute_i18n`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_temp_attribute_i18n` (
  `uid` int(11) NOT NULL AUTO_INCREMENT,
  `id` varchar(50) NOT NULL,
  `lang` char(2) NOT NULL,
  `fieldname_lang` varchar(255) DEFAULT NULL,
  `fieldname_short_lang` varchar(255) DEFAULT NULL,
  `random` varchar(30) NOT NULL,
  PRIMARY KEY (`uid`)
) ENGINE=MyISAM AUTO_INCREMENT=845 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_temp_attribute_required`
--

DROP TABLE IF EXISTS `fg_temp_attribute_required`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_temp_attribute_required` (
  `uid` int(11) NOT NULL AUTO_INCREMENT,
  `attribute_id` varchar(25) NOT NULL,
  `club_id` varchar(25) NOT NULL,
  `membership_id` varchar(25) NOT NULL,
  `random` varchar(30) NOT NULL,
  PRIMARY KEY (`uid`)
) ENGINE=MyISAM AUTO_INCREMENT=63 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_temp_attributeset`
--

DROP TABLE IF EXISTS `fg_temp_attributeset`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_temp_attributeset` (
  `uid` int(11) NOT NULL AUTO_INCREMENT,
  `id` varchar(25) DEFAULT NULL,
  `type` varchar(10) DEFAULT NULL,
  `title` varchar(255) DEFAULT NULL,
  `sort_order` varchar(20) DEFAULT NULL,
  `isDeleted` varchar(5) DEFAULT NULL,
  `club_id` varchar(25) NOT NULL,
  `random` varchar(30) NOT NULL,
  PRIMARY KEY (`uid`)
) ENGINE=MyISAM AUTO_INCREMENT=732 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `fg_temp_attributeset_i18n`
--

DROP TABLE IF EXISTS `fg_temp_attributeset_i18n`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fg_temp_attributeset_i18n` (
  `uid` int(11) NOT NULL AUTO_INCREMENT,
  `id` varchar(50) NOT NULL,
  `lang` char(2) NOT NULL,
  `title_lang` varchar(255) DEFAULT NULL,
  `random` varchar(30) NOT NULL,
  PRIMARY KEY (`uid`)
) ENGINE=MyISAM AUTO_INCREMENT=282 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `import_maping`
--

DROP TABLE IF EXISTS `import_maping`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `import_maping` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `col_imp` varchar(250) DEFAULT NULL,
  `col_fg` varchar(250) DEFAULT NULL,
  `fg_table` varchar(250) DEFAULT NULL,
  `imp_table` varchar(250) DEFAULT NULL,
  `col_title` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `imp_table` (`imp_table`)
) ENGINE=MyISAM AUTO_INCREMENT=9222 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_1557`
--

DROP TABLE IF EXISTS `master_club_1557`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_1557` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_1557_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_1569`
--

DROP TABLE IF EXISTS `master_club_1569`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_1569` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  `72237` varchar(160) DEFAULT NULL,
  `72238` varchar(160) DEFAULT NULL,
  `72491` varchar(160) DEFAULT NULL,
  `72492` varchar(160) DEFAULT NULL,
  `72493` varchar(160) DEFAULT NULL,
  `72494` varchar(160) DEFAULT NULL,
  `72546` varchar(160) DEFAULT NULL,
  `72547` date DEFAULT NULL,
  `72590` varchar(160) DEFAULT NULL,
  `72799` varchar(160) DEFAULT NULL,
  `72800` varchar(160) DEFAULT NULL,
  `72856` varchar(160) DEFAULT NULL,
  `72857` varchar(160) DEFAULT NULL,
  `72858` varchar(200) DEFAULT NULL,
  `72859` varchar(160) DEFAULT NULL,
  `72860` varchar(160) DEFAULT NULL,
  `72864` text,
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_1569_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_278`
--

DROP TABLE IF EXISTS `master_club_278`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_278` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  `71962` varchar(160) DEFAULT NULL,
  `72153` varchar(160) DEFAULT NULL,
  `72155` varchar(160) DEFAULT NULL,
  `72156` varchar(160) DEFAULT NULL,
  `72157` varchar(160) DEFAULT NULL,
  `72158` varchar(160) DEFAULT NULL,
  `72159` varchar(160) DEFAULT NULL,
  `72160` varchar(160) DEFAULT NULL,
  `72166` varchar(160) DEFAULT NULL,
  `72167` varchar(160) DEFAULT NULL,
  `72168` varchar(160) DEFAULT NULL,
  `72169` varchar(160) DEFAULT NULL,
  `72218` varchar(160) DEFAULT NULL,
  `72266` varchar(160) DEFAULT NULL,
  `72271` varchar(160) DEFAULT NULL,
  `72273` varchar(160) DEFAULT NULL,
  `72274` varchar(160) DEFAULT NULL,
  `72363` varchar(160) DEFAULT NULL,
  `72366` varchar(160) DEFAULT NULL,
  `72367` varchar(160) DEFAULT NULL,
  `72369` varchar(160) DEFAULT NULL,
  `72372` varchar(160) DEFAULT NULL,
  `72388` varchar(160) DEFAULT NULL,
  `72454` varchar(200) DEFAULT NULL,
  `72600` varchar(160) DEFAULT NULL,
  `72610` varchar(160) DEFAULT NULL,
  `72611` varchar(160) DEFAULT NULL,
  `72612` varchar(160) DEFAULT NULL,
  `72613` varchar(160) DEFAULT NULL,
  `72614` varchar(160) DEFAULT NULL,
  `72615` varchar(160) DEFAULT NULL,
  `72616` varchar(200) DEFAULT NULL,
  `72620` date DEFAULT NULL,
  `72621` date DEFAULT NULL,
  `72688` varchar(160) DEFAULT NULL,
  `72689` varchar(160) DEFAULT NULL,
  `72700` varchar(160) DEFAULT NULL,
  `72732` varchar(160) DEFAULT NULL,
  `72733` varchar(160) DEFAULT NULL,
  `72734` varchar(160) DEFAULT NULL,
  `72805` varchar(160) DEFAULT NULL,
  `72806` varchar(160) DEFAULT NULL,
  `72807` varchar(160) DEFAULT NULL,
  `72808` varchar(160) DEFAULT NULL,
  `72809` varchar(160) DEFAULT NULL,
  `72810` text,
  `72811` varchar(160) DEFAULT NULL,
  `72812` varchar(160) DEFAULT NULL,
  `72813` varchar(160) DEFAULT NULL,
  `72814` varchar(160) DEFAULT NULL,
  `72815` date DEFAULT NULL,
  `72816` varchar(160) DEFAULT NULL,
  `72817` varchar(160) DEFAULT NULL,
  `72952` varchar(160) DEFAULT NULL,
  `72967` varchar(160) DEFAULT NULL,
  `72968` varchar(160) DEFAULT NULL,
  `72971` varchar(160) DEFAULT NULL,
  `72972` varchar(160) DEFAULT NULL,
  `72973` varchar(160) DEFAULT NULL,
  `72974` varchar(160) DEFAULT NULL,
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_278_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_651`
--

DROP TABLE IF EXISTS `master_club_651`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_651` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  `72295` varchar(160) DEFAULT NULL,
  `72530` date DEFAULT NULL,
  `72558` varchar(200) DEFAULT NULL,
  `72559` text,
  `72560` varchar(160) DEFAULT NULL,
  `72561` date DEFAULT NULL,
  `72876` varchar(160) DEFAULT NULL,
  `72958` varchar(160) DEFAULT NULL,
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_651_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8516`
--

DROP TABLE IF EXISTS `master_club_8516`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8516` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  `72261` varchar(160) DEFAULT NULL,
  `72262` varchar(160) DEFAULT NULL,
  `72333` varchar(160) DEFAULT NULL,
  `72337` varchar(160) DEFAULT NULL,
  `72583` text,
  `72818` varchar(160) DEFAULT NULL,
  `72819` varchar(160) DEFAULT NULL,
  `72842` varchar(160) DEFAULT NULL,
  `72961` varchar(160) DEFAULT NULL,
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8516_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8517`
--

DROP TABLE IF EXISTS `master_club_8517`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8517` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  `72402` varchar(160) DEFAULT NULL,
  `72404` varchar(160) DEFAULT NULL,
  `72797` varchar(160) DEFAULT NULL,
  `72798` varchar(160) DEFAULT NULL,
  `72863` text,
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8517_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8531`
--

DROP TABLE IF EXISTS `master_club_8531`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8531` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  `72609` varchar(160) DEFAULT NULL,
  `72710` varchar(160) DEFAULT NULL,
  `72725` varchar(160) DEFAULT NULL,
  `72889` varchar(160) DEFAULT NULL,
  `72890` varchar(160) DEFAULT NULL,
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8531_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8532`
--

DROP TABLE IF EXISTS `master_club_8532`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8532` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8532_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8546`
--

DROP TABLE IF EXISTS `master_club_8546`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8546` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8546_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8547`
--

DROP TABLE IF EXISTS `master_club_8547`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8547` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8547_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8548`
--

DROP TABLE IF EXISTS `master_club_8548`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8548` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8548_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8549`
--

DROP TABLE IF EXISTS `master_club_8549`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8549` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8549_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8550`
--

DROP TABLE IF EXISTS `master_club_8550`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8550` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8550_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8551`
--

DROP TABLE IF EXISTS `master_club_8551`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8551` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8551_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8552`
--

DROP TABLE IF EXISTS `master_club_8552`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8552` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8552_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8553`
--

DROP TABLE IF EXISTS `master_club_8553`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8553` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8553_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8554`
--

DROP TABLE IF EXISTS `master_club_8554`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8554` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8554_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8561`
--

DROP TABLE IF EXISTS `master_club_8561`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8561` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8561_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8562`
--

DROP TABLE IF EXISTS `master_club_8562`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8562` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8562_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8563`
--

DROP TABLE IF EXISTS `master_club_8563`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8563` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8563_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8575`
--

DROP TABLE IF EXISTS `master_club_8575`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8575` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  `72887` varchar(160) DEFAULT NULL,
  `72888` varchar(160) DEFAULT NULL,
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8575_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8576`
--

DROP TABLE IF EXISTS `master_club_8576`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8576` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  `73133` varchar(160) DEFAULT NULL,
  `73180` varchar(160) DEFAULT NULL,
  `73181` varchar(160) DEFAULT NULL,
  `73182` varchar(160) DEFAULT NULL,
  `73183` varchar(160) DEFAULT NULL,
  `73184` varchar(160) DEFAULT NULL,
  `73185` varchar(160) DEFAULT NULL,
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8576_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8577`
--

DROP TABLE IF EXISTS `master_club_8577`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8577` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8577_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8578`
--

DROP TABLE IF EXISTS `master_club_8578`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8578` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8578_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8581`
--

DROP TABLE IF EXISTS `master_club_8581`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8581` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8581_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8582`
--

DROP TABLE IF EXISTS `master_club_8582`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8582` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  `72804` varchar(160) DEFAULT NULL,
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8582_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8583`
--

DROP TABLE IF EXISTS `master_club_8583`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8583` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8583_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8584`
--

DROP TABLE IF EXISTS `master_club_8584`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8584` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8584_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8585`
--

DROP TABLE IF EXISTS `master_club_8585`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8585` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8585_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8586`
--

DROP TABLE IF EXISTS `master_club_8586`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8586` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8586_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8587`
--

DROP TABLE IF EXISTS `master_club_8587`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8587` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8587_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8588`
--

DROP TABLE IF EXISTS `master_club_8588`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8588` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8588_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8589`
--

DROP TABLE IF EXISTS `master_club_8589`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8589` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8589_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8592`
--

DROP TABLE IF EXISTS `master_club_8592`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8592` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8592_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8593`
--

DROP TABLE IF EXISTS `master_club_8593`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8593` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8593_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8597`
--

DROP TABLE IF EXISTS `master_club_8597`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8597` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8597_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8598`
--

DROP TABLE IF EXISTS `master_club_8598`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8598` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8598_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8599`
--

DROP TABLE IF EXISTS `master_club_8599`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8599` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  `72831` varchar(160) DEFAULT NULL,
  `72832` text,
  `72833` varchar(160) DEFAULT NULL,
  `72834` varchar(160) DEFAULT NULL,
  `72835` varchar(160) DEFAULT NULL,
  `72836` varchar(160) DEFAULT NULL,
  `72837` varchar(160) DEFAULT NULL,
  `72838` varchar(160) DEFAULT NULL,
  `72839` date DEFAULT NULL,
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8599_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8600`
--

DROP TABLE IF EXISTS `master_club_8600`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8600` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8600_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8601`
--

DROP TABLE IF EXISTS `master_club_8601`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8601` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8601_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8602`
--

DROP TABLE IF EXISTS `master_club_8602`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8602` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8602_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8605`
--

DROP TABLE IF EXISTS `master_club_8605`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8605` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  `72904` varchar(160) DEFAULT NULL,
  `72908` varchar(160) DEFAULT NULL,
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8605_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8606`
--

DROP TABLE IF EXISTS `master_club_8606`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8606` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  `72905` varchar(160) DEFAULT NULL,
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8606_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8609`
--

DROP TABLE IF EXISTS `master_club_8609`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8609` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8609_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8610`
--

DROP TABLE IF EXISTS `master_club_8610`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8610` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8610_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8611`
--

DROP TABLE IF EXISTS `master_club_8611`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8611` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  `73070` varchar(160) DEFAULT NULL,
  `73071` varchar(160) DEFAULT NULL,
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8611_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8612`
--

DROP TABLE IF EXISTS `master_club_8612`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8612` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8612_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8616`
--

DROP TABLE IF EXISTS `master_club_8616`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8616` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  `72922` varchar(160) DEFAULT NULL,
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8616_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8617`
--

DROP TABLE IF EXISTS `master_club_8617`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8617` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  `72920` varchar(160) DEFAULT NULL,
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8617_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8618`
--

DROP TABLE IF EXISTS `master_club_8618`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8618` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8618_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8620`
--

DROP TABLE IF EXISTS `master_club_8620`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8620` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8620_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8621`
--

DROP TABLE IF EXISTS `master_club_8621`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8621` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8621_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8629`
--

DROP TABLE IF EXISTS `master_club_8629`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8629` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8629_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8631`
--

DROP TABLE IF EXISTS `master_club_8631`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8631` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8631_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8633`
--

DROP TABLE IF EXISTS `master_club_8633`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8633` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8633_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8640`
--

DROP TABLE IF EXISTS `master_club_8640`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8640` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8640_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8641`
--

DROP TABLE IF EXISTS `master_club_8641`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8641` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8641_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8642`
--

DROP TABLE IF EXISTS `master_club_8642`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8642` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  `72944` varchar(160) DEFAULT NULL,
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8642_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8644`
--

DROP TABLE IF EXISTS `master_club_8644`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8644` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8644_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8645`
--

DROP TABLE IF EXISTS `master_club_8645`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8645` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8645_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8648`
--

DROP TABLE IF EXISTS `master_club_8648`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8648` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8648_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8650`
--

DROP TABLE IF EXISTS `master_club_8650`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8650` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8650_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8652`
--

DROP TABLE IF EXISTS `master_club_8652`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8652` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8652_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8653`
--

DROP TABLE IF EXISTS `master_club_8653`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8653` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8653_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8654`
--

DROP TABLE IF EXISTS `master_club_8654`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8654` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8654_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8655`
--

DROP TABLE IF EXISTS `master_club_8655`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8655` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8655_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8656`
--

DROP TABLE IF EXISTS `master_club_8656`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8656` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8656_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8657`
--

DROP TABLE IF EXISTS `master_club_8657`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8657` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8657_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8658`
--

DROP TABLE IF EXISTS `master_club_8658`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8658` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8658_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8659`
--

DROP TABLE IF EXISTS `master_club_8659`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8659` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8659_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8660`
--

DROP TABLE IF EXISTS `master_club_8660`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8660` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8660_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8661`
--

DROP TABLE IF EXISTS `master_club_8661`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8661` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8661_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8662`
--

DROP TABLE IF EXISTS `master_club_8662`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8662` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8662_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8666`
--

DROP TABLE IF EXISTS `master_club_8666`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8666` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8666_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8667`
--

DROP TABLE IF EXISTS `master_club_8667`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8667` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8667_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8668`
--

DROP TABLE IF EXISTS `master_club_8668`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8668` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8668_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8669`
--

DROP TABLE IF EXISTS `master_club_8669`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8669` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8669_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8670`
--

DROP TABLE IF EXISTS `master_club_8670`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8670` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8670_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8671`
--

DROP TABLE IF EXISTS `master_club_8671`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8671` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8671_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8676`
--

DROP TABLE IF EXISTS `master_club_8676`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8676` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8676_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8677`
--

DROP TABLE IF EXISTS `master_club_8677`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8677` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8677_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_club_8679`
--

DROP TABLE IF EXISTS `master_club_8679`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_club_8679` (
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  CONSTRAINT `master_club_8679_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_608`
--

DROP TABLE IF EXISTS `master_federation_608`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_608` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  `72508` varchar(160) DEFAULT NULL,
  `72509` varchar(160) DEFAULT NULL,
  `72510` varchar(160) DEFAULT NULL,
  `72511` varchar(160) DEFAULT NULL,
  `72512` varchar(160) DEFAULT NULL,
  `72513` date DEFAULT NULL,
  `72514` varchar(160) DEFAULT NULL,
  `72515` varchar(200) DEFAULT NULL,
  `72516` varchar(200) DEFAULT NULL,
  `72522` varchar(160) DEFAULT NULL,
  `72529` text,
  `72531` varchar(160) DEFAULT NULL,
  `72544` varchar(160) DEFAULT NULL,
  `72695` varchar(160) DEFAULT NULL,
  `72696` varchar(160) DEFAULT NULL,
  `72868` varchar(160) DEFAULT NULL,
  `72869` varchar(160) DEFAULT NULL,
  `72874` varchar(160) DEFAULT NULL,
  `72875` varchar(160) DEFAULT NULL,
  `72894` varchar(160) DEFAULT NULL,
  `72934` varchar(160) DEFAULT NULL,
  `72943` varchar(160) DEFAULT NULL,
  `72957` varchar(160) DEFAULT NULL,
  `72993` varchar(160) DEFAULT NULL,
  `72994` varchar(160) DEFAULT NULL,
  `72995` varchar(160) DEFAULT NULL,
  `73079` varchar(160) DEFAULT NULL,
  `73081` varchar(160) DEFAULT NULL,
  `73146` varchar(160) DEFAULT NULL,
  `73173` varchar(160) DEFAULT NULL,
  `73178` varchar(160) DEFAULT NULL,
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_608_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_608_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_609`
--

DROP TABLE IF EXISTS `master_federation_609`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_609` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  `72843` text,
  `73149` varchar(160) DEFAULT NULL,
  `73150` varchar(160) DEFAULT NULL,
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_609_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_609_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_610`
--

DROP TABLE IF EXISTS `master_federation_610`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_610` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_610_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_610_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8514`
--

DROP TABLE IF EXISTS `master_federation_8514`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8514` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  `72401` varchar(160) DEFAULT NULL,
  `72405` varchar(160) DEFAULT NULL,
  `72406` varchar(160) DEFAULT NULL,
  `72407` varchar(160) DEFAULT NULL,
  `72408` varchar(200) DEFAULT NULL,
  `72409` date DEFAULT NULL,
  `72410` varchar(160) DEFAULT NULL,
  `72438` varchar(200) DEFAULT NULL,
  `72453` varchar(160) DEFAULT NULL,
  `72456` varchar(160) DEFAULT NULL,
  `72460` varchar(160) DEFAULT NULL,
  `72461` varchar(160) DEFAULT NULL,
  `72462` varchar(160) DEFAULT NULL,
  `72463` varchar(160) DEFAULT NULL,
  `72464` varchar(160) DEFAULT NULL,
  `72465` varchar(160) DEFAULT NULL,
  `72466` varchar(160) DEFAULT NULL,
  `72467` varchar(160) DEFAULT NULL,
  `72468` varchar(160) DEFAULT NULL,
  `72469` varchar(160) DEFAULT NULL,
  `72470` varchar(160) DEFAULT NULL,
  `72471` varchar(160) DEFAULT NULL,
  `72472` varchar(160) DEFAULT NULL,
  `72473` varchar(160) DEFAULT NULL,
  `72474` varchar(160) DEFAULT NULL,
  `72475` varchar(160) DEFAULT NULL,
  `72476` varchar(160) DEFAULT NULL,
  `72477` varchar(160) DEFAULT NULL,
  `72478` varchar(160) DEFAULT NULL,
  `72479` varchar(160) DEFAULT NULL,
  `72480` varchar(160) DEFAULT NULL,
  `72481` varchar(160) DEFAULT NULL,
  `72482` varchar(160) DEFAULT NULL,
  `72483` varchar(160) DEFAULT NULL,
  `72484` varchar(160) DEFAULT NULL,
  `72486` varchar(160) DEFAULT NULL,
  `72487` varchar(160) DEFAULT NULL,
  `72488` varchar(160) DEFAULT NULL,
  `72495` varchar(160) DEFAULT NULL,
  `72496` varchar(160) DEFAULT NULL,
  `72523` varchar(160) DEFAULT NULL,
  `72525` varchar(160) DEFAULT NULL,
  `72528` varchar(160) DEFAULT NULL,
  `72532` varchar(160) DEFAULT NULL,
  `72533` varchar(160) DEFAULT NULL,
  `72534` date DEFAULT NULL,
  `72535` varchar(160) DEFAULT NULL,
  `72536` varchar(160) DEFAULT NULL,
  `72537` varchar(160) DEFAULT NULL,
  `72538` varchar(160) DEFAULT NULL,
  `72539` varchar(160) DEFAULT NULL,
  `72540` varchar(160) DEFAULT NULL,
  `72541` text,
  `72542` date DEFAULT NULL,
  `72549` varchar(160) DEFAULT NULL,
  `72550` varchar(160) DEFAULT NULL,
  `72551` varchar(160) DEFAULT NULL,
  `72552` varchar(160) DEFAULT NULL,
  `72554` varchar(160) DEFAULT NULL,
  `72555` varchar(160) DEFAULT NULL,
  `72556` varchar(160) DEFAULT NULL,
  `72557` varchar(160) DEFAULT NULL,
  `72564` varchar(160) DEFAULT NULL,
  `72566` varchar(160) DEFAULT NULL,
  `72567` varchar(160) DEFAULT NULL,
  `72568` varchar(160) DEFAULT NULL,
  `72569` varchar(160) DEFAULT NULL,
  `72584` varchar(160) DEFAULT NULL,
  `72586` varchar(160) DEFAULT NULL,
  `72596` varchar(160) DEFAULT NULL,
  `72597` varchar(160) DEFAULT NULL,
  `72598` varchar(160) DEFAULT NULL,
  `72603` varchar(160) DEFAULT NULL,
  `72604` varchar(160) DEFAULT NULL,
  `72605` varchar(160) DEFAULT NULL,
  `72618` varchar(160) DEFAULT NULL,
  `72623` varchar(200) DEFAULT NULL,
  `72636` varchar(160) DEFAULT NULL,
  `72637` varchar(160) DEFAULT NULL,
  `72642` varchar(200) DEFAULT NULL,
  `72644` varchar(160) DEFAULT NULL,
  `72645` varchar(160) DEFAULT NULL,
  `72646` varchar(160) DEFAULT NULL,
  `72647` varchar(160) DEFAULT NULL,
  `72648` varchar(160) DEFAULT NULL,
  `72728` varchar(160) DEFAULT NULL,
  `72730` varchar(160) DEFAULT NULL,
  `72794` varchar(160) DEFAULT NULL,
  `72795` varchar(160) DEFAULT NULL,
  `72862` varchar(160) DEFAULT NULL,
  `72927` varchar(160) DEFAULT NULL,
  `72960` varchar(160) DEFAULT NULL,
  `72966` varchar(160) DEFAULT NULL,
  `72988` varchar(160) DEFAULT NULL,
  `72989` varchar(160) DEFAULT NULL,
  `72991` varchar(160) DEFAULT NULL,
  `73154` varchar(160) DEFAULT NULL,
  `73176` varchar(160) DEFAULT NULL,
  `73177` varchar(160) DEFAULT NULL,
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8514_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8514_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8515`
--

DROP TABLE IF EXISTS `master_federation_8515`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8515` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  `72311` varchar(160) DEFAULT NULL,
  `72314` varchar(160) DEFAULT NULL,
  `72315` varchar(160) DEFAULT NULL,
  `72446` date DEFAULT NULL,
  `72447` date DEFAULT NULL,
  `72545` varchar(160) DEFAULT NULL,
  `72585` text,
  `72592` varchar(160) DEFAULT NULL,
  `72624` varchar(160) DEFAULT NULL,
  `72627` varchar(160) DEFAULT NULL,
  `72628` varchar(160) DEFAULT NULL,
  `72840` varchar(160) DEFAULT NULL,
  `72841` varchar(160) DEFAULT NULL,
  `72852` varchar(160) DEFAULT NULL,
  `72853` varchar(160) DEFAULT NULL,
  `73153` varchar(160) DEFAULT NULL,
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8515_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8515_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8526`
--

DROP TABLE IF EXISTS `master_federation_8526`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8526` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  `72571` varchar(160) DEFAULT NULL,
  `72572` text,
  `72573` varchar(160) DEFAULT NULL,
  `72574` varchar(160) DEFAULT NULL,
  `72575` varchar(160) DEFAULT NULL,
  `72576` varchar(160) DEFAULT NULL,
  `72577` varchar(160) DEFAULT NULL,
  `72578` date DEFAULT NULL,
  `72579` varchar(200) DEFAULT NULL,
  `72580` varchar(200) DEFAULT NULL,
  `72601` varchar(160) DEFAULT NULL,
  `72602` varchar(160) DEFAULT NULL,
  `72632` varchar(160) DEFAULT NULL,
  `72633` varchar(160) DEFAULT NULL,
  `72634` varchar(160) DEFAULT NULL,
  `72635` varchar(160) DEFAULT NULL,
  `72709` varchar(160) DEFAULT NULL,
  `72726` varchar(160) DEFAULT NULL,
  `72727` varchar(160) DEFAULT NULL,
  `72870` varchar(160) DEFAULT NULL,
  `72871` varchar(160) DEFAULT NULL,
  `72872` varchar(160) DEFAULT NULL,
  `72892` varchar(160) DEFAULT NULL,
  `72924` varchar(160) DEFAULT NULL,
  `72936` varchar(160) DEFAULT NULL,
  `72942` varchar(160) DEFAULT NULL,
  `73077` varchar(160) DEFAULT NULL,
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8526_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8526_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8527`
--

DROP TABLE IF EXISTS `master_federation_8527`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8527` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8527_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8527_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8528`
--

DROP TABLE IF EXISTS `master_federation_8528`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8528` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  `72591` varchar(160) DEFAULT NULL,
  `72712` varchar(160) DEFAULT NULL,
  `72713` varchar(160) DEFAULT NULL,
  `72719` varchar(160) DEFAULT NULL,
  `72720` varchar(160) DEFAULT NULL,
  `72721` varchar(160) DEFAULT NULL,
  `72722` varchar(160) DEFAULT NULL,
  `72723` varchar(160) DEFAULT NULL,
  `72873` varchar(160) DEFAULT NULL,
  `72891` varchar(160) DEFAULT NULL,
  `72893` varchar(160) DEFAULT NULL,
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8528_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8528_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8529`
--

DROP TABLE IF EXISTS `master_federation_8529`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8529` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8529_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8529_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8530`
--

DROP TABLE IF EXISTS `master_federation_8530`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8530` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8530_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8530_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8533`
--

DROP TABLE IF EXISTS `master_federation_8533`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8533` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8533_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8533_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8534`
--

DROP TABLE IF EXISTS `master_federation_8534`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8534` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8534_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8534_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8535`
--

DROP TABLE IF EXISTS `master_federation_8535`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8535` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8535_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8535_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8536`
--

DROP TABLE IF EXISTS `master_federation_8536`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8536` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8536_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8536_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8537`
--

DROP TABLE IF EXISTS `master_federation_8537`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8537` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8537_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8537_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8538`
--

DROP TABLE IF EXISTS `master_federation_8538`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8538` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8538_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8538_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8539`
--

DROP TABLE IF EXISTS `master_federation_8539`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8539` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8539_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8539_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8540`
--

DROP TABLE IF EXISTS `master_federation_8540`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8540` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8540_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8540_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8541`
--

DROP TABLE IF EXISTS `master_federation_8541`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8541` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8541_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8541_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8542`
--

DROP TABLE IF EXISTS `master_federation_8542`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8542` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8542_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8542_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8543`
--

DROP TABLE IF EXISTS `master_federation_8543`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8543` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8543_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8543_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8544`
--

DROP TABLE IF EXISTS `master_federation_8544`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8544` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8544_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8544_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8545`
--

DROP TABLE IF EXISTS `master_federation_8545`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8545` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8545_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8545_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8555`
--

DROP TABLE IF EXISTS `master_federation_8555`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8555` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8555_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8555_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8556`
--

DROP TABLE IF EXISTS `master_federation_8556`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8556` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8556_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8556_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8557`
--

DROP TABLE IF EXISTS `master_federation_8557`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8557` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8557_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8557_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8558`
--

DROP TABLE IF EXISTS `master_federation_8558`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8558` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8558_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8558_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8564`
--

DROP TABLE IF EXISTS `master_federation_8564`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8564` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8564_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8564_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8573`
--

DROP TABLE IF EXISTS `master_federation_8573`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8573` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  `72654` varchar(160) DEFAULT NULL,
  `72655` varchar(160) DEFAULT NULL,
  `72656` date DEFAULT NULL,
  `72657` varchar(200) DEFAULT NULL,
  `72658` varchar(200) DEFAULT NULL,
  `72659` varchar(160) DEFAULT NULL,
  `72660` text,
  `72878` varchar(160) DEFAULT NULL,
  `72879` varchar(160) DEFAULT NULL,
  `72880` varchar(160) DEFAULT NULL,
  `72881` varchar(160) DEFAULT NULL,
  `73144` varchar(160) DEFAULT NULL,
  `73145` varchar(160) DEFAULT NULL,
  `73147` varchar(160) DEFAULT NULL,
  `73148` varchar(160) DEFAULT NULL,
  `73155` varchar(160) DEFAULT NULL,
  `73159` varchar(160) DEFAULT NULL,
  `73160` varchar(160) DEFAULT NULL,
  `73161` varchar(160) DEFAULT NULL,
  `73162` varchar(160) DEFAULT NULL,
  `73175` varchar(160) DEFAULT NULL,
  `73179` varchar(160) DEFAULT NULL,
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8573_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8573_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8574`
--

DROP TABLE IF EXISTS `master_federation_8574`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8574` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  `72883` varchar(160) DEFAULT NULL,
  `72884` varchar(160) DEFAULT NULL,
  `72886` varchar(160) DEFAULT NULL,
  `73174` varchar(160) DEFAULT NULL,
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8574_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8574_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8579`
--

DROP TABLE IF EXISTS `master_federation_8579`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8579` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  `72665` varchar(160) DEFAULT NULL,
  `72666` text,
  `72667` varchar(160) DEFAULT NULL,
  `72668` date DEFAULT NULL,
  `72669` varchar(160) DEFAULT NULL,
  `72670` varchar(160) DEFAULT NULL,
  `72671` varchar(160) DEFAULT NULL,
  `72672` varchar(160) DEFAULT NULL,
  `72673` varchar(200) DEFAULT NULL,
  `72674` varchar(200) DEFAULT NULL,
  `72675` varchar(160) DEFAULT NULL,
  `72829` varchar(160) DEFAULT NULL,
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8579_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8579_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8580`
--

DROP TABLE IF EXISTS `master_federation_8580`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8580` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8580_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8580_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8590`
--

DROP TABLE IF EXISTS `master_federation_8590`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8590` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  `72781` varchar(160) DEFAULT NULL,
  `72782` varchar(160) DEFAULT NULL,
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8590_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8590_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8591`
--

DROP TABLE IF EXISTS `master_federation_8591`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8591` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8591_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8591_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8594`
--

DROP TABLE IF EXISTS `master_federation_8594`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8594` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  `73011` varchar(160) DEFAULT NULL,
  `73012` varchar(160) DEFAULT NULL,
  `73013` varchar(160) DEFAULT NULL,
  `73014` varchar(160) DEFAULT NULL,
  `73015` varchar(160) DEFAULT NULL,
  `73165` varchar(160) DEFAULT NULL,
  `73166` varchar(160) DEFAULT NULL,
  `73167` varchar(160) DEFAULT NULL,
  `73168` varchar(160) DEFAULT NULL,
  `73169` varchar(160) DEFAULT NULL,
  `73170` varchar(160) DEFAULT NULL,
  `73171` varchar(160) DEFAULT NULL,
  `73172` varchar(160) DEFAULT NULL,
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8594_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8594_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8595`
--

DROP TABLE IF EXISTS `master_federation_8595`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8595` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8595_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8595_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8596`
--

DROP TABLE IF EXISTS `master_federation_8596`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8596` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  `73065` varchar(160) DEFAULT NULL,
  `73066` varchar(160) DEFAULT NULL,
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8596_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8596_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8603`
--

DROP TABLE IF EXISTS `master_federation_8603`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8603` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  `72896` varchar(160) DEFAULT NULL,
  `72898` varchar(160) DEFAULT NULL,
  `72899` varchar(160) DEFAULT NULL,
  `72900` varchar(160) DEFAULT NULL,
  `72901` varchar(160) DEFAULT NULL,
  `72910` varchar(160) DEFAULT NULL,
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8603_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8603_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8604`
--

DROP TABLE IF EXISTS `master_federation_8604`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8604` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  `72902` varchar(160) DEFAULT NULL,
  `72903` varchar(160) DEFAULT NULL,
  `72909` varchar(160) DEFAULT NULL,
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8604_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8604_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8607`
--

DROP TABLE IF EXISTS `master_federation_8607`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8607` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  `72906` varchar(160) DEFAULT NULL,
  `72911` varchar(160) DEFAULT NULL,
  `72912` varchar(160) DEFAULT NULL,
  `72964` varchar(160) DEFAULT NULL,
  `72975` varchar(160) DEFAULT NULL,
  `72976` varchar(160) DEFAULT NULL,
  `72979` varchar(160) DEFAULT NULL,
  `72980` varchar(160) DEFAULT NULL,
  `73053` date DEFAULT NULL,
  `73054` varchar(160) DEFAULT NULL,
  `73055` varchar(160) DEFAULT NULL,
  `73056` varchar(160) DEFAULT NULL,
  `73057` varchar(160) DEFAULT NULL,
  `73059` text,
  `73072` varchar(160) DEFAULT NULL,
  `73075` varchar(160) DEFAULT NULL,
  `73080` varchar(160) DEFAULT NULL,
  `73132` varchar(160) DEFAULT NULL,
  `73163` varchar(160) DEFAULT NULL,
  `73164` varchar(160) DEFAULT NULL,
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8607_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8607_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8608`
--

DROP TABLE IF EXISTS `master_federation_8608`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8608` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  `73067` varchar(160) DEFAULT NULL,
  `73073` varchar(160) DEFAULT NULL,
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8608_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8608_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8613`
--

DROP TABLE IF EXISTS `master_federation_8613`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8613` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8613_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8613_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8614`
--

DROP TABLE IF EXISTS `master_federation_8614`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8614` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  `72914` varchar(160) DEFAULT NULL,
  `72915` varchar(160) DEFAULT NULL,
  `72916` varchar(160) DEFAULT NULL,
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8614_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8614_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8615`
--

DROP TABLE IF EXISTS `master_federation_8615`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8615` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  `72917` varchar(160) DEFAULT NULL,
  `72918` varchar(160) DEFAULT NULL,
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8615_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8615_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8632`
--

DROP TABLE IF EXISTS `master_federation_8632`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8632` (
  `club_id` int(11) NOT NULL,
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8632_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8632_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8634`
--

DROP TABLE IF EXISTS `master_federation_8634`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8634` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8634_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8634_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8637`
--

DROP TABLE IF EXISTS `master_federation_8637`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8637` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8637_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8637_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8638`
--

DROP TABLE IF EXISTS `master_federation_8638`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8638` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8638_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8638_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8639`
--

DROP TABLE IF EXISTS `master_federation_8639`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8639` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8639_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8639_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8649`
--

DROP TABLE IF EXISTS `master_federation_8649`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8649` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  `72982` varchar(160) DEFAULT NULL,
  `72983` varchar(160) DEFAULT NULL,
  `72984` varchar(160) DEFAULT NULL,
  `72985` varchar(160) DEFAULT NULL,
  `72986` varchar(160) DEFAULT NULL,
  `72987` varchar(160) DEFAULT NULL,
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8649_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8649_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8651`
--

DROP TABLE IF EXISTS `master_federation_8651`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8651` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  `72990` varchar(160) DEFAULT NULL,
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8651_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8651_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8663`
--

DROP TABLE IF EXISTS `master_federation_8663`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8663` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8663_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8663_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8665`
--

DROP TABLE IF EXISTS `master_federation_8665`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8665` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8665_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8665_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8672`
--

DROP TABLE IF EXISTS `master_federation_8672`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8672` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8672_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8672_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8673`
--

DROP TABLE IF EXISTS `master_federation_8673`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8673` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8673_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8673_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8674`
--

DROP TABLE IF EXISTS `master_federation_8674`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8674` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8674_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8674_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8675`
--

DROP TABLE IF EXISTS `master_federation_8675`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8675` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8675_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8675_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_federation_8678`
--

DROP TABLE IF EXISTS `master_federation_8678`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_federation_8678` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `is_fed_member` tinyint(1) DEFAULT NULL,
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `is_sponsor` tinyint(1) NOT NULL DEFAULT '0',
  `is_subscriber` tinyint(1) NOT NULL DEFAULT '0',
  `is_household_head` tinyint(1) DEFAULT '0',
  `is_seperate_invoice` tinyint(1) DEFAULT '0',
  `is_postal_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`contact_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `master_federation_8678_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_federation_8678_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `master_system`
--

DROP TABLE IF EXISTS `master_system`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `master_system` (
  `club_id` int(11) NOT NULL DEFAULT '0',
  `contact_id` int(11) NOT NULL DEFAULT '0',
  `1` varchar(160) CHARACTER SET utf8 DEFAULT NULL,
  `2` varchar(160) DEFAULT NULL,
  `3` varchar(160) CHARACTER SET utf8 DEFAULT NULL,
  `4` date DEFAULT NULL,
  `5` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `9` varchar(160) CHARACTER SET utf8 DEFAULT NULL,
  `21` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `23` varchar(160) CHARACTER SET utf8 DEFAULT NULL,
  `47` text CHARACTER SET utf8,
  `68` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `70` varchar(160) CHARACTER SET utf8 DEFAULT NULL,
  `72` varchar(160) CHARACTER SET utf8 DEFAULT NULL,
  `76` varchar(160) CHARACTER SET utf8 DEFAULT NULL,
  `77` varchar(160) CHARACTER SET utf8 DEFAULT NULL,
  `78` varchar(160) CHARACTER SET utf8 DEFAULT NULL,
  `79` varchar(160) CHARACTER SET utf8 DEFAULT NULL,
  `86` varchar(160) CHARACTER SET utf8 DEFAULT NULL,
  `87` varchar(160) CHARACTER SET utf8 DEFAULT NULL,
  `92` varchar(160) CHARACTER SET utf8 DEFAULT NULL,
  `106` varchar(160) CHARACTER SET utf8 DEFAULT NULL,
  `107` varchar(160) CHARACTER SET utf8 DEFAULT NULL,
  `108` varchar(160) CHARACTER SET utf8 DEFAULT NULL,
  `515` varchar(160) CHARACTER SET utf8 DEFAULT NULL,
  `1002` varchar(160) CHARACTER SET utf8 DEFAULT NULL,
  `71785` varchar(160) CHARACTER SET utf8 DEFAULT NULL,
  `71873` text CHARACTER SET utf8,
  `71874` varchar(160) CHARACTER SET utf8 DEFAULT NULL,
  `71875` varchar(160) CHARACTER SET utf8 DEFAULT NULL,
  `71876` varchar(160) CHARACTER SET utf8 DEFAULT NULL,
  `71877` varchar(160) CHARACTER SET utf8 DEFAULT NULL,
  `71878` varchar(160) CHARACTER SET utf8 DEFAULT NULL,
  PRIMARY KEY (`club_id`,`contact_id`),
  KEY `contact_id` (`contact_id`),
  KEY `3` (`3`),
  CONSTRAINT `master_system_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `master_system_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `sf_guard_forgot_password`
--

DROP TABLE IF EXISTS `sf_guard_forgot_password`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `sf_guard_forgot_password` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `user_id` bigint(20) NOT NULL,
  `unique_key` varchar(255) DEFAULT NULL,
  `expires_at` datetime NOT NULL,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `user_id_idx` (`user_id`),
  CONSTRAINT `sf_guard_forgot_password_user_id_sf_guard_user_id0` FOREIGN KEY (`user_id`) REFERENCES `sf_guard_user` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `sf_guard_group`
--

DROP TABLE IF EXISTS `sf_guard_group`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `sf_guard_group` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) DEFAULT NULL,
  `description` text,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  `type` enum('federation','fairgate','club','team','workgroup') NOT NULL DEFAULT 'club',
  `sort_order` int(11) NOT NULL,
  `roles` longtext NOT NULL COMMENT '(DC2Type:array)',
  `module_type` enum('contact','document','communication','sponsor','invoice','events','all') DEFAULT NULL,
  `is_readonly` int(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `sf_guard_group_permission`
--

DROP TABLE IF EXISTS `sf_guard_group_permission`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `sf_guard_group_permission` (
  `group_id` bigint(20) NOT NULL DEFAULT '0',
  `permission_id` bigint(20) NOT NULL DEFAULT '0',
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  PRIMARY KEY (`group_id`,`permission_id`),
  KEY `sf_guard_group_permission_permission_id_sf_guard_permission_id` (`permission_id`),
  CONSTRAINT `sf_guard_group_permission_group_id_sf_guard_group_id0` FOREIGN KEY (`group_id`) REFERENCES `sf_guard_group` (`id`) ON DELETE CASCADE,
  CONSTRAINT `sf_guard_group_permission_permission_id_sf_guard_permission_i` FOREIGN KEY (`permission_id`) REFERENCES `sf_guard_permission` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `sf_guard_permission`
--

DROP TABLE IF EXISTS `sf_guard_permission`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `sf_guard_permission` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) DEFAULT NULL,
  `description` text,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `sf_guard_user`
--

DROP TABLE IF EXISTS `sf_guard_user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `sf_guard_user` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `first_name` varchar(255) NOT NULL,
  `last_name` varchar(255) NOT NULL,
  `username` varchar(255) NOT NULL,
  `username_canonical` varchar(255) CHARACTER SET latin1 COLLATE latin1_general_ci NOT NULL,
  `email` varchar(255) CHARACTER SET latin1 COLLATE latin1_general_ci NOT NULL,
  `email_canonical` varchar(255) CHARACTER SET latin1 COLLATE latin1_general_ci NOT NULL,
  `algorithm` varchar(128) NOT NULL DEFAULT 'sha1',
  `salt` text,
  `password` varchar(255) DEFAULT NULL,
  `is_active` tinyint(1) DEFAULT '1',
  `is_super_admin` tinyint(1) DEFAULT '0',
  `last_login` datetime DEFAULT NULL,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  `contact_id` int(11) DEFAULT NULL,
  `club_id` int(11) DEFAULT NULL,
  `is_security_admin` tinyint(1) NOT NULL DEFAULT '0',
  `is_readonly_admin` int(1) NOT NULL DEFAULT '0',
  `is_team_admin` int(1) NOT NULL,
  `is_team_section_admin` int(1) NOT NULL,
  `last_reminder` datetime DEFAULT NULL,
  `enabled` tinyint(1) NOT NULL,
  `plain_password` varchar(255) CHARACTER SET armscii8 NOT NULL,
  `locked` tinyint(1) DEFAULT '0',
  `expired` tinyint(1) DEFAULT NULL,
  `expires_at` datetime DEFAULT NULL,
  `confirmation_token` varchar(255) DEFAULT NULL,
  `password_requested_at` datetime DEFAULT NULL,
  `roles` varchar(255) CHARACTER SET armscii8 NOT NULL,
  `credentials_expired` tinyint(1) DEFAULT '0',
  `credentials_expire_at` datetime DEFAULT NULL,
  `has_full_permission` tinyint(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  UNIQUE KEY `contact_id_UNIQUE` (`contact_id`,`club_id`),
  KEY `is_active_idx_idx` (`is_active`),
  KEY `username` (`username`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `sf_guard_user_ibfk_1` FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `sf_guard_user_ibfk_2` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=1688 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`fairgate`@`localhost`*/ /*!50003 TRIGGER `lastLoginTrigger` AFTER UPDATE ON `sf_guard_user` FOR EACH ROW BEGIN
	UPDATE `fg_cm_contact` 
    SET `last_login`=NEW.`last_login` 
    WHERE NEW.`contact_id`=`id`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;

--
-- Table structure for table `sf_guard_user_club`
--

DROP TABLE IF EXISTS `sf_guard_user_club`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `sf_guard_user_club` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` bigint(20) NOT NULL,
  `club_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `user_id_2` (`user_id`,`club_id`),
  KEY `club_id` (`club_id`),
  CONSTRAINT `sf_guard_user_club_ibfk_1` FOREIGN KEY (`club_id`) REFERENCES `fg_club` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `sf_guard_user_club_ibfk_2` FOREIGN KEY (`user_id`) REFERENCES `sf_guard_user` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `sf_guard_user_group`
--

DROP TABLE IF EXISTS `sf_guard_user_group`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `sf_guard_user_group` (
  `user_id` bigint(20) NOT NULL DEFAULT '0',
  `group_id` bigint(20) NOT NULL DEFAULT '0',
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  PRIMARY KEY (`user_id`,`group_id`),
  KEY `sf_guard_user_group_group_id_sf_guard_group_id` (`group_id`),
  KEY `user_id` (`user_id`),
  CONSTRAINT `sf_guard_user_group_group_id_sf_guard_group_id0` FOREIGN KEY (`group_id`) REFERENCES `sf_guard_group` (`id`) ON DELETE CASCADE,
  CONSTRAINT `sf_guard_user_group_user_id_sf_guard_user_id0` FOREIGN KEY (`user_id`) REFERENCES `sf_guard_user` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `sf_guard_user_permission`
--

DROP TABLE IF EXISTS `sf_guard_user_permission`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `sf_guard_user_permission` (
  `user_id` bigint(20) NOT NULL DEFAULT '0',
  `permission_id` bigint(20) NOT NULL DEFAULT '0',
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  PRIMARY KEY (`user_id`,`permission_id`),
  KEY `sf_guard_user_permission_permission_id_sf_guard_permission_id` (`permission_id`),
  CONSTRAINT `sf_guard_user_permission_ibfk_1` FOREIGN KEY (`user_id`) REFERENCES `sf_guard_user` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT `sf_guard_user_permission_ibfk_2` FOREIGN KEY (`permission_id`) REFERENCES `sf_guard_permission` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `sf_guard_user_team`
--

DROP TABLE IF EXISTS `sf_guard_user_team`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `sf_guard_user_team` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `contact_id` int(11) NOT NULL,
  `group_id` bigint(20) NOT NULL,
  `role_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_fg_security_admin_fg_rm_role1` (`role_id`),
  KEY `fk_fg_security_admin_fg_cm_contact1` (`contact_id`),
  KEY `fk_fg_security_admin_sf_guard_group1` (`group_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `tp_import_1436856113`
--

DROP TABLE IF EXISTS `tp_import_1436856113`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tp_import_1436856113` (
  `row_id` int(11) NOT NULL AUTO_INCREMENT,
  `column0` text,
  `column1` text,
  `column2` text,
  `column3` text,
  `column4` text,
  `column5` text,
  `column6` text,
  `column7` text,
  `column8` text,
  `column9` text,
  `column10` text,
  `column11` text,
  `column12` text,
  `column13` text,
  `column14` text,
  `column15` text,
  `column16` text,
  `column17` text,
  `column18` text,
  `column19` text,
  `column20` text,
  `column21` text,
  `column22` text,
  `column23` text,
  `column24` text,
  `column25` text,
  `column26` text,
  `column27` text,
  `column28` text,
  `column29` text,
  `column30` text,
  `column31` text,
  `column32` text,
  `column33` text,
  `column34` text,
  `column35` text,
  `column36` text,
  `column37` text,
  `column38` text,
  `column39` text,
  `column40` text,
  `column41` text,
  `column42` text,
  `column43` text,
  `column44` text,
  `column45` text,
  `column46` text,
  `column47` text,
  `column48` text,
  `column49` text,
  `column50` text,
  `column51` text,
  `column52` text,
  `column53` text,
  `column54` text,
  `column55` text,
  `column56` text,
  `column57` text,
  `column58` text,
  `column59` text,
  `contact_id` int(11) DEFAULT NULL,
  `membership_id` varchar(255) DEFAULT NULL,
  `member_clubid` int(11) DEFAULT NULL,
  `is_fed_member` tinyint(1) DEFAULT '0',
  `is_removed` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`row_id`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `tp_import_1436862470`
--

DROP TABLE IF EXISTS `tp_import_1436862470`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tp_import_1436862470` (
  `row_id` int(11) NOT NULL AUTO_INCREMENT,
  `column0` text,
  `column1` text,
  `column2` text,
  `contact_id` int(11) DEFAULT NULL,
  `membership_id` varchar(255) DEFAULT NULL,
  `member_clubid` int(11) DEFAULT NULL,
  `is_fed_member` tinyint(1) DEFAULT '0',
  `is_removed` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`row_id`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `tp_import_1436877676`
--

DROP TABLE IF EXISTS `tp_import_1436877676`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tp_import_1436877676` (
  `row_id` int(11) NOT NULL AUTO_INCREMENT,
  `column0` text,
  `column1` text,
  `column2` text,
  `column3` text,
  `column4` text,
  `column5` text,
  `column6` text,
  `column7` text,
  `column8` text,
  `column9` text,
  `column10` text,
  `column11` text,
  `contact_id` int(11) DEFAULT NULL,
  `membership_id` varchar(255) DEFAULT NULL,
  `member_clubid` int(11) DEFAULT NULL,
  `is_fed_member` tinyint(1) DEFAULT '0',
  `is_removed` tinyint(1) DEFAULT '0',
  `same_invoice_address` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`row_id`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `tp_import_1436877855`
--

DROP TABLE IF EXISTS `tp_import_1436877855`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tp_import_1436877855` (
  `row_id` int(11) NOT NULL AUTO_INCREMENT,
  `column0` text,
  `column1` text,
  `column2` text,
  `column3` text,
  `column4` text,
  `column5` text,
  `column6` text,
  `column7` text,
  `column8` text,
  `column9` text,
  `column10` text,
  `column11` text,
  `contact_id` int(11) DEFAULT NULL,
  `membership_id` varchar(255) DEFAULT NULL,
  `member_clubid` int(11) DEFAULT NULL,
  `is_fed_member` tinyint(1) DEFAULT '0',
  `is_removed` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`row_id`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `tp_import_1436877911`
--

DROP TABLE IF EXISTS `tp_import_1436877911`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tp_import_1436877911` (
  `row_id` int(11) NOT NULL AUTO_INCREMENT,
  `column0` text,
  `column1` text,
  `column2` text,
  `column3` text,
  `column4` text,
  `column5` text,
  `column6` text,
  `column7` text,
  `column8` text,
  `column9` text,
  `column10` text,
  `column11` text,
  `contact_id` int(11) DEFAULT NULL,
  `membership_id` varchar(255) DEFAULT NULL,
  `member_clubid` int(11) DEFAULT NULL,
  `is_fed_member` tinyint(1) DEFAULT '0',
  `is_removed` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`row_id`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `tp_import_1436878081`
--

DROP TABLE IF EXISTS `tp_import_1436878081`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tp_import_1436878081` (
  `row_id` int(11) NOT NULL AUTO_INCREMENT,
  `column0` text,
  `column1` text,
  `column2` text,
  `column3` text,
  `column4` text,
  `column5` text,
  `column6` text,
  `column7` text,
  `column8` text,
  `column9` text,
  `column10` text,
  `column11` text,
  `contact_id` int(11) DEFAULT NULL,
  `membership_id` varchar(255) DEFAULT NULL,
  `member_clubid` int(11) DEFAULT NULL,
  `is_fed_member` tinyint(1) DEFAULT '0',
  `is_removed` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`row_id`)
) ENGINE=InnoDB AUTO_INCREMENT=512 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `tp_import_1436943377`
--

DROP TABLE IF EXISTS `tp_import_1436943377`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tp_import_1436943377` (
  `row_id` int(11) NOT NULL AUTO_INCREMENT,
  `column0` text,
  `column1` text,
  `column2` text,
  `column3` text,
  `column4` text,
  `column5` text,
  `contact_id` int(11) DEFAULT NULL,
  `membership_id` varchar(255) DEFAULT NULL,
  `member_clubid` int(11) DEFAULT NULL,
  `is_fed_member` tinyint(1) DEFAULT '0',
  `is_removed` tinyint(1) DEFAULT '0',
  `is_sponsor` int(11) DEFAULT '1',
  PRIMARY KEY (`row_id`)
) ENGINE=InnoDB AUTO_INCREMENT=32 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `tp_import_1436961182`
--

DROP TABLE IF EXISTS `tp_import_1436961182`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tp_import_1436961182` (
  `row_id` int(11) NOT NULL AUTO_INCREMENT,
  `column0` text,
  `column1` text,
  `column2` text,
  `column3` text,
  `column4` text,
  `column5` text,
  `column6` text,
  `column7` text,
  `column8` text,
  `column9` text,
  `column10` text,
  `column11` text,
  `column12` text,
  `contact_id` int(11) DEFAULT NULL,
  `membership_id` varchar(255) DEFAULT NULL,
  `member_clubid` int(11) DEFAULT NULL,
  `is_fed_member` tinyint(1) DEFAULT '0',
  `is_removed` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`row_id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `tp_import_1436961352`
--

DROP TABLE IF EXISTS `tp_import_1436961352`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tp_import_1436961352` (
  `row_id` int(11) NOT NULL AUTO_INCREMENT,
  `column0` text,
  `column1` text,
  `column2` text,
  `column3` text,
  `column4` text,
  `column5` text,
  `column6` text,
  `column7` text,
  `column8` text,
  `column9` text,
  `column10` text,
  `column11` text,
  `column12` text,
  `contact_id` int(11) DEFAULT NULL,
  `membership_id` varchar(255) DEFAULT NULL,
  `member_clubid` int(11) DEFAULT NULL,
  `is_fed_member` tinyint(1) DEFAULT '0',
  `is_removed` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`row_id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping routines for database 'fairgate_v4'
--
/*!50003 DROP FUNCTION IF EXISTS `clubCount` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`fairgate`@`localhost` FUNCTION `clubCount`(`clubId` INT) RETURNS int(11)
BEGIN

        DECLARE clubTotalCount int DEFAULT 0;
        SELECT count(c.id) INTO  clubTotalCount FROM (SELECT  sublevelClubs(id) AS id, @level AS level FROM (SELECT  @start_with := clubId,@id := @start_with,@level := 0) vars, fg_club WHERE @id IS NOT NULL) ho JOIN fg_club c ON c.id = ho.id WHERE c.is_deleted=0;
        RETURN clubTotalCount;
          
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP FUNCTION IF EXISTS `contactFieldMaxSorOrder` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`fairgate`@`localhost` FUNCTION `contactFieldMaxSorOrder`(clubId INT, attributesetId INT) RETURNS int(11)
BEGIN
	DECLARE sortOrder INTEGER DEFAULT 0;
	SELECT MAX(sort_order)+1 INTO sortOrder FROM fg_cm_club_attribute AS cca WHERE cca.club_id = clubId AND cca.attribute_id IN(SELECT id FROM fg_cm_attribute WHERE attributeset_id = attributesetId);
	RETURN sortOrder;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `contactName` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`fairgate`@`localhost` FUNCTION `contactName`(`contactId` INT) RETURNS text CHARSET utf8
BEGIN
	DECLARE contactName TEXT DEFAULT '';

        SELECT (CASE WHEN (c.is_company = 1) THEN (IF ((c.has_main_contact = 1), (SELECT CONCAT(m.`9`, ' (', m.`23`, ' ', m.`2`, ')') FROM `master_system` m WHERE m.`contact_id` = contactId), (SELECT m.`9` FROM `master_system` m WHERE m.`contact_id` = contactId))) ELSE (SELECT CONCAT(m.`23`, ' ', m.`2`) FROM `master_system` m WHERE m.`contact_id` = contactId) END) INTO contactName FROM `fg_cm_contact` c WHERE c.`id` = contactId;

        RETURN contactName;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `contactNameYOB` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`fairgate`@`localhost` FUNCTION `contactNameYOB`(contactId INT) RETURNS text CHARSET utf8
BEGIN
	DECLARE `contactNameYOB` TEXT DEFAULT '';
SELECT 
(

    CASE WHEN (c.is_company=0) 
    THEN ( 
        SELECT CONCAT(m.`23`,' ',`2`,
                      IF(DATE_FORMAT(m.`4`,'%Y') = '0000' OR m.`4` is NULL OR m.`4` ='','',CONCAT(' (',DATE_FORMAT(m.`4`,'%Y'),')')
                        )
                     ) FROM `master_system` m WHERE m.`contact_id` = contactId
        ) 
    ELSE (
         IF (
             (c.has_main_contact = 1), 
             (SELECT CONCAT(m.`9`, ' (', m.`23`, ' ', m.`2`, ')') FROM `master_system` m WHERE m.`contact_id` = contactId),
             (SELECT m.`9` FROM `master_system` m WHERE m.`contact_id` = contactId)
            )
    ) END )
    INTO contactNameYOB FROM `fg_cm_contact` c left join master_system m on c.id=m.contact_id WHERE c.`id` = contactId;
     RETURN contactNameYOB;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `filterText` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`fairgate`@`%` FUNCTION `filterText`(`inputText` TEXT CHARSET utf8) RETURNS text CHARSET latin1
return TRIM(BOTH '\"' FROM (TRIM(BOTH '\r' FROM (TRIM(BOTH '\n' FROM TRIM(inputText)))))) ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP FUNCTION IF EXISTS `getActiveFreeClients` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` FUNCTION `getActiveFreeClients`() RETURNS text CHARSET latin1
BEGIN
	DECLARE clientCount TEXT DEFAULT '';

	SELECT (SELECT GROUP_CONCAT(idVal) AS clubIds FROM 
                (SELECT a.id AS idVal, a.created_at, (SELECT COUNT(cl.id) FROM fg_cm_change_log cl LEFT JOIN fg_cm_contact cnt1 ON (cl.contact_id=cnt1.id) WHERE cnt1.club_id=a.id AND cl.kind='login' AND DATE(cl.date) >= DATE_SUB(CURDATE(),INTERVAL 3 MONTH)) AS loginCount, (SELECT count(DISTINCT id) FROM fg_cm_contact WHERE club_id=a.id AND is_draft=0 AND is_deleted=0 AND is_permanent_delete=0) AS active_contacts
                    FROM fg_club a
                    WHERE a.is_deleted = 0 AND a.id <> 1 AND a.is_fairgate <> 1 AND a.state='CF'
                    HAVING (DATE(a.created_at) < DATE_SUB(CURDATE(),INTERVAL 3 MONTH)) AND (loginCount >= 3) AND (active_contacts >= 10) )
                AS clbTbl) INTO clientCount;


  	RETURN clientCount;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP FUNCTION IF EXISTS `getActiveSponsortext` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` FUNCTION `getActiveSponsortext`(s_sms_id INT) RETURNS text CHARSET utf8
BEGIN  
DECLARE s_sponsor_text_out TEXT  CHARSET  utf8;
SELECT  CASE WHEN (SELECT smd.media_id FROM fg_sm_bookings smd WHERE smd.sms_package_id = s_sms_id AND smd.begin_date <= CURDATE() AND smd.end_date IS NULL LIMIT 1 ) THEN (SELECT sm.sms_text FROM fg_sm_media sm WHERE (sm.id = (SELECT sb.media_id FROM fg_sm_bookings sb WHERE sb.sms_package_id = s_sms_id AND sb.end_date IS NULL LIMIT 1 ))) ELSE "" END INTO  s_sponsor_text_out;
return s_sponsor_text_out;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP FUNCTION IF EXISTS `getClassAssignmentCount` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`fairgate`@`localhost` FUNCTION `getClassAssignmentCount`(classId INT, clubId INT) RETURNS int(11)
BEGIN
	DECLARE assignmentCount  INTEGER DEFAULT 0;

	select count(cca.id) INTO assignmentCount from fg_club_class_assignment AS cca WHERE cca.class_id =classId AND (cca.club_id IN(SELECT c.id FROM (SELECT  sublevelClubs(id) AS id, @level AS level FROM (SELECT  @start_with := clubId,@id := @start_with,@level := 0) vars, fg_club WHERE @id IS NOT NULL) ho JOIN fg_club c ON c.id = ho.id ));
	RETURN assignmentCount;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP FUNCTION IF EXISTS `getClientstateAmountOfClub` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` FUNCTION `getClientstateAmountOfClub`(clubId INT, frontend1ModuleId INT, frontend2ModuleId INT, webhostingModuleId INT) RETURNS int(11)
BEGIN
	DECLARE fedQry, packageIncomeQry, moduleIncomeQry, adFreeIncomeQry, exec_qry TEXT DEFAULT '';
	DECLARE annualPackageIncome, annualModuleIncome, annualAdFreeIncome, totalAmount INTEGER DEFAULT 0;
	DECLARE awe INTEGER DEFAULT 1;

        SET @awe = 1;
		


		SELECT Club_id INTO @awe From(SELECT  @clubid AS Club_id,(SELECT  @clubid := parent_club_id
         FROM fg_club WHERE id = Club_id) AS parent,@level := @level+ 1 AS level FROM (SELECT  @clubid :=clubId, @level:= 0) vars, fg_club h WHERE @clubid <> 0) Parents_History inner join fg_club on fg_club.id = Parents_History.Club_id and fg_club.is_federation = 1 limit 1;

		BLOCK1: BEGIN
			
			SELECT (IF ((((d.cost > 0 && d.cost < c.cost && b.payment_type <> 'ONDEMAND') || (b.payment_type = 'ONDEMAND'))), (d.cost), (c.cost))) INTO @annualPackageIncome

		        FROM fg_mb_club_plan a 
		        LEFT JOIN fg_mb_packages b ON a.packages_id = b.id 
		        LEFT JOIN fg_mb_packages_federation c ON b.id = c.package_id 
		        LEFT JOIN fg_mb_package_individual_price d ON (b.id = d.packages_id AND d.club_id=clubId) 
		        WHERE a.club_id = clubId AND a.status = 'ACTIVE' AND 
		        c.federation_id IN (IF ((@awe), (@awe), (1))) 
		        GROUP BY a.packages_id 
		        ORDER BY a.signed_on DESC 
		        LIMIT 1;
			
		END BLOCK1;

		BLOCK2: BEGIN
			
			SELECT SUM(IF ((b.cost_yearly = ''), (0), (IF(((d.is_cost_yearly=1) && (d.cost_yearly IS NULL || (d.cost_yearly = '') || (d.cost_yearly <= b.cost_yearly))), (IF((d.cost_yearly >= 0), (d.cost_yearly), (0))), (IF((b.cost_yearly >= 0), (b.cost_yearly), (0))))))) 
			INTO @annualModuleIncome
		        FROM fg_mb_module a
		        LEFT JOIN fg_mb_module_federation b ON a.id = b.module_id
		        LEFT JOIN fg_mb_club_modules c ON ((c.club_id = clubId AND c.module_id = a.id))
		        LEFT JOIN fg_mb_module_individual_price d ON ((d.club_id = clubId AND d.module_id = a.id))
		        WHERE (a.is_visible = 1 AND c.club_id = clubId
		        AND b.federation_id IN (IF ((@awe), (@awe), (1))) 
			AND ((DATEDIFF(NOW(), c.signed_on) >= 30) OR (a.id = frontend2ModuleId) OR (a.id = webhostingModuleId) OR ((a.id = frontend1ModuleId) AND ((SELECT a1.id FROM fg_mb_club_modules a1 WHERE a1.club_id=c.club_id AND a1.module_id=frontend2ModuleId) IS NOT NULL))) 
		        AND b.is_default != 1)
		        ORDER BY a.sort_order ASC;
			
		END BLOCK2;

		BLOCK3: BEGIN
			
			SELECT SUM(a.cost) INTO @annualAdFreeIncome 
			FROM fg_mb_club_adfree a 
			LEFT JOIN fg_am_ads_type b ON a.ad_type_id = b.id 
			WHERE (a.club_id = clubId AND a.is_active = '1' AND a.is_selected = '1' AND (a.cost IS NOT NULL AND a.cost != '0'));
			
		END BLOCK3;

		IF ((@annualPackageIncome = '') || @annualPackageIncome IS NULL) THEN
			SET @annualPackageIncome = '0';
		END IF;
		IF ((@annualModuleIncome = '') || @annualModuleIncome IS NULL) THEN
			SET @annualModuleIncome = '0';
		END IF;
		IF ((@annualAdFreeIncome = '') || @annualAdFreeIncome IS NULL) THEN
			SET @annualAdFreeIncome = '0';
		END IF;

		SET @totalAmount = @annualPackageIncome + @annualModuleIncome + @annualAdFreeIncome;

  		RETURN @totalAmount;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP FUNCTION IF EXISTS `getClientstateAmountOfClubCopy` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` FUNCTION `getClientstateAmountOfClubCopy`(clubId INT, frontend1ModuleId INT, frontend2ModuleId INT, webhostingModuleId INT) RETURNS text CHARSET latin1
BEGIN
	DECLARE fedQry, packageIncomeQry, moduleIncomeQry, adFreeIncomeQry, exec_qry, sum_test TEXT DEFAULT '';
	DECLARE annualPackageIncome, annualModuleIncome, annualAdFreeIncome, totalAmount INTEGER DEFAULT 0;
	DECLARE awe INTEGER DEFAULT 1;

	SET @awe = 1;
		


		SELECT Club_id INTO @awe From(SELECT  @clubid AS Club_id,(SELECT  @clubid := parent_club_id
         FROM fg_club WHERE id = Club_id) AS parent,@level := @level+ 1 AS level FROM (SELECT  @clubid :=clubId, @level:= 0) vars, fg_club h WHERE @clubid <> 0) Parents_History inner join fg_club on fg_club.id = Parents_History.Club_id and fg_club.is_federation = 1 limit 1;

		BLOCK1: BEGIN
			
			SELECT (IF ((((d.cost > 0 && d.cost < c.cost && b.payment_type <> 'ONDEMAND') || (b.payment_type = 'ONDEMAND'))), (d.cost), (c.cost))) INTO @annualPackageIncome

		        FROM fg_mb_club_plan a 
		        LEFT JOIN fg_mb_packages b ON a.packages_id = b.id 
		        LEFT JOIN fg_mb_packages_federation c ON b.id = c.package_id 
		        LEFT JOIN fg_mb_package_individual_price d ON (b.id = d.packages_id AND d.club_id=clubId) 
		        WHERE a.club_id = clubId AND a.status = 'ACTIVE' AND 
		        c.federation_id IN (IF ((@awe), (@awe), (1))) 
		        GROUP BY a.packages_id 
		        ORDER BY a.signed_on DESC 
		        LIMIT 1;
			
		END BLOCK1;

		BLOCK2: BEGIN
			
			SELECT SUM(IF ((b.cost_yearly = ''), (0), (IF(((d.is_cost_yearly=1) && (d.cost_yearly IS NULL || (d.cost_yearly = '') || (d.cost_yearly <= b.cost_yearly))), (IF((d.cost_yearly >= 0), (d.cost_yearly), (0))), (IF((b.cost_yearly >= 0), (b.cost_yearly), (0))))))) 
			INTO @annualModuleIncome
		        FROM fg_mb_module a
		        LEFT JOIN fg_mb_module_federation b ON a.id = b.module_id
		        LEFT JOIN fg_mb_club_modules c ON ((c.club_id = clubId AND c.module_id = a.id))
		        LEFT JOIN fg_mb_module_individual_price d ON ((d.club_id = clubId AND d.module_id = a.id))
		        WHERE (a.is_visible = 1 AND c.club_id = clubId
		        AND b.federation_id IN (IF ((@awe), (@awe), (1))) 
			AND ((DATEDIFF(NOW(), c.signed_on) >= 30) OR (a.id = frontend2ModuleId) OR (a.id = webhostingModuleId) OR ((a.id = frontend1ModuleId) AND ((SELECT a1.id FROM fg_mb_club_modules a1 WHERE a1.club_id=c.club_id AND a1.module_id=frontend2ModuleId) IS NOT NULL))) 
		        AND b.is_default != 1)
		        ORDER BY a.sort_order ASC;
			
		END BLOCK2;

		BLOCK3: BEGIN
			
			SELECT SUM(a.cost) INTO @annualAdFreeIncome 
			FROM fg_mb_club_adfree a 
			LEFT JOIN fg_am_ads_type b ON a.ad_type_id = b.id 
			WHERE (a.club_id = clubId AND a.is_active = '1' AND a.is_selected = '1' AND (a.cost IS NOT NULL AND a.cost != '0'));
			
		END BLOCK3;

		IF ((@annualPackageIncome = '') || @annualPackageIncome IS NULL) THEN
			SET @annualPackageIncome = '0';
		END IF;
		IF ((@annualModuleIncome = '') || @annualModuleIncome IS NULL) THEN
			SET @annualModuleIncome = '0';
		END IF;
		IF ((@annualAdFreeIncome = '') || @annualAdFreeIncome IS NULL) THEN
			SET @annualAdFreeIncome = '0';
		END IF;

		
		SET @totalAmount = @annualPackageIncome + @annualModuleIncome + @annualAdFreeIncome;
		SET @sum_test = CONCAT(clubId,':',@awe,'=',@annualPackageIncome,'-', @annualModuleIncome,'-', @annualAdFreeIncome, ' = ',@totalAmount);
		
  		RETURN @sum_test;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP FUNCTION IF EXISTS `getClientstateAmountOfClub_test` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` FUNCTION `getClientstateAmountOfClub_test`(clubId INT, frontend1ModuleId INT, frontend2ModuleId INT) RETURNS int(11)
BEGIN
	DECLARE fedQry, packageIncomeQry, moduleIncomeQry, adFreeIncomeQry, exec_qry, awe TEXT DEFAULT '';
	DECLARE annualPackageIncome, annualModuleIncome, annualAdFreeIncome, totalAmount INTEGER DEFAULT 0;

BLOCK1: BEGIN
		 select Club_id INTO @awe From(SELECT  @clubid AS Club_id,(SELECT  @clubid := parent_club_id
         FROM fg_club WHERE id = Club_id) AS parent,@level := @level+ 1 AS level FROM (SELECT  @clubid :=695, @level:= 0) vars, fg_club h WHERE @clubid <> 0) Parents_History inner join fg_club on fg_club.id = Parents_History.Club_id and fg_club.is_federation = 1 limit 1;

		
			
			SELECT (IF ((((d.cost > 0 && d.cost < c.cost && b.payment_type <> 'ONDEMAND') || (b.payment_type = 'ONDEMAND'))), (d.cost), (c.cost))) INTO @annualPackageIncome

		        FROM fg_mb_club_plan a 
		        LEFT JOIN fg_mb_packages b ON a.packages_id = b.id 
		        LEFT JOIN fg_mb_packages_federation c ON b.id = c.package_id 
		        LEFT JOIN fg_mb_package_individual_price d ON (b.id = d.packages_id AND d.club_id=clubId) 
		        WHERE a.club_id = clubId AND a.status = 'ACTIVE' AND 
		        c.federation_id IN (IF ((@awe), (@awe), (1))) 
		        GROUP BY a.packages_id 
		        ORDER BY a.signed_on DESC 
		        LIMIT 1;
			
		
		
			
			SELECT SUM(IF ((b.cost_yearly = ''), (0), (IF(((d.is_cost_yearly=1) && (d.cost_yearly IS NULL || (d.cost_yearly = '') || (d.cost_yearly <= b.cost_yearly))), (IF((d.cost_yearly >= 0), (d.cost_yearly), (0))), (IF((b.cost_yearly >= 0), (b.cost_yearly), (0))))))) 
			INTO @annualModuleIncome
		        FROM fg_mb_module a
		        LEFT JOIN fg_mb_module_federation b ON a.id = b.module_id
		        LEFT JOIN fg_mb_club_modules c ON ((c.club_id = clubId AND c.module_id = a.id))
		        LEFT JOIN fg_mb_module_individual_price d ON ((d.club_id = clubId AND d.module_id = a.id))
		        WHERE (a.is_visible = 1 AND c.club_id = clubId
		        AND b.federation_id IN
		        (IF ((@awe), (@awe), (1))) 
			AND ((DATEDIFF(NOW(), c.signed_on) >= 30) OR (a.id = frontend2ModuleId) OR ((a.id = frontend1ModuleId) AND ((SELECT a1.id FROM fg_mb_club_modules a1 WHERE a1.club_id=c.club_id AND a1.module_id=frontend2ModuleId) IS NOT NULL))) 
		        AND b.is_default != 1)
		        ORDER BY a.sort_order ASC;
			
		

		
			
			SELECT SUM(a.cost) INTO @annualAdFreeIncome 
			FROM fg_mb_club_adfree a 
			LEFT JOIN fg_am_ads_type b ON a.ad_type_id = b.id 
			WHERE (a.club_id = clubId AND a.is_active = '1' AND a.is_selected = '1' AND (a.cost IS NOT NULL AND a.cost != '0'));
			
END BLOCK1;


		IF ((@annualPackageIncome = '') || @annualPackageIncome IS NULL) THEN
			SET @annualPackageIncome = '0';
		END IF;
		IF ((@annualModuleIncome = '') || @annualModuleIncome IS NULL) THEN
			SET @annualModuleIncome = '0';
		END IF;
		IF ((@annualAdFreeIncome = '') || @annualAdFreeIncome IS NULL) THEN
			SET @annualAdFreeIncome = '0';
		END IF;

		SET @totalAmount = @annualPackageIncome + @annualModuleIncome + @annualAdFreeIncome;

  		RETURN @totalAmount;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP FUNCTION IF EXISTS `getClubCategoryCount` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`fairgate`@`localhost` FUNCTION `getClubCategoryCount`(`categoryid` INT, `clubid` INT) RETURNS int(11)
BEGIN
	DECLARE categoryCount TEXT DEFAULT '';

	SELECT count(distinct(rc.contact_id)) INTO categoryCount 
	FROM `fg_rm_role_contact` rc 
	LEFT JOIN `fg_rm_category_role_function` crf ON crf.id = rc.fg_rm_crf_id 
	LEFT JOIN `fg_cm_contact` cc ON rc.contact_id = cc.id
	WHERE crf.`category_id` = categoryid and ((cc.`club_id` IN (SELECT c.id FROM 
			(SELECT  sublevelClubs(id) AS id, @level AS level FROM 
				(SELECT  @start_with := clubid,@id := @start_with,@level := 0) vars, 
			fg_club WHERE @id IS NOT NULL) 
		ho JOIN fg_club c ON c.id = ho.id)) OR (cc.`club_id` = clubid));
  	RETURN categoryCount;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP FUNCTION IF EXISTS `getClubExecutiveFunctionCount` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`fairgate`@`localhost` FUNCTION `getClubExecutiveFunctionCount`(`categoryid` INT,`roleid` INT, `functionid` INT, `clubid` INT, `executiveboard` INT, `clubtype` TEXT) RETURNS int(11)
BEGIN
	DECLARE functionCount TEXT DEFAULT '';

	SELECT count(distinct(rc.contact_id)) INTO functionCount 
	FROM `fg_rm_role_contact` rc 
	LEFT JOIN `fg_rm_category_role_function` crf ON crf.id = rc.fg_rm_crf_id 
	LEFT JOIN `fg_cm_contact` cc ON rc.contact_id = cc.id
	WHERE (IF ((categoryid), (crf.`category_id` = categoryid), (1))) and 
		  (IF ((roleid), (crf.`role_id` = roleid), (1))) and
		  (IF ((functionid), (crf.`function_id` = functionid), (1))) and
		  (
			(CASE WHEN (executiveboard = 1 AND (clubtype = 'federation' OR clubtype = 'sub_federation')) THEN
			   (rc.`assined_club_id` IN 
					(SELECT c.id FROM 
						(SELECT  sublevelClubs(id) AS id, @level AS level FROM 
							(SELECT  @start_with := clubid,@id := @start_with,@level := 0) vars, 
						fg_club WHERE @id IS NOT NULL) 
					ho JOIN fg_club c ON c.id = ho.id AND c.is_federation = 0 AND c.is_sub_federation = 0)
				) 
				ELSE 
				(rc.`assined_club_id` = clubid) END)
		);			
  	RETURN functionCount;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP FUNCTION IF EXISTS `getClubFunctionCount` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`fairgate`@`localhost` FUNCTION `getClubFunctionCount`(`categoryid` INT,`roleid` INT, `functionid` INT, `clubid` INT) RETURNS int(11)
BEGIN
	DECLARE functionCount TEXT DEFAULT '';

	SELECT count(distinct(rc.contact_id)) INTO functionCount 
	FROM `fg_rm_role_contact` rc 
	LEFT JOIN `fg_rm_category_role_function` crf ON crf.id = rc.fg_rm_crf_id 
	LEFT JOIN `fg_cm_contact` cc ON rc.contact_id = cc.id
	WHERE (IF ((categoryid), (crf.`category_id` = categoryid), (1))) and 
		  (IF ((roleid), (crf.`role_id` = roleid), (1))) and
		  (IF ((functionid), (crf.`function_id` = functionid), (1))) and
		  ((cc.`club_id` IN (SELECT c.id FROM 
			(SELECT  sublevelClubs(id) AS id, @level AS level FROM 
				(SELECT  @start_with := clubid,@id := @start_with,@level := 0) vars, 
			fg_club WHERE @id IS NOT NULL) 
		ho JOIN fg_club c ON c.id = ho.id)) OR (cc.`club_id` = clubid));
  	RETURN functionCount;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP FUNCTION IF EXISTS `getClubRoleCount` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`fairgate`@`localhost` FUNCTION `getClubRoleCount`(`roleid` INT, `clubid` INT) RETURNS int(11)
BEGIN
	DECLARE roleCount TEXT DEFAULT '';

	SELECT count(distinct(rc.contact_id)) INTO roleCount 
	FROM `fg_rm_role_contact` rc 
	LEFT JOIN `fg_rm_category_role_function` crf ON crf.id = rc.fg_rm_crf_id 
	LEFT JOIN `fg_cm_contact` cc ON rc.contact_id = cc.id
	WHERE crf.`role_id` = roleid and ((cc.`club_id` IN (SELECT c.id FROM 
			(SELECT  sublevelClubs(id) AS id, @level AS level FROM 
				(SELECT  @start_with := clubid,@id := @start_with,@level := 0) vars, 
			fg_club WHERE @id IS NOT NULL) 
		ho JOIN fg_club c ON c.id = ho.id)) OR (cc.`club_id` = clubid));
  	RETURN roleCount;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP FUNCTION IF EXISTS `getClubTeamFunctionCount` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`fairgate`@`localhost` FUNCTION `getClubTeamFunctionCount`(`teamcategoryid` INT,`roleid` INT, `functionid` INT, `clubid` INT) RETURNS int(11)
BEGIN
	DECLARE functionCount TEXT DEFAULT '';

	SELECT count(distinct(rc.contact_id)) INTO functionCount 
	FROM `fg_rm_role_contact` rc 
	LEFT JOIN `fg_rm_category_role_function` crf ON crf.id = rc.fg_rm_crf_id 
	LEFT JOIN `fg_rm_role` r ON r.id = crf.role_id AND r.team_category_id = teamcategoryid AND is_active = 1
	LEFT JOIN `fg_cm_contact` cc ON rc.contact_id = cc.id
	WHERE (IF ((roleid), (crf.`role_id` = roleid), (crf.`role_id` IN (r.id)))) and
		  (IF ((functionid), (crf.`function_id` = functionid), (1))) and
		  (crf.`club_id` = clubid);
  	RETURN functionCount;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP FUNCTION IF EXISTS `getCmsMediaImage` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` FUNCTION `getCmsMediaImage`(p_news_id INT) RETURNS text CHARSET utf8
BEGIN
  DECLARE v_image TEXT  CHARSET  utf8;
  DECLARE v_image_out TEXT CHARSET  utf8 ;
  DECLARE v_media_type TEXT;
  DECLARE v_gallery_item INT;

  SELECT cnm.media_text,cnm.media_type,cnm.gallery_item_id INTO v_image,v_media_type,v_gallery_item FROM fg_cms_news_media cnm WHERE cnm.news_id=p_news_id ORDER BY cnm.sort_order ASC LIMIT 1;
  SELECT CASE WHEN ((v_image='' OR v_image IS NULL) AND v_media_type = 'gallery')  THEN (SELECT image_url FROM fg_gm_images gi WHERE gi.id=v_gallery_item) ELSE v_image END INTO v_image_out;
  return v_image_out;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP FUNCTION IF EXISTS `getContactName` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` FUNCTION `getContactName`(contactId INT, companyAttId INT, lastNameAttId INT, firstNameAttId INT) RETURNS text CHARSET latin1
BEGIN
	DECLARE contactName TEXT DEFAULT '';

	SELECT (IF((SELECT `is_company` FROM `fg_cm_contact` WHERE `id`=contactId),
                    (SELECT cnt2.value FROM fg_cm_attribute_value_text cnt2 WHERE cnt2.attribute_id = companyAttId AND cnt2.contact_id=contactId),
                    (SELECT group_concat(cnt2.value ORDER BY cnt2.attribute_id DESC SEPARATOR ' ') FROM fg_cm_attribute_value_text cnt2 WHERE cnt2.attribute_id IN (lastNameAttId,firstNameAttId) AND cnt2.contact_id=contactId))) INTO contactName;

  	RETURN contactName;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP FUNCTION IF EXISTS `getContactRoleFunctions` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` FUNCTION `getContactRoleFunctions`(clubId INT, contactId INT, roleIds TEXT, executiveBoardName TEXT) RETURNS text CHARSET latin1
BEGIN
	DECLARE roleFuncNames TEXT DEFAULT '';

	SELECT (SELECT GROUP_CONCAT(rleFunc SEPARATOR '; ')  as reslt FROM (
    		SELECT CONCAT((IF((r.is_executive_board = 1), (executiveBoardName), (r.title))), ' (', GROUP_CONCAT(DISTINCT(rf.title) SEPARATOR ', '), ')') AS rleFunc
	    	FROM fg_rm_role_contact rc
	    	INNER JOIN fg_rm_category_role_function crf ON ( rc.fg_rm_crf_id = crf.id )
	    	INNER JOIN fg_rm_role r ON ( crf.role_id = r.id )
	    	LEFT JOIN fg_team_category tc ON ( r.team_category_id = tc.id )
	    	LEFT JOIN fg_rm_function rf ON ( rf.id = crf.function_id )
	    	WHERE rc.contact_id = contactId AND FIND_IN_SET(r.id, roleIds) AND r.club_id = clubId
	    	GROUP BY rc.contact_id, r.id
		ORDER BY r.sort_order,rf.sort_order) AS rlecont) INTO roleFuncNames;

	RETURN roleFuncNames;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP FUNCTION IF EXISTS `getContactRoles` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` FUNCTION `getContactRoles`(clubId INT, contactId INT, roleIds TEXT, executiveBoardName TEXT) RETURNS text CHARSET latin1
BEGIN
	DECLARE roleNames TEXT DEFAULT '';

	SELECT (SELECT GROUP_CONCAT(rleName SEPARATOR '; ' )  as reslt FROM (
            	SELECT GROUP_CONCAT(DISTINCT(IF((r.is_executive_board = 1), (executiveBoardName), (r.title)))) AS rleName
            	FROM fg_rm_role_contact rc
            	INNER JOIN fg_rm_category_role_function crf ON ( rc.fg_rm_crf_id = crf.id )
            	INNER JOIN fg_rm_role r ON ( crf.role_id = r.id )
            	LEFT JOIN fg_team_category tc ON ( r.team_category_id = tc.id )
            	WHERE rc.contact_id = contactId AND FIND_IN_SET(r.id, roleIds) AND r.club_id = clubId
            	GROUP BY rc.contact_id, r.id
		ORDER BY tc.sort_order, r.sort_order) AS rletble) INTO roleNames;

	RETURN roleNames;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP FUNCTION IF EXISTS `getContactSortOrder` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` FUNCTION `getContactSortOrder`(companyID INT, contact INT) RETURNS text CHARSET utf8
BEGIN
   DECLARE f_company_out TEXT CHARSET utf8;
   DECLARE f_dob_out DATETIME;
   DECLARE f_com_dob_out TEXT CHARSET utf8;
   DECLARE f_lastname_out TEXT CHARSET utf8;
   DECLARE f_firstname_out TEXT CHARSET utf8;
   DECLARE f_name_out TEXT CHARSET utf8;
   IF companyID = 1 THEN
	   SELECT t1.value FROM fg_cm_attribute_value_text t1 WHERE t1.contact_id=contact and t1.attribute_id=9 INTO f_company_out;
	   SELECT t1.value FROM fg_cm_attribute_value_date t1 WHERE t1.contact_id=contact and t1.attribute_id=4 INTO f_dob_out;
	   SELECT CONCAT(f_company_out,',',f_dob_out) INTO f_com_dob_out;
	   return f_com_dob_out;
   ELSE
	   SELECT t1.value FROM fg_cm_attribute_value_text t1 WHERE t1.contact_id=contact and t1.attribute_id = 23 INTO f_lastname_out;
	   SELECT t1.value FROM fg_cm_attribute_value_text t1 WHERE t1.contact_id=contact and t1.attribute_id = 2 INTO f_firstname_out;
	   SELECT t1.value FROM fg_cm_attribute_value_date t1 WHERE t1.contact_id=contact and t1.attribute_id=4 INTO f_dob_out;
           IF  f_dob_out IS NOT NULL AND f_dob_out != '0000-00-00 00:00:00' THEN
	        SELECT CONCAT(f_lastname_out,',',f_firstname_out,',',f_dob_out) INTO f_name_out;
           ELSE
                SELECT CONCAT(f_lastname_out,',',f_firstname_out) INTO f_name_out;
           END IF;
	   return f_name_out;
   END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP FUNCTION IF EXISTS `getContactSortOrderAdmin` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` FUNCTION `getContactSortOrderAdmin`(companyID INT, contact INT,title TEXT  ) RETURNS text CHARSET utf8
BEGIN
   DECLARE f_company_out TEXT CHARSET utf8;
   DECLARE f_company_out_2 TEXT CHARSET utf8;
   DECLARE f_company_out_3 TEXT CHARSET utf8;
   DECLARE f_name_out_1 TEXT CHARSET utf8;
   DECLARE f_dob_out DATETIME;
   DECLARE f_com_dob_out TEXT CHARSET utf8;
   DECLARE f_lastname_out TEXT CHARSET utf8;
   DECLARE f_firstname_out TEXT CHARSET utf8;
   DECLARE f_name_out TEXT CHARSET utf8;
   IF companyID = 1 THEN
	   SELECT t1.value FROM fg_cm_attribute_value_text t1 WHERE t1.contact_id=contact and t1.attribute_id=9 INTO f_company_out;
       SELECT CONCAT(f_company_out,' ',title) INTO f_company_out_2;
            
	   return f_company_out_2;
   ELSE
	   SELECT t1.value FROM fg_cm_attribute_value_text t1 WHERE t1.contact_id=contact and t1.attribute_id = 23 INTO f_lastname_out;
	   SELECT t1.value FROM fg_cm_attribute_value_text t1 WHERE t1.contact_id=contact and t1.attribute_id = 2 INTO f_firstname_out;
	   SET @values_part = '';
	   IF (f_lastname_out != '') THEN
	     SET @values_part = CONCAT(@values_part, '', f_lastname_out);
       END IF;
	   IF (f_firstname_out != '') THEN
	     SET @values_part = CONCAT(@values_part, ' ', f_firstname_out);
       END IF;
	   SET @values_part = CONCAT(@values_part, ' ', title);
			SET f_name_out = @values_part;
          SELECT REPLACE(f_name_out, ',', ' ')  INTO f_name_out_1;
          return f_name_out_1;
	  
   END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP FUNCTION IF EXISTS `getFederationId` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` FUNCTION `getFederationId`(clubId INT) RETURNS int(11)
BEGIN
	DECLARE awe INTEGER DEFAULT 1;
	
		SELECT Club_id INTO @awe From(SELECT  @clubid AS Club_id,(SELECT  @clubid := parent_club_id
         FROM fg_club WHERE id = Club_id) AS parent,@level := @level+ 1 AS level FROM (SELECT  @clubid :=clubId, @level:= 0) vars, fg_club h WHERE @clubid <> 0) Parents_History inner join fg_club on fg_club.id = Parents_History.Club_id and fg_club.is_federation = 1 limit 1;

  		RETURN @awe;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP FUNCTION IF EXISTS `getFedMemberCount` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`fairgate`@`localhost` FUNCTION `getFedMemberCount`(clubId INT,fedId INT) RETURNS int(11)
BEGIN
    DECLARE FedMemberCount INTEGER DEFAULT 0;
    SELECT COUNT(fg_cm_contact.id) INTO FedMemberCount FROM fg_cm_contact WHERE  (fg_cm_contact.club_id=clubId OR fg_cm_contact.club_id IN ((SELECT hi.id as ids FROM (SELECT sublevelClubs(id) AS id, @level AS level FROM (SELECT  @start_with := clubId,@id := @start_with,@level := 0) vars, fg_club WHERE @id IS NOT NULL) ho JOIN fg_club hi ON hi.id = ho.id))) AND fg_cm_contact.membership_cat_id IN( SELECT id FROM fg_cm_membership WHERE fg_cm_membership.club_id=fedId AND fg_cm_membership.is_fed_category=1);
    RETURN FedMemberCount;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP FUNCTION IF EXISTS `getInvoiceAccounts` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` FUNCTION `getInvoiceAccounts`(invoiceId INT, accountIds TEXT, typeVal TEXT) RETURNS text CHARSET latin1
BEGIN
	DECLARE accountName TEXT DEFAULT '';

	IF (typeVal = 'account') THEN
		SELECT (SELECT GROUP_CONCAT(DISTINCT acntNme SEPARATOR '; ' ) as reslt FROM (
                	SELECT ac.income_acc_name AS acntNme
                	FROM fg_im_invoice_item ac
                	LEFT JOIN fg_im_item it ON (ac.item_id=it.id)
                	WHERE ac.invoice_id=invoiceId AND FIND_IN_SET(it.account_id, accountIds)
			GROUP BY ac.invoice_id, it.account_id 
			ORDER BY ac.income_acc_name
                	) AS acnttble) INTO accountName;
	ELSE
		SELECT (SELECT GROUP_CONCAT(DISTINCT acntNme SEPARATOR '; ' ) as reslt FROM (
                	SELECT CONCAT(ac.income_acc_name,' (',ac.income_acc_no,')') AS acntNme
                	FROM fg_im_invoice_item ac
                	LEFT JOIN fg_im_item it ON (ac.item_id=it.id)
                	WHERE ac.invoice_id=invoiceId AND FIND_IN_SET(it.account_id, accountIds)
			GROUP BY ac.invoice_id, it.account_id 
			ORDER BY ac.income_acc_name
                	) AS acnttble) INTO accountName;
	END IF;

	RETURN accountName;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP FUNCTION IF EXISTS `getInvoiceContacts` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` FUNCTION `getInvoiceContacts`(invoiceId INT) RETURNS text CHARSET latin1
BEGIN
	DECLARE contactName TEXT DEFAULT '';

	SELECT (SELECT GROUP_CONCAT(contName ORDER BY mainCont DESC SEPARATOR '|') as contactName FROM (SELECT IF((company_name IS NULL OR (company_name = '')), (CONCAT(lastname,' ',firstname)), (company_name)) AS contName,is_main_contact AS mainCont  FROM `fg_im_invoice_contacts` WHERE `invoice_id` = invoiceId) AS test) INTO contactName;

	RETURN contactName;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP FUNCTION IF EXISTS `getInvoiceItems` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` FUNCTION `getInvoiceItems`(invoiceId INT, itemIds TEXT, typeVal TEXT, currency TEXT) RETURNS text CHARSET latin1
BEGIN
	DECLARE itemName TEXT DEFAULT '';

	IF (typeVal = 'item') THEN
		SELECT (SELECT GROUP_CONCAT(invItm SEPARATOR '; ' ) as reslt FROM (
		        SELECT IF((invCnt.company_name<>NULL OR invCnt.company_name<>''), (invCnt.company_name), (CONCAT(invCnt.lastname,' ',invCnt.firstname))) as contName, CONCAT(it.item_name,(IF((inv.is_household), (CONCAT(' (',(CASE WHEN (invCnt.company_name<>NULL OR invCnt.company_name<>'') THEN invCnt.company_name ELSE CONCAT(invCnt.lastname,' ',invCnt.firstname) END),')')), ('')))) AS invItm
		        FROM fg_im_invoice_item it
		        LEFT JOIN fg_im_invoice_contacts invCnt ON (invCnt.contact_id=it.contact_id AND invCnt.invoice_id=it.invoice_id)
		        LEFT JOIN fg_im_invoice inv ON (it.invoice_id=inv.id)
		        WHERE it.invoice_id=invoiceId AND FIND_IN_SET(it.item_id, itemIds)
			GROUP BY it.invoice_id, it.item_id, it.contact_id 
			ORDER BY it.item_name, contName
		        ) AS itmtble) INTO itemName;
	ELSE
		SELECT (SELECT GROUP_CONCAT(invItm SEPARATOR '; ' ) as reslt FROM (
		        SELECT IF((invCnt.company_name<>NULL OR invCnt.company_name<>''), (invCnt.company_name), (CONCAT(invCnt.lastname,' ',invCnt.firstname))) as contName, CONCAT(it.item_name,' (',(IF((inv.is_household), CONCAT((CASE WHEN (invCnt.company_name<>NULL OR invCnt.company_name<>'') THEN invCnt.company_name ELSE CONCAT(invCnt.lastname,' ',invCnt.firstname) END),', ',currency,' '), CONCAT(currency,' '))),SUM(ROUND((it.price*it.quantity), 2)),')') AS invItm
		        FROM fg_im_invoice_item it
		        LEFT JOIN fg_im_invoice_contacts invCnt ON (invCnt.contact_id=it.contact_id AND invCnt.invoice_id=it.invoice_id)
		        LEFT JOIN fg_im_invoice inv ON (it.invoice_id=inv.id)
		        WHERE it.invoice_id=invoiceId AND FIND_IN_SET(it.item_id, itemIds)
			GROUP BY it.invoice_id, it.item_id, it.contact_id 
			ORDER BY it.item_name, contName
		        ) AS itmtble) INTO itemName;
	END IF;

	RETURN itemName;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP FUNCTION IF EXISTS `getLastContactUpdate` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`fairgate`@`localhost` FUNCTION `getLastContactUpdate`(`clubId` INT, `fedId` INT) RETURNS text CHARSET latin1
    NO SQL
BEGIN
    DECLARE LAST_CONTACT_UPDATE TEXT DEFAULT '';
    SELECT fg_cm_contact.last_updated INTO LAST_CONTACT_UPDATE FROM fg_club INNER JOIN fg_cm_contact ON fg_club.id=fg_cm_contact.club_id  WHERE  (fg_cm_contact.club_id=clubId OR fg_cm_contact.club_id IN ((SELECT hi.id as ids FROM (SELECT sublevelClubs(id) AS id, @level AS level FROM (SELECT  @start_with := clubId,@id := @start_with,@level := 0) vars, fg_club WHERE @id IS NOT NULL) ho JOIN fg_club hi ON hi.id = ho.id))) ORDER BY fg_cm_contact.last_updated desc LIMIT 0,1 ;
    RETURN LAST_CONTACT_UPDATE;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP FUNCTION IF EXISTS `getNextActivityOfClub` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` FUNCTION `getNextActivityOfClub`(clubId INT) RETURNS text CHARSET latin1
BEGIN
	DECLARE nextActivity TEXT DEFAULT '';

	SELECT CONCAT(DATE_FORMAT(v.next_action_date, '%d.%m.%Y'),', ',
                (CASE WHEN v.next_action_type='T' THEN 'Telephone'
                    WHEN v.next_action_type='E' THEN 'E-Mail'
                    WHEN v.next_action_type='P' THEN 'Presentation' END)) INTO nextActivity
                FROM fg_am_activities v WHERE v.club_id = clubId AND 
                (IF((select next_action_date from fg_am_activities where club_id = clubId AND date(next_action_date) = curdate() limit 0,1), (v.next_action_date = curdate()),
                     (IF((select next_action_date from fg_am_activities where club_id = clubId AND date(next_action_date) > curdate() limit 0,1), (v.next_action_date > curdate()), (v.next_action_date < curdate())))
                ))
                ORDER BY CASE WHEN (select next_action_date from fg_am_activities where(club_id = clubId AND date(next_action_date) > curdate()) limit 0,1) THEN v.next_action_date END ASC,v.next_action_date DESC,v.id ASC
                LIMIT 0,1;


  	RETURN nextActivity;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP FUNCTION IF EXISTS `getNextActivityOfClubNew` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` FUNCTION `getNextActivityOfClubNew`(clubId INT) RETURNS text CHARSET latin1
BEGIN
	DECLARE nextActivity, nextActionType, nextActionType2, nextActivityType TEXT DEFAULT '';
	DECLARE nextActionDate, nextActionDate2, currentDate DATETIME DEFAULT NULL;

	SELECT curdate() INTO currentDate;

	SELECT v.next_action_date, v.next_action_type INTO nextActionDate, nextActionType 
	FROM fg_am_activities v WHERE v.club_id = clubId AND v.next_action_date <= curdate()
	ORDER BY v.next_action_date DESC,v.id ASC
	LIMIT 0,1;

	IF (nextActionDate IS NULL OR (nextActionDate != currentDate)) THEN

		SELECT v.next_action_date, v.next_action_type INTO nextActionDate2, nextActionType2 
		FROM fg_am_activities v WHERE v.club_id = clubId AND v.next_action_date > curdate()
		ORDER BY v.next_action_date ASC,v.id ASC
		LIMIT 0,1;

		IF (nextActionDate2 IS NOT NULL) THEN
			SET nextActionDate = nextActionDate2;
			SET nextActionType = nextActionType2;
		END IF;

	END IF;

	IF (nextActionDate IS NOT NULL) THEN
		IF (nextActionType = 'T') THEN
			SET nextActivityType = 'Telephone';
		ELSEIF (nextActionType = 'E') THEN
			SET nextActivityType = 'E-Mail';
		ELSEIF (nextActionType = 'P') THEN
			SET nextActivityType = 'Presentation';
		END IF;

		SET nextActivity = CONCAT(DATE_FORMAT(nextActionDate, '%d.%m.%Y'), ', ', nextActivityType);
	END IF;


  	RETURN nextActivity;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP FUNCTION IF EXISTS `getOpenAmountOfItemOrAccount` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` FUNCTION `getOpenAmountOfItemOrAccount`(type TEXT, status TEXT, acount_type TEXT, clubId INT, accountingId INT, itemOrAccountId INT) RETURNS float
BEGIN
	DECLARE sum_val FLOAT DEFAULT 0;

	IF (type = 'item') THEN
		IF (status = 'OPEN') THEN
			SET sum_val = 0;
		ELSE
			SET sum_val = 0;
		END IF;
	ELSE
		IF (status = 'OPEN') THEN
			IF (acount_type = 'VAT') THEN
				SET sum_val = (SELECT SUM(it1.balance_amount - (it1.balance_amount/(1+(it1.tax_percentage/100)))) FROM fg_im_invoice_item it1 LEFT JOIN fg_im_invoice inv1 ON it1.invoice_id = inv1.id  WHERE (inv1.club_id = clubId AND inv1.accouting_id = accountingId AND inv1.status = 'OPEN' AND inv1.due_date > NOW() AND it1.is_cancelled = '0'));
			ELSE
				SET sum_val = (SELECT SUM(c11.balance_amount/(1+(c11.tax_percentage/100))) FROM fg_im_invoice d11 LEFT JOIN fg_im_invoice_item c11 ON d11.id = c11.invoice_id LEFT JOIN fg_im_item b11 ON c11.item_id = b11.id LEFT JOIN fg_im_account ac11 ON b11.account_id = ac11.id WHERE (d11.club_id = clubId AND d11.accouting_id = accountingId AND d11.status = 'OPEN' AND d11.due_date > NOW() AND c11.is_cancelled = '0' AND ac11.id = itemOrAccountId));
			END IF;
		ELSE
			IF (acount_type = 'VAT') THEN
				SET sum_val = (SELECT SUM(it2.balance_amount - (it2.balance_amount/(1+(it2.tax_percentage/100)))) FROM fg_im_invoice_item it2 LEFT JOIN fg_im_invoice inv2 ON it2.invoice_id = inv2.id WHERE (inv2.club_id = clubId AND inv2.accouting_id = accountingId AND inv2.status = 'OPEN' AND inv2.due_date <= NOW() AND it2.is_cancelled = '0'));
			ELSE
				SET sum_val = (SELECT SUM(c12.balance_amount/(1+(c12.tax_percentage/100))) FROM fg_im_invoice d12 LEFT JOIN fg_im_invoice_item c12 ON d12.id = c12.invoice_id LEFT JOIN fg_im_item b12 ON c12.item_id = b12.id LEFT JOIN fg_im_account ac12 ON b12.account_id = ac12.id WHERE (d12.club_id = clubId AND d12.accouting_id = accountingId AND d12.status = 'OPEN' AND d12.due_date <= NOW() AND c12.is_cancelled = '0' AND ac12.id = itemOrAccountId));
			END IF;
		END IF;
	END IF;
	return sum_val;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP FUNCTION IF EXISTS `getPaymentAmount` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`fairgate`@`localhost` FUNCTION `getPaymentAmount`(amount DECIMAL(10,2), discountType CHAR(1), discount DECIMAL(10,2)) RETURNS decimal(10,2)
BEGIN
	DECLARE totalAmount DECIMAL(10,2);
	CASE  discountType
            WHEN 'P' THEN
                BEGIN      
                        SET totalAmount = amount - ((discount*amount) / 100);
                END;
            WHEN 'A' THEN
                BEGIN      
                        SET totalAmount = amount - discount;
                END;			
            ELSE
                BEGIN
                        SET totalAmount = amount;
                END;	
	END CASE;
	RETURN totalAmount;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `getRunNextDraftDate` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` FUNCTION `getRunNextDraftDate`(i_st_dt DATETIME, i_end_dt DATETIME, interv TEXT, draft_dt DATETIME) RETURNS datetime
BEGIN
    DECLARE next_draft_dt, start_date DATETIME;
    IF i_st_dt > CURDATE() THEN
        SELECT i_st_dt INTO next_draft_dt;
    ELSE
        IF draft_dt = '0000-00-00 00:00:00' OR draft_dt = '' OR draft_dt IS NULL THEN
            SELECT i_st_dt INTO start_date;
        ELSE
            SELECT draft_dt INTO start_date;
        END IF;
        CASE
            WHEN (interv = 'Monthly') THEN SELECT DATE_ADD(start_date, INTERVAL 1 MONTH) INTO next_draft_dt;
            WHEN (interv = 'Quarterly') THEN SELECT DATE_ADD(start_date, INTERVAL 3 MONTH) INTO next_draft_dt;
            WHEN (interv = 'Biannual') THEN SELECT DATE_ADD(start_date, INTERVAL 6 MONTH) INTO next_draft_dt;
            WHEN (interv = 'Annual') THEN SELECT DATE_ADD(start_date, INTERVAL 12 MONTH) INTO next_draft_dt;
        END CASE;
    END IF;
    return next_draft_dt;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP FUNCTION IF EXISTS `getRunSortFieldValue` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` FUNCTION `getRunSortFieldValue`(i_st_dt DATETIME, i_end_dt DATETIME, interv TEXT, draft_dt DATETIME) RETURNS int(11)
BEGIN
    DECLARE ret_val INT;
    DECLARE next_draft_dt, start_date DATETIME;
    IF i_st_dt > CURDATE() THEN
        SELECT 1 INTO ret_val;
    ELSE
        IF draft_dt = '0000-00-00 00:00:00' OR draft_dt = '' OR draft_dt IS NULL THEN
            SELECT i_st_dt INTO start_date;
        ELSE
            SELECT draft_dt INTO start_date;
        END IF;
        CASE
            WHEN (interv = 'Monthly') THEN SELECT DATE_ADD(start_date, INTERVAL 1 MONTH) INTO next_draft_dt;
            WHEN (interv = 'Quarterly') THEN SELECT DATE_ADD(start_date, INTERVAL 3 MONTH) INTO next_draft_dt;
            WHEN (interv = 'Biannual') THEN SELECT DATE_ADD(start_date, INTERVAL 6 MONTH) INTO next_draft_dt;
            WHEN (interv = 'Annual') THEN SELECT DATE_ADD(start_date, INTERVAL 12 MONTH) INTO next_draft_dt;
        END CASE;
        IF next_draft_dt > CURDATE() THEN
            IF i_end_dt = '0000-00-00 00:00:00' OR i_end_dt = '' OR i_end_dt IS NULL OR next_draft_dt <= i_end_dt THEN
                SELECT 1 INTO ret_val;
            ELSE
                SELECT 2 INTO ret_val;
            END IF;
        ELSE
            SELECT 2 INTO ret_val;
        END IF;
    END IF;
    return ret_val;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP FUNCTION IF EXISTS `getSalutationOfContactTest` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` FUNCTION `getSalutationOfContactTest`(contactId INT) RETURNS text CHARSET utf8
BEGIN
	DECLARE corrresLang, salutation, firstName, lastName, gender, dob, companyName, companynameAffix, contactTitle TEXT CHARSET utf8 DEFAULT ''; 
	DECLARE contact_salutation_type, defLang, sysLang, clubDefaultLang,clubSystemLang, salutationText , test TEXT CHARSET utf8 DEFAULT '';
	DECLARE clubId, majorityAge, childAccessAge, isCompany, hasMainContact, contactAge, isFirstName, isLastName  INTEGER DEFAULT 0;
	DECLARE isDefaultLangChecked BOOLEAN DEFAULT false;
	
	SET contact_salutation_type = 'FORMAL'; 
	SELECT fg_cm_contact.club_id, fg_cm_contact.is_company, fg_cm_contact.has_main_contact, 
		(select value from fg_cm_attribute_value_text where fg_cm_attribute_value_text.contact_id = fg_cm_contact.id AND fg_cm_attribute_value_text.attribute_id = "1"),
		(select value from fg_cm_attribute_value_text where fg_cm_attribute_value_text.contact_id = fg_cm_contact.id AND fg_cm_attribute_value_text.attribute_id = "2"),
		(select value from fg_cm_attribute_value_text where fg_cm_attribute_value_text.contact_id = fg_cm_contact.id AND fg_cm_attribute_value_text.attribute_id = "23"),
		(select value from fg_cm_attribute_value_text where fg_cm_attribute_value_text.contact_id = fg_cm_contact.id AND fg_cm_attribute_value_text.attribute_id = "72"),
		(select value from fg_cm_attribute_value_date where fg_cm_attribute_value_date.contact_id = fg_cm_contact.id AND fg_cm_attribute_value_date.attribute_id = "4"),
		(select value from fg_cm_attribute_value_text where fg_cm_attribute_value_text.contact_id = fg_cm_contact.id AND fg_cm_attribute_value_text.attribute_id = "515"),
		(select value from fg_cm_attribute_value_text where fg_cm_attribute_value_text.contact_id = fg_cm_contact.id AND fg_cm_attribute_value_text.attribute_id = "9"),
		(select value from fg_cm_attribute_value_text where fg_cm_attribute_value_text.contact_id = fg_cm_contact.id AND fg_cm_attribute_value_text.attribute_id = "71785"),
		(select value from fg_cm_attribute_value_text where fg_cm_attribute_value_text.contact_id = fg_cm_contact.id AND fg_cm_attribute_value_text.attribute_id = "70"),
		fg_club_languages.short_name,fg_club_languages.system_language_code
		INTO clubId, isCompany, hasMainContact, salutation, firstName, lastName, gender, dob, corrresLang, companyName, companynameAffix, contactTitle, majorityAge, clubDefaultLang,clubSystemLang FROM fg_cm_contact 
		LEFT JOIN fg_club_languages ON fg_club_languages.club_id = fg_cm_contact.club_id AND fg_club_languages.is_default=1
		WHERE fg_cm_contact.id = contactId ORDER BY firstName ASC, lastName ASC;
	SET gender = UPPER(gender);	
	
	IF( salutation <> '') THEN
		SET contact_salutation_type = UPPER(salutation);		
	END IF;
   
	IF( isCompany = 1 AND hasMainContact = 0) THEN 
		SET contact_salutation_type = 'NO_MAIN_CONTACT';	
	END IF;
	CASE  contact_salutation_type
		WHEN 'NO_MAIN_CONTACT' THEN
		BEGIN
			IF(corrresLang IS NULL OR corrresLang = '') THEN
				SELECT s1.company_contact_lang INTO salutationText FROM fg_club_salutation_i18n AS s1 LEFT JOIN fg_club_salutation AS s2 ON s1.id = s2.id WHERE s1.lang = clubDefaultLang AND s2.club_id = clubId AND s2.`type` = 'NO_MAIN_CONTACT';
			ELSE
				SELECT s1.company_contact_lang INTO salutationText FROM fg_club_salutation_i18n AS s1 LEFT JOIN fg_club_salutation AS s2 ON s1.id = s2.id WHERE s1.lang = corrresLang AND s2.club_id = clubId AND s2.`type` = 'NO_MAIN_CONTACT';
			END IF;
			IF(salutationText IS NULL OR salutationText = '') THEN
				IF (corrresLang <> clubDefaultLang) THEN
					SELECT s1.company_contact_lang INTO salutationText FROM fg_club_salutation_i18n AS s1 LEFT JOIN fg_club_salutation AS s2 ON s1.id = s2.id WHERE s1.lang = clubDefaultLang AND s2.club_id = clubId AND s2.`type` = 'NO_MAIN_CONTACT';
				END IF;
				IF(salutationText IS NULL OR salutationText = '') THEN
					SELECT s1.company_contact_lang INTO salutationText FROM fg_club_salutation_i18n AS s1 LEFT JOIN fg_club_salutation AS s2 ON s1.id = s2.id WHERE s1.lang = clubSystemLang AND s2.club_id = 1 AND s2.`type` = 'NO_MAIN_CONTACT';
				END IF;
			END IF;

		END;
		WHEN 'FORMAL' THEN
		BEGIN
			IF(corrresLang IS NULL OR corrresLang ='') THEN
				SET isDefaultLangChecked = true;
				IF(gender = "MALE") THEN
					SELECT s1.male_lang, s1.is_male_firstname_lang, s1.is_male_lastname_lang INTO salutationText, isFirstName, isLastName FROM fg_club_salutation_i18n AS s1 LEFT JOIN fg_club_salutation AS s2 ON s1.id = s2.id WHERE s1.lang = clubDefaultLang AND s2.club_id = clubId AND s2.`type` = 'FORMAL';
				ELSE
					SELECT s1.female_lang, s1.is_female_firstname_lang, s1.is_female_lastname_lang INTO salutationText, isFirstName, isLastName FROM fg_club_salutation_i18n AS s1 LEFT JOIN fg_club_salutation AS s2 ON s1.id = s2.id WHERE s1.lang = clubDefaultLang AND s2.club_id = clubId AND s2.`type` = 'FORMAL';
				END IF;			
			ELSE
				IF(gender = "MALE") THEN
					SELECT s1.male_lang, s1.is_male_firstname_lang, s1.is_male_lastname_lang INTO salutationText, isFirstName, isLastName FROM fg_club_salutation_i18n AS s1 LEFT JOIN fg_club_salutation AS s2 ON s1.id = s2.id WHERE s1.lang = corrresLang AND s2.club_id = clubId AND s2.`type` = 'FORMAL';
				ELSE
					SELECT s1.female_lang, s1.is_female_firstname_lang, s1.is_female_lastname_lang INTO salutationText, isFirstName, isLastName FROM fg_club_salutation_i18n AS s1 LEFT JOIN fg_club_salutation AS s2 ON s1.id = s2.id WHERE s1.lang = corrresLang AND s2.club_id = clubId AND s2.`type` = 'FORMAL';
				END IF;			
			END IF;
			IF(salutationText IS NULL OR salutationText = '') THEN
				IF (corrresLang <> clubDefaultLang) THEN
					IF(gender = "MALE") THEN
						SELECT s1.male_lang, s1.is_male_firstname_lang, s1.is_male_lastname_lang INTO salutationText, isFirstName, isLastName FROM fg_club_salutation_i18n AS s1 LEFT JOIN fg_club_salutation AS s2 ON s1.id = s2.id WHERE s1.lang = clubDefaultLang AND s2.club_id = clubId AND s2.`type` = 'FORMAL';
					ELSE
						SELECT s1.female_lang, s1.is_female_firstname_lang, s1.is_female_lastname_lang INTO salutationText, isFirstName, isLastName FROM fg_club_salutation_i18n AS s1 LEFT JOIN fg_club_salutation AS s2 ON s1.id = s2.id WHERE s1.lang = clubDefaultLang AND s2.club_id = clubId AND s2.`type` = 'FORMAL';
					END IF;			
				END IF;
				IF(salutationText IS NULL OR salutationText = '') THEN
					IF(gender = "MALE") THEN
						SELECT s1.male_lang, s1.is_male_firstname_lang, s1.is_male_lastname_lang INTO salutationText, isFirstName, isLastName FROM fg_club_salutation_i18n AS s1 LEFT JOIN fg_club_salutation AS s2 ON s1.id = s2.id WHERE s1.lang = clubSystemLang AND s2.club_id = 1 AND s2.`type` = 'FORMAL';
					ELSE
						SELECT s1.female_lang, s1.is_female_firstname_lang, s1.is_female_lastname_lang INTO salutationText, isFirstName, isLastName FROM fg_club_salutation_i18n AS s1 LEFT JOIN fg_club_salutation AS s2 ON s1.id = s2.id WHERE s1.lang = clubSystemLang AND s2.club_id = 1 AND s2.`type` = 'FORMAL';
					END IF;					
				END IF;
			END IF;
		END;
		WHEN 'INFORMAL' THEN
		BEGIN
			SET test =CONCAT( test, ' ', 'INFORMAL ');
			IF(corrresLang IS NULL OR corrresLang ='') THEN				
				IF(gender = "MALE") THEN
					SELECT s1.male_lang, s1.is_male_firstname_lang, s1.is_male_lastname_lang INTO salutationText, isFirstName, isLastName FROM fg_club_salutation_i18n AS s1 LEFT JOIN fg_club_salutation AS s2 ON s1.id = s2.id WHERE s1.lang = clubDefaultLang AND s2.club_id = clubId AND s2.`type` = 'INFORMAL';
				ELSE
					SELECT s1.female_lang, s1.is_female_firstname_lang, s1.is_female_lastname_lang INTO salutationText, isFirstName, isLastName FROM fg_club_salutation_i18n AS s1 LEFT JOIN fg_club_salutation AS s2 ON s1.id = s2.id WHERE s1.lang = clubDefaultLang AND s2.club_id = clubId AND s2.`type` = 'INFORMAL';
				END IF;			
			ELSE
				IF(gender = "MALE") THEN
					SELECT s1.male_lang, s1.is_male_firstname_lang, s1.is_male_lastname_lang INTO salutationText, isFirstName, isLastName FROM fg_club_salutation_i18n AS s1 LEFT JOIN fg_club_salutation AS s2 ON s1.id = s2.id WHERE s1.lang = corrresLang AND s2.club_id = clubId AND s2.`type` = 'INFORMAL';
				ELSE
					SELECT s1.female_lang, s1.is_female_firstname_lang, s1.is_female_lastname_lang INTO salutationText, isFirstName, isLastName FROM fg_club_salutation_i18n AS s1 LEFT JOIN fg_club_salutation AS s2 ON s1.id = s2.id WHERE s1.lang = corrresLang AND s2.club_id = clubId AND s2.`type` = 'INFORMAL';
				END IF;	
				SET test =CONCAT( test, ' ', salutationText);	
			END IF;
			IF(salutationText IS NULL OR salutationText = '') THEN
				IF (corrresLang <> clubDefaultLang) THEN					
					IF(gender = "MALE") THEN
						SELECT s1.male_lang, s1.is_male_firstname_lang, s1.is_male_lastname_lang INTO salutationText, isFirstName, isLastName FROM fg_club_salutation_i18n AS s1 LEFT JOIN fg_club_salutation AS s2 ON s1.id = s2.id WHERE s1.lang = clubDefaultLang AND s2.club_id = clubId AND s2.`type` = 'INFORMAL';
					ELSE
						SELECT s1.female_lang, s1.is_female_firstname_lang, s1.is_female_lastname_lang INTO salutationText, isFirstName, isLastName FROM fg_club_salutation_i18n AS s1 LEFT JOIN fg_club_salutation AS s2 ON s1.id = s2.id WHERE s1.lang = clubDefaultLang AND s2.club_id = clubId AND s2.`type` = 'INFORMAL';
					END IF;		
				END IF;
				IF(salutationText IS NULL OR salutationText = '') THEN
					IF(gender = "MALE") THEN
						SELECT s1.male_lang, s1.is_male_firstname_lang, s1.is_male_lastname_lang INTO salutationText, isFirstName, isLastName FROM fg_club_salutation_i18n AS s1 LEFT JOIN fg_club_salutation AS s2 ON s1.id = s2.id WHERE s1.lang = clubSystemLang AND s2.club_id = 1 AND s2.`type` = 'INFORMAL';
					ELSE
						SELECT s1.female_lang, s1.is_female_firstname_lang, s1.is_female_lastname_lang INTO salutationText, isFirstName, isLastName FROM fg_club_salutation_i18n AS s1 LEFT JOIN fg_club_salutation AS s2 ON s1.id = s2.id WHERE s1.lang = clubSystemLang AND s2.club_id = 1 AND s2.`type` = 'INFORMAL';
					END IF;					
				END IF;
			END IF;
		
		END;		
	END CASE;
	SET salutationText  = CONCAT(salutationText, ' ', contactTitle);
	
	IF(isFirstName = 1) THEN
		SET salutationText  = CONCAT(salutationText, ' ', firstName);
	END IF;
	IF(isLastName = 1) THEN
		SET salutationText  = CONCAT(salutationText, ' ', lastName);
	END IF;
	return salutationText;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP FUNCTION IF EXISTS `getTotalServiceAmount` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`fairgate`@`localhost` FUNCTION `getTotalServiceAmount`(bookingId INT(11), startDate DATE, endDate DATE) RETURNS decimal(10,2)
BEGIN
	DECLARE totalAmount DECIMAL(10,2);
	CASE 
		WHEN startDate IS NULL AND endDate IS NULL THEN
			BEGIN      
				SELECT SUM(getPaymentAmount(smp.amount, smp.discount_type, smp.discount)) INTO totalAmount FROM fg_sm_paymentplans AS smp WHERE smp.booking_id = bookingId GROUP BY smp.booking_id;
			END;
		WHEN endDate IS NOT NULL THEN
			BEGIN      
				SELECT SUM(getPaymentAmount(smp.amount, smp.discount_type, smp.discount)) INTO totalAmount FROM fg_sm_paymentplans AS smp WHERE smp.booking_id = bookingId AND (smp.date >=startDate AND smp.date <=endDate) GROUP BY smp.booking_id;
			END;			
		ELSE
			BEGIN
				SELECT SUM(getPaymentAmount(smp.amount, smp.discount_type, smp.discount)) INTO totalAmount FROM fg_sm_paymentplans AS smp WHERE smp.booking_id = bookingId AND smp.date >=startDate GROUP BY smp.booking_id;
			END;	
	END CASE;
	RETURN totalAmount;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `isVisibleContact` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` FUNCTION `isVisibleContact`(contactId INT, clubId INT, clubType TEXT, tableName TEXT) RETURNS int(11)
BEGIN
	DECLARE isVisible INT DEFAULT 0;
        DECLARE dynamicSQL,execQry TEXT;
        CASE  clubType
            WHEN 'standard_club' THEN
                SELECT COUNT(*) INTO isVisible FROM `fg_cm_contact` c WHERE c.`id`=contactId AND c.`club_id`=clubId AND c.`is_permanent_delete`=0;
            WHEN 'federation' THEN
                SELECT COUNT(*) INTO isVisible FROM `fg_cm_contact` c LEFT JOIN tableName AS mf ON mf.`contact_id`= c.`id` WHERE c.`id`=contactId AND ((mf.`club_id`=clubId) OR (mf.`is_fed_member` =1)) AND c.`is_permanent_delete`=0;
            WHEN 'sub_federation' THEN
                SELECT COUNT(*) INTO isVisible FROM `fg_cm_contact` c LEFT JOIN tableName AS mf ON mf.`contact_id`= c.`id` WHERE c.`id`=contactId AND ((mf.`club_id`=clubId) OR (mf.`is_fed_member` =1)) AND c.`is_permanent_delete`=0;
            WHEN 'federation_club' THEN
                SELECT COUNT(*) INTO isVisible FROM `fg_cm_contact` c LEFT JOIN tableName AS mf ON mf.`contact_id`= c.`id` WHERE c.`id`=contactId AND c.`is_permanent_delete`=0;
            WHEN 'sub_federation_club' THEN
                SELECT COUNT(*) INTO isVisible FROM `fg_cm_contact` c LEFT JOIN tableName AS mf ON mf.`contact_id`= c.`id` WHERE c.`id`=contactId AND c.`is_permanent_delete`=0;
        END CASE;
        IF (isVisible != 0) THEN 
            SET isVisible = 1;
        END IF;
        RETURN isVisible;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP FUNCTION IF EXISTS `memberIdCount` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`fairgate`@`localhost` FUNCTION `memberIdCount`(`clubId` INT) RETURNS int(11)
    NO SQL
BEGIN
DECLARE maxMemberId int DEFAULT 0;
DECLARE fedId int DEFAULT 0;
DECLARE clubType VARCHAR(20) DEFAULT '';

SELECT federation_id, club_type INTO fedId, clubType FROM fg_club WHERE id=clubId;
IF(clubType = 'federation') THEN
	SET fedId = clubId;
END IF;
IF (fedId <=1) THEN
SELECT CASE WHEN MAX(member_id) IS NULL THEN 0 ELSE MAX(member_id) END INTO  maxMemberId FROM `fg_cm_contact` WHERE club_id = clubId;
ELSE
SELECT CASE WHEN MAX(member_id) IS NULL THEN 0 ELSE MAX(member_id) END INTO maxMemberId FROM fg_cm_contact AS FC where FC.club_id IN(SELECT c.id FROM (SELECT  sublevelClubs(id) AS id, @level AS level FROM (SELECT  @start_with := fedId,@id := @start_with,@level := 0) vars, fg_club WHERE @id IS NOT NULL) ho JOIN fg_club c ON c.id = ho.id union select fedId);
END IF;
RETURN maxMemberId; 

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `salutationOnlyText` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`fairgate`@`localhost` FUNCTION `salutationOnlyText`(`contactId` INT, `clubId` INT, `clubSystemLang` CHAR(2), `culture` CHAR(2)) RETURNS text CHARSET utf8
BEGIN
	
	DECLARE salutation, firstName, lastName, gender, corrresLang, companyName, contactTitle TEXT CHARSET utf8 DEFAULT ''; 
	DECLARE contact_salutation_type, salutationValue TEXT CHARSET utf8 DEFAULT '';
	DECLARE isCompany, hasMainContact  INTEGER DEFAULT 0;
	DECLARE isDefaultLangChecked BOOLEAN DEFAULT false;
	
	SET contact_salutation_type = 'FORMAL'; 
	SELECT cmc.is_company, cmc.has_main_contact, ms.`1`, ms.`2`, ms.`23`, ms.`72`, ms.`515`, ms.`9`, ms.`70` 
		INTO isCompany, hasMainContact, salutation, firstName, lastName, gender, corrresLang, companyName, contactTitle FROM fg_cm_contact AS cmc 
		INNER JOIN master_system AS ms ON ms.contact_id = cmc.id WHERE cmc.id = contactId ORDER BY firstName ASC, lastName ASC;
	SET gender = UPPER(gender);	
	
	IF( salutation <> '') THEN
		SET contact_salutation_type = UPPER(salutation);		
	END IF;
   
	IF( isCompany = 1 AND hasMainContact = 0) THEN
		SET contact_salutation_type = 'NO_MAIN_CONTACT';
	END IF;

	CASE  contact_salutation_type		
		WHEN 'NO_MAIN_CONTACT' THEN
		BEGIN      
			SELECT IF(s1.company_no_maincontact_lang IS NOT NULL AND s1.company_no_maincontact_lang <>'',s1.company_no_maincontact_lang, s2.company_no_maincontact) INTO salutationValue FROM fg_club_salutation_settings_i18n AS s1 LEFT JOIN fg_club_salutation_settings AS s2 ON s1.id = s2.id 
			WHERE ((culture IS NOT NULL AND s1.lang = culture AND s2.club_id = 1) OR (culture IS NULL AND s1.lang = corrresLang AND s2.club_id = clubId));

			IF(salutationValue IS NULL OR salutationValue = '') THEN
				SELECT s1.company_no_maincontact_lang INTO salutationValue FROM fg_club_salutation_settings_i18n AS s1 LEFT JOIN fg_club_salutation_settings AS s2 ON s1.id = s2.id WHERE s1.lang = clubSystemLang AND s2.club_id = 1;
			END IF;
		END;
		
		WHEN 'FORMAL' THEN
		BEGIN
			SELECT (CASE WHEN gender = "MALE" THEN (CASE WHEN (s1.male_formal_lang IS NOT NULL AND s1.male_formal_lang <>'') THEN s1.male_formal_lang ELSE s2.male_formal END) ELSE (CASE WHEN (s1.female_formal_lang IS NOT NULL AND s1.female_formal_lang <>'') THEN s1.female_formal_lang ELSE s2.female_formal END) END) INTO salutationValue FROM fg_club_salutation_settings_i18n AS s1 LEFT JOIN fg_club_salutation_settings AS s2 ON s1.id = s2.id 
			WHERE ((culture IS NOT NULL AND s1.lang = culture AND s2.club_id = 1) OR (culture IS NULL AND s1.lang = corrresLang AND s2.club_id = clubId));
            
			IF(salutationValue IS NULL OR salutationValue = '') THEN
				SELECT (CASE WHEN gender = "MALE" THEN (CASE WHEN (s1.male_formal_lang IS NOT NULL AND s1.male_formal_lang <>'') THEN s1.male_formal_lang ELSE s2.male_formal END) ELSE (CASE WHEN (s1.female_formal_lang IS NOT NULL AND s1.female_formal_lang <>'') THEN s1.female_formal_lang ELSE s2.female_formal END) END) INTO salutationValue FROM fg_club_salutation_settings_i18n AS s1 LEFT JOIN fg_club_salutation_settings AS s2 ON s1.id = s2.id 
				WHERE s1.lang = clubSystemLang AND s2.club_id = 1;			
			END IF;
			
			IF(contactTitle IS NOT NULL AND contactTitle <>'') THEN
				SET salutationValue  = CONCAT(salutationValue, ' ', contactTitle);
			END IF;
			-- SET salutationValue  = CONCAT(salutationValue, ' ', lastName);
			
		END;
		
		WHEN 'INFORMAL' THEN
		BEGIN
                        SELECT (CASE WHEN gender = "MALE" THEN (CASE WHEN (s1.male_informal_lang IS NOT NULL AND s1.male_informal_lang <>'') THEN s1.male_informal_lang ELSE s2.male_informal END) ELSE (CASE WHEN (s1.female_informal_lang IS NOT NULL AND s1.female_informal_lang <>'') THEN s1.female_informal_lang ELSE s2.female_informal END)	END) INTO salutationValue FROM fg_club_salutation_settings_i18n AS s1 LEFT JOIN fg_club_salutation_settings AS s2 ON s1.id = s2.id 
			WHERE ((culture IS NOT NULL AND s1.lang = culture AND s2.club_id = 1) OR (culture IS NULL AND s1.lang = corrresLang AND s2.club_id = clubId));
            
			IF(salutationValue IS NULL OR salutationValue = '') THEN
				SELECT (CASE WHEN gender = "MALE" THEN (CASE WHEN (s1.male_informal_lang IS NOT NULL AND s1.male_informal_lang <>'') THEN s1.male_informal_lang ELSE s2.male_informal END) ELSE (CASE WHEN (s1.female_informal_lang IS NOT NULL AND s1.female_informal_lang <>'') THEN s1.female_informal_lang ELSE s2.female_informal END) END) INTO salutationValue FROM fg_club_salutation_settings_i18n AS s1 LEFT JOIN fg_club_salutation_settings AS s2 ON s1.id = s2.id 
				WHERE s1.lang = clubSystemLang AND s2.club_id = 1;			
			END IF;                    
                        -- SET salutationValue  = CONCAT(salutationValue, ' ', firstName);
                        
		END;		
	END CASE;
	RETURN salutationValue;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `salutationText` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`fairgate`@`localhost` FUNCTION `salutationText`(contactId INT, clubId INT, clubSystemLang CHAR(2), culture CHAR(2)) RETURNS text CHARSET utf8
BEGIN
	
	DECLARE salutation, firstName, lastName, gender, corrresLang, companyName, contactTitle TEXT CHARSET utf8 DEFAULT ''; 
	DECLARE contact_salutation_type, salutationValue TEXT CHARSET utf8 DEFAULT '';
	DECLARE isCompany, hasMainContact  INTEGER DEFAULT 0;
	DECLARE isDefaultLangChecked BOOLEAN DEFAULT false;
	
	SET contact_salutation_type = 'FORMAL'; 
	SELECT cmc.is_company, cmc.has_main_contact, ms.`1`, ms.`2`, ms.`23`, ms.`72`, ms.`515`, ms.`9`, ms.`70` 
		INTO isCompany, hasMainContact, salutation, firstName, lastName, gender, corrresLang, companyName, contactTitle FROM fg_cm_contact AS cmc 
		INNER JOIN master_system AS ms ON ms.contact_id = cmc.id WHERE cmc.id = contactId ORDER BY firstName ASC, lastName ASC;
	SET gender = UPPER(gender);	
	
	IF( salutation <> '') THEN
		SET contact_salutation_type = UPPER(salutation);		
	END IF;
   
	IF( isCompany = 1 AND hasMainContact = 0) THEN
		SET contact_salutation_type = 'NO_MAIN_CONTACT';
	END IF;

	CASE  contact_salutation_type		
		WHEN 'NO_MAIN_CONTACT' THEN
		BEGIN      
			SELECT IF(s1.company_no_maincontact_lang IS NOT NULL AND s1.company_no_maincontact_lang <>'',s1.company_no_maincontact_lang, s2.company_no_maincontact) INTO salutationValue FROM fg_club_salutation_settings_i18n AS s1 LEFT JOIN fg_club_salutation_settings AS s2 ON s1.id = s2.id 
			WHERE ((culture IS NOT NULL AND s1.lang = culture AND s2.club_id = 1) OR (culture IS NULL AND s1.lang = corrresLang AND s2.club_id = clubId));

			IF(salutationValue IS NULL OR salutationValue = '') THEN
				SELECT s1.company_no_maincontact_lang INTO salutationValue FROM fg_club_salutation_settings_i18n AS s1 LEFT JOIN fg_club_salutation_settings AS s2 ON s1.id = s2.id WHERE s1.lang = clubSystemLang AND s2.club_id = 1;
			END IF;
		END;
		
		WHEN 'FORMAL' THEN
		BEGIN
			SELECT (CASE WHEN gender = "MALE" THEN (CASE WHEN (s1.male_formal_lang IS NOT NULL AND s1.male_formal_lang <>'') THEN s1.male_formal_lang ELSE s2.male_formal END) ELSE (CASE WHEN (s1.female_formal_lang IS NOT NULL AND s1.female_formal_lang <>'') THEN s1.female_formal_lang ELSE s2.female_formal END) END) INTO salutationValue FROM fg_club_salutation_settings_i18n AS s1 LEFT JOIN fg_club_salutation_settings AS s2 ON s1.id = s2.id 
			WHERE ((culture IS NOT NULL AND s1.lang = culture AND s2.club_id = 1) OR (culture IS NULL AND s1.lang = corrresLang AND s2.club_id = clubId));
            
			IF(salutationValue IS NULL OR salutationValue = '') THEN
				SELECT (CASE WHEN gender = "MALE" THEN (CASE WHEN (s1.male_formal_lang IS NOT NULL AND s1.male_formal_lang <>'') THEN s1.male_formal_lang ELSE s2.male_formal END) ELSE (CASE WHEN (s1.female_formal_lang IS NOT NULL AND s1.female_formal_lang <>'') THEN s1.female_formal_lang ELSE s2.female_formal END) END) INTO salutationValue FROM fg_club_salutation_settings_i18n AS s1 LEFT JOIN fg_club_salutation_settings AS s2 ON s1.id = s2.id 
				WHERE s1.lang = clubSystemLang AND s2.club_id = 1;			
			END IF;
			
			IF(contactTitle IS NOT NULL AND contactTitle <>'') THEN
				SET salutationValue  = CONCAT(salutationValue, ' ', contactTitle);
			END IF;
			SET salutationValue  = CONCAT(salutationValue, ' ', lastName);
			
		END;
		
		WHEN 'INFORMAL' THEN
		BEGIN
                        SELECT (CASE WHEN gender = "MALE" THEN (CASE WHEN (s1.male_informal_lang IS NOT NULL AND s1.male_informal_lang <>'') THEN s1.male_informal_lang ELSE s2.male_informal END) ELSE (CASE WHEN (s1.female_informal_lang IS NOT NULL AND s1.female_informal_lang <>'') THEN s1.female_informal_lang ELSE s2.female_informal END)	END) INTO salutationValue FROM fg_club_salutation_settings_i18n AS s1 LEFT JOIN fg_club_salutation_settings AS s2 ON s1.id = s2.id 
			WHERE ((culture IS NOT NULL AND s1.lang = culture AND s2.club_id = 1) OR (culture IS NULL AND s1.lang = corrresLang AND s2.club_id = clubId));
            
			IF(salutationValue IS NULL OR salutationValue = '') THEN
				SELECT (CASE WHEN gender = "MALE" THEN (CASE WHEN (s1.male_informal_lang IS NOT NULL AND s1.male_informal_lang <>'') THEN s1.male_informal_lang ELSE s2.male_informal END) ELSE (CASE WHEN (s1.female_informal_lang IS NOT NULL AND s1.female_informal_lang <>'') THEN s1.female_informal_lang ELSE s2.female_informal END) END) INTO salutationValue FROM fg_club_salutation_settings_i18n AS s1 LEFT JOIN fg_club_salutation_settings AS s2 ON s1.id = s2.id 
				WHERE s1.lang = clubSystemLang AND s2.club_id = 1;			
			END IF;                    
                        SET salutationValue  = CONCAT(salutationValue, ' ', firstName);
                        
		END;		
	END CASE;
	RETURN salutationValue;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `salutationText11` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` FUNCTION `salutationText11`(contactId INT) RETURNS text CHARSET utf8
BEGIN
	
	DECLARE salutation, firstName, lastName, gender, dob, corrresLang, companyName, contactTitle, test TEXT CHARSET utf8 DEFAULT ''; 
	DECLARE contact_salutation_type, clubDefaultLang,clubSystemLang, salutationValue TEXT CHARSET utf8 DEFAULT '';
	DECLARE clubId, isCompany, hasMainContact, isFirstName, isLastName  INTEGER DEFAULT 0;
	
	
	SET contact_salutation_type = 'FORMAL'; 
	
	SELECT fg_cm_contact.club_id, fg_cm_contact.is_company, fg_cm_contact.has_main_contact, 
		IF(
			(fg_cm_contact.is_company = 1 AND (fg_cm_contact.comp_def_contact IS NOT NULL)),
			(select value from fg_cm_attribute_value_text where fg_cm_attribute_value_text.contact_id = fg_cm_contact.comp_def_contact AND fg_cm_attribute_value_text.attribute_id = "1"),
			(select value from fg_cm_attribute_value_text where fg_cm_attribute_value_text.contact_id = fg_cm_contact.id AND fg_cm_attribute_value_text.attribute_id = "1")
		),
		IF(
			(fg_cm_contact.is_company = 1 AND (fg_cm_contact.comp_def_contact IS NOT NULL)),
			(select value from fg_cm_attribute_value_text where fg_cm_attribute_value_text.contact_id = fg_cm_contact.comp_def_contact AND fg_cm_attribute_value_text.attribute_id = "2"),
			(select value from fg_cm_attribute_value_text where fg_cm_attribute_value_text.contact_id = fg_cm_contact.id AND fg_cm_attribute_value_text.attribute_id = "2")
		),
		IF(
			(fg_cm_contact.is_company = 1 AND (fg_cm_contact.comp_def_contact IS NOT NULL)),
			(select value from fg_cm_attribute_value_text where fg_cm_attribute_value_text.contact_id = fg_cm_contact.comp_def_contact AND fg_cm_attribute_value_text.attribute_id = "23"),
			(select value from fg_cm_attribute_value_text where fg_cm_attribute_value_text.contact_id = fg_cm_contact.id AND fg_cm_attribute_value_text.attribute_id = "23")
		),
		IF(
			(fg_cm_contact.is_company =1 AND (fg_cm_contact.comp_def_contact IS NOT NULL)),
			(select value from fg_cm_attribute_value_text where fg_cm_attribute_value_text.contact_id = fg_cm_contact.comp_def_contact AND fg_cm_attribute_value_text.attribute_id = "72"),
			(select value from fg_cm_attribute_value_text where fg_cm_attribute_value_text.contact_id = fg_cm_contact.id AND fg_cm_attribute_value_text.attribute_id = "72")
		),
		IF(
			(fg_cm_contact.is_company =1 AND (fg_cm_contact.comp_def_contact IS NOT NULL)),
			(select value from fg_cm_attribute_value_text where fg_cm_attribute_value_text.contact_id = fg_cm_contact.comp_def_contact AND fg_cm_attribute_value_text.attribute_id = "515"),
			(select value from fg_cm_attribute_value_text where fg_cm_attribute_value_text.contact_id = fg_cm_contact.id AND fg_cm_attribute_value_text.attribute_id = "515")
		),
		IF(
			(fg_cm_contact.is_company =1 AND (fg_cm_contact.comp_def_contact IS NOT NULL)),
			(select value from fg_cm_attribute_value_text where fg_cm_attribute_value_text.contact_id = fg_cm_contact.comp_def_contact AND fg_cm_attribute_value_text.attribute_id = "9"),
			(select value from fg_cm_attribute_value_text where fg_cm_attribute_value_text.contact_id = fg_cm_contact.id AND fg_cm_attribute_value_text.attribute_id = "9")
		),	
		IF(
			(fg_cm_contact.is_company =1 AND (fg_cm_contact.comp_def_contact IS NOT NULL)),
			(select value from fg_cm_attribute_value_text where fg_cm_attribute_value_text.contact_id = fg_cm_contact.comp_def_contact AND fg_cm_attribute_value_text.attribute_id = "70"),
			(select value from fg_cm_attribute_value_text where fg_cm_attribute_value_text.contact_id = fg_cm_contact.id AND fg_cm_attribute_value_text.attribute_id = "70")
		),
		fg_club_languages.short_name,fg_club_languages.system_language_code
		INTO clubId, isCompany, hasMainContact, salutation, firstName, lastName, gender, corrresLang, companyName, contactTitle,  clubDefaultLang,clubSystemLang FROM fg_cm_contact 
		LEFT JOIN fg_club_languages ON fg_club_languages.club_id = fg_cm_contact.club_id AND fg_club_languages.is_default=1
		WHERE fg_cm_contact.id = contactId ORDER BY firstName ASC, lastName ASC;
	SET gender = UPPER(gender);	
	
	IF( salutation <> '') THEN
		SET contact_salutation_type = UPPER(salutation);		
	END IF;
   
	IF( isCompany = 1 AND hasMainContact = 0) THEN
		SET contact_salutation_type = 'NO_MAIN_CONTACT';
	END IF;
	SET test = CONCAT(test, ' | ', contact_salutation_type);
	CASE  contact_salutation_type
		
		WHEN 'NO_MAIN_CONTACT' THEN
		BEGIN
			
			IF(corrresLang IS NULL OR corrresLang = '') THEN
				SET test = CONCAT(test, ' | contact cor lang null');
				SELECT s1.company_contact_lang INTO salutationValue FROM fg_club_salutation_i18n AS s1 LEFT JOIN fg_club_salutation AS s2 ON s1.id = s2.id WHERE s1.lang = clubDefaultLang AND s2.club_id = clubId AND s2.`type` = 'NO_MAIN_CONTACT';
			ELSE
				SET test = CONCAT(test, ' | contact cor lang not null');
				SELECT s1.company_contact_lang INTO salutationValue FROM fg_club_salutation_i18n AS s1 LEFT JOIN fg_club_salutation AS s2 ON s1.id = s2.id WHERE s1.lang = corrresLang AND s2.club_id = clubId AND s2.`type` = 'NO_MAIN_CONTACT';
			END IF;
			
			IF(salutationValue IS NULL OR salutationValue = '') THEN
				
				IF (corrresLang <> clubDefaultLang) THEN
					SET test = CONCAT(test, ' | contact cor lang not equl to club default lang');
					SELECT s1.company_contact_lang INTO salutationValue FROM fg_club_salutation_i18n AS s1 LEFT JOIN fg_club_salutation AS s2 ON s1.id = s2.id WHERE s1.lang = clubDefaultLang AND s2.club_id = clubId AND s2.`type` = 'NO_MAIN_CONTACT';
				END IF;
				
				IF(salutationValue IS NULL OR salutationValue = '') THEN
					SET test = CONCAT(test, ' | club system language');
					SELECT s1.company_contact_lang INTO salutationValue FROM fg_club_salutation_i18n AS s1 LEFT JOIN fg_club_salutation AS s2 ON s1.id = s2.id WHERE s1.lang = clubSystemLang AND s2.club_id = 1 AND s2.`type` = 'NO_MAIN_CONTACT';
				END IF;
			END IF;

		END;
		
		WHEN 'FORMAL' THEN
		BEGIN
			
			IF(corrresLang IS NULL OR corrresLang ='') THEN
				SET test = CONCAT(test, ' | contact cor lang null');
				IF(gender = "MALE") THEN
					SELECT s1.male_lang, s1.is_male_firstname_lang, s1.is_male_lastname_lang INTO salutationValue, isFirstName, isLastName FROM fg_club_salutation_i18n AS s1 LEFT JOIN fg_club_salutation AS s2 ON s1.id = s2.id WHERE s1.lang = clubDefaultLang AND s2.club_id = clubId AND s2.`type` = 'FORMAL';
				ELSE
					SELECT s1.female_lang, s1.is_female_firstname_lang, s1.is_female_lastname_lang INTO salutationValue, isFirstName, isLastName FROM fg_club_salutation_i18n AS s1 LEFT JOIN fg_club_salutation AS s2 ON s1.id = s2.id WHERE s1.lang = clubDefaultLang AND s2.club_id = clubId AND s2.`type` = 'FORMAL';
				END IF;			
			ELSE
				SET test = CONCAT(test, ' | contact cor lang not null');
				IF(gender = "MALE") THEN
					SELECT s1.male_lang, s1.is_male_firstname_lang, s1.is_male_lastname_lang INTO salutationValue, isFirstName, isLastName FROM fg_club_salutation_i18n AS s1 LEFT JOIN fg_club_salutation AS s2 ON s1.id = s2.id WHERE s1.lang = corrresLang AND s2.club_id = clubId AND s2.`type` = 'FORMAL';
				ELSE
					SELECT s1.female_lang, s1.is_female_firstname_lang, s1.is_female_lastname_lang INTO salutationValue, isFirstName, isLastName FROM fg_club_salutation_i18n AS s1 LEFT JOIN fg_club_salutation AS s2 ON s1.id = s2.id WHERE s1.lang = corrresLang AND s2.club_id = clubId AND s2.`type` = 'FORMAL';
				END IF;			
			END IF;
			
			IF(salutationValue IS NULL OR salutationValue = '') THEN
				SET test = CONCAT(test, ' | contact cor lang not equl to club default lang');				
				
				IF (corrresLang <> clubDefaultLang) THEN
					SET test = CONCAT(test, ' | contact cor lang not equl to club default lang');
					IF(gender = "MALE") THEN
						SELECT s1.male_lang, s1.is_male_firstname_lang, s1.is_male_lastname_lang INTO salutationValue, isFirstName, isLastName FROM fg_club_salutation_i18n AS s1 LEFT JOIN fg_club_salutation AS s2 ON s1.id = s2.id WHERE s1.lang = clubDefaultLang AND s2.club_id = clubId AND s2.`type` = 'FORMAL';
					ELSE
						SELECT s1.female_lang, s1.is_female_firstname_lang, s1.is_female_lastname_lang INTO salutationValue, isFirstName, isLastName FROM fg_club_salutation_i18n AS s1 LEFT JOIN fg_club_salutation AS s2 ON s1.id = s2.id WHERE s1.lang = clubDefaultLang AND s2.club_id = clubId AND s2.`type` = 'FORMAL';
					END IF;			
				END IF;
				
				IF(salutationValue IS NULL OR salutationValue = '') THEN
					SET test = CONCAT(test, ' | club system language');
					IF(gender = "MALE") THEN
						SELECT s1.male_lang, s1.is_male_firstname_lang, s1.is_male_lastname_lang INTO salutationValue, isFirstName, isLastName FROM fg_club_salutation_i18n AS s1 LEFT JOIN fg_club_salutation AS s2 ON s1.id = s2.id WHERE s1.lang = clubSystemLang AND s2.club_id = 1 AND s2.`type` = 'FORMAL';
					ELSE
						SELECT s1.female_lang, s1.is_female_firstname_lang, s1.is_female_lastname_lang INTO salutationValue, isFirstName, isLastName FROM fg_club_salutation_i18n AS s1 LEFT JOIN fg_club_salutation AS s2 ON s1.id = s2.id WHERE s1.lang = clubSystemLang AND s2.club_id = 1 AND s2.`type` = 'FORMAL';
					END IF;					
				END IF;
			END IF;
		END;
		
		WHEN 'INFORMAL' THEN
		BEGIN
			
			IF(corrresLang IS NULL OR corrresLang ='') THEN				
				IF(gender = "MALE") THEN
					SELECT s1.male_lang, s1.is_male_firstname_lang, s1.is_male_lastname_lang INTO salutationValue, isFirstName, isLastName FROM fg_club_salutation_i18n AS s1 LEFT JOIN fg_club_salutation AS s2 ON s1.id = s2.id WHERE s1.lang = clubDefaultLang AND s2.club_id = clubId AND s2.`type` = 'INFORMAL';
				ELSE
					SELECT s1.female_lang, s1.is_female_firstname_lang, s1.is_female_lastname_lang INTO salutationValue, isFirstName, isLastName FROM fg_club_salutation_i18n AS s1 LEFT JOIN fg_club_salutation AS s2 ON s1.id = s2.id WHERE s1.lang = clubDefaultLang AND s2.club_id = clubId AND s2.`type` = 'INFORMAL';
				END IF;
				SET test = CONCAT(test, ' | contact cor lang null :', salutationValue);	
			ELSE
				IF(gender = "MALE") THEN
					SELECT s1.male_lang, s1.is_male_firstname_lang, s1.is_male_lastname_lang INTO salutationValue, isFirstName, isLastName FROM fg_club_salutation_i18n AS s1 LEFT JOIN fg_club_salutation AS s2 ON s1.id = s2.id WHERE s1.lang = corrresLang AND s2.club_id = clubId AND s2.`type` = 'INFORMAL';
				ELSE
					SELECT s1.female_lang, s1.is_female_firstname_lang, s1.is_female_lastname_lang INTO salutationValue, isFirstName, isLastName FROM fg_club_salutation_i18n AS s1 LEFT JOIN fg_club_salutation AS s2 ON s1.id = s2.id WHERE s1.lang = corrresLang AND s2.club_id = clubId AND s2.`type` = 'INFORMAL';
				END IF;
				SET test = CONCAT(test, ' | contact cor lang not null:', salutationValue);	
			END IF;
			
			IF(salutationValue IS NULL OR salutationValue = '') THEN				
				
				IF (corrresLang <> clubDefaultLang) THEN					
					IF(gender = "MALE") THEN
						SELECT s1.male_lang, s1.is_male_firstname_lang, s1.is_male_lastname_lang INTO salutationValue, isFirstName, isLastName FROM fg_club_salutation_i18n AS s1 LEFT JOIN fg_club_salutation AS s2 ON s1.id = s2.id WHERE s1.lang = clubDefaultLang AND s2.club_id = clubId AND s2.`type` = 'INFORMAL';
					ELSE
						SELECT s1.female_lang, s1.is_female_firstname_lang, s1.is_female_lastname_lang INTO salutationValue, isFirstName, isLastName FROM fg_club_salutation_i18n AS s1 LEFT JOIN fg_club_salutation AS s2 ON s1.id = s2.id WHERE s1.lang = clubDefaultLang AND s2.club_id = clubId AND s2.`type` = 'INFORMAL';
					END IF;	
					SET test = CONCAT(test, ' | contact cor lang not equl to club default lang : ',salutationValue);	
				END IF;
				
				IF(salutationValue IS NULL OR salutationValue = '') THEN					
					IF(gender = "MALE") THEN
						SELECT s1.male_lang, s1.is_male_firstname_lang, s1.is_male_lastname_lang INTO salutationValue, isFirstName, isLastName FROM fg_club_salutation_i18n AS s1 LEFT JOIN fg_club_salutation AS s2 ON s1.id = s2.id WHERE s1.lang = clubSystemLang AND s2.club_id = 1 AND s2.`type` = 'INFORMAL';
					ELSE
						SELECT s1.female_lang, s1.is_female_firstname_lang, s1.is_female_lastname_lang INTO salutationValue, isFirstName, isLastName FROM fg_club_salutation_i18n AS s1 LEFT JOIN fg_club_salutation AS s2 ON s1.id = s2.id WHERE s1.lang = clubSystemLang AND s2.club_id = 1 AND s2.`type` = 'INFORMAL';
					END IF;
					SET test = CONCAT(test, ' | club system language : ', salutationValue);
				END IF;
			END IF;
		
		END;		
	END CASE;
	SET test = CONCAT(test, ' $ ',salutationValue);
	IF (contact_salutation_type <> 'NO_MAIN_CONTACT') THEN
		IF(contactTitle IS NOT NULL AND contactTitle <>'') THEN
			SET salutationValue  = CONCAT(salutationValue, ' ', contactTitle);
		END IF;
		SET test = CONCAT(test, ' ! ',salutationValue);	
		IF(isFirstName = 1) THEN
			SET salutationValue  = CONCAT(salutationValue, ' ', firstName);
		END IF;
		SET test = CONCAT(test, ' # ',salutationValue);
		IF(isLastName = 1) THEN
			SET salutationValue  = CONCAT(salutationValue, ' ', lastName);
		END IF;	
		
	END IF;
	return test;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP FUNCTION IF EXISTS `salutationTextTemp` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`fairgate`@`localhost` FUNCTION `salutationTextTemp`(contactId INT, clubId INT, clubSystemLang CHAR(2), culture CHAR(2)) RETURNS text CHARSET utf8
BEGIN
	
	DECLARE salutation, firstName, lastName, gender, corrresLang, companyName, contactTitle TEXT CHARSET utf8 DEFAULT ''; 
	DECLARE contact_salutation_type, salutationValue TEXT CHARSET utf8 DEFAULT '';
	DECLARE isCompany, hasMainContact  INTEGER DEFAULT 0;
	DECLARE isDefaultLangChecked BOOLEAN DEFAULT false;
	
	SET contact_salutation_type = 'FORMAL'; 
	SELECT cmc.is_company, cmc.has_main_contact, ms.`1`, ms.`2`, ms.`23`, ms.`72`, ms.`515`, ms.`9`, ms.`70` 
		INTO isCompany, hasMainContact, salutation, firstName, lastName, gender, corrresLang, companyName, contactTitle FROM fg_cm_contact AS cmc 
		INNER JOIN master_system AS ms ON ms.contact_id = cmc.id WHERE cmc.id = contactId ORDER BY firstName ASC, lastName ASC;
	SET gender = UPPER(gender);	
	
	IF( salutation <> '') THEN
		SET contact_salutation_type = UPPER(salutation);		
	END IF;
   
	IF( isCompany = 1 AND hasMainContact = 0) THEN
		SET contact_salutation_type = 'NO_MAIN_CONTACT';
	END IF;

	CASE  contact_salutation_type		
		WHEN 'NO_MAIN_CONTACT' THEN
		BEGIN      
			SELECT IF(s1.company_no_maincontact_lang IS NOT NULL AND s1.company_no_maincontact_lang <>'',s1.company_no_maincontact_lang, s2.company_no_maincontact) INTO salutationValue FROM fg_club_salutation_settings_i18n AS s1 LEFT JOIN fg_club_salutation_settings AS s2 ON s1.id = s2.id 
			WHERE ((culture IS NOT NULL AND s1.lang = culture AND s2.club_id = 1) OR (culture IS NULL AND s1.lang = corrresLang AND s2.club_id = clubId));

			IF(salutationValue IS NULL OR salutationValue = '') THEN
				SELECT s1.company_no_maincontact_lang INTO salutationValue FROM fg_club_salutation_settings_i18n AS s1 LEFT JOIN fg_club_salutation_settings AS s2 ON s1.id = s2.id WHERE s1.lang = clubSystemLang AND s2.club_id = 1;
			END IF;
		END;
		
		WHEN 'FORMAL' THEN
		BEGIN
			SELECT (CASE WHEN gender = "MALE" THEN (CASE WHEN (s1.male_formal_lang IS NOT NULL AND s1.male_formal_lang <>'') THEN s1.male_formal_lang ELSE s2.male_formal END) ELSE (CASE WHEN (s1.female_formal_lang IS NOT NULL AND s1.female_formal_lang <>'') THEN s1.female_formal_lang ELSE s2.female_formal END) END) INTO salutationValue FROM fg_club_salutation_settings_i18n AS s1 LEFT JOIN fg_club_salutation_settings AS s2 ON s1.id = s2.id 
			WHERE ((culture IS NOT NULL AND s1.lang = culture AND s2.club_id = 1) OR (culture IS NULL AND s1.lang = corrresLang AND s2.club_id = clubId));
            
			IF(salutationValue IS NULL OR salutationValue = '') THEN
				SELECT (CASE WHEN gender = "MALE" THEN (CASE WHEN (s1.male_formal_lang IS NOT NULL AND s1.male_formal_lang <>'') THEN s1.male_formal_lang ELSE s2.male_formal END) ELSE (CASE WHEN (s1.female_formal_lang IS NOT NULL AND s1.female_formal_lang <>'') THEN s1.female_formal_lang ELSE s2.female_formal END) END) INTO salutationValue FROM fg_club_salutation_settings_i18n AS s1 LEFT JOIN fg_club_salutation_settings AS s2 ON s1.id = s2.id 
				WHERE s1.lang = clubSystemLang AND s2.club_id = 1;			
			END IF;
			
			IF(contactTitle IS NOT NULL AND contactTitle <>'') THEN
				SET salutationValue  = CONCAT(salutationValue, ' ', contactTitle);
			END IF;
			SET salutationValue  = CONCAT(salutationValue, ' ', lastName);
			
		END;
		
		WHEN 'INFORMAL' THEN
		BEGIN
                        SELECT (CASE WHEN gender = "MALE" THEN (CASE WHEN (s1.male_informal_lang IS NOT NULL AND s1.male_informal_lang <>'') THEN s1.male_informal_lang ELSE s2.male_informal END) ELSE (CASE WHEN (s1.female_informal_lang IS NOT NULL AND s1.female_informal_lang <>'') THEN s1.female_informal_lang ELSE s2.female_informal END)	END) INTO salutationValue FROM fg_club_salutation_settings_i18n AS s1 LEFT JOIN fg_club_salutation_settings AS s2 ON s1.id = s2.id 
			WHERE ((culture IS NOT NULL AND s1.lang = culture AND s2.club_id = 1) OR (culture IS NULL AND s1.lang = corrresLang AND s2.club_id = clubId));
            
			IF(salutationValue IS NULL OR salutationValue = '') THEN
				SELECT (CASE WHEN gender = "MALE" THEN (CASE WHEN (s1.male_informal_lang IS NOT NULL AND s1.male_informal_lang <>'') THEN s1.male_informal_lang ELSE s2.male_informal END) ELSE (CASE WHEN (s1.female_informal_lang IS NOT NULL AND s1.female_informal_lang <>'') THEN s1.female_informal_lang ELSE s2.female_informal END) END) INTO salutationValue FROM fg_club_salutation_settings_i18n AS s1 LEFT JOIN fg_club_salutation_settings AS s2 ON s1.id = s2.id 
				WHERE s1.lang = clubSystemLang AND s2.club_id = 1;			
			END IF;                    
                        SET salutationValue  = CONCAT(salutationValue, ' ', firstName);
                        
		END;		
	END CASE;
	RETURN salutationValue;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `sublevelClubs` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`fairgate`@`localhost` FUNCTION `sublevelClubs`(value INT) RETURNS int(11)
    READS SQL DATA
BEGIN
        DECLARE _id INT;
        DECLARE _parent INT;
        DECLARE _next INT;
        DECLARE CONTINUE HANDLER FOR NOT FOUND SET @id = NULL;

        SET _parent = @id;
        SET _id = -1;

        IF @id IS NULL THEN
                RETURN NULL;
        END IF;

        LOOP
                SELECT  MIN(id)
                INTO    @id
                FROM    fg_club
                WHERE   parent_club_id = _parent
                        AND id > _id;
                IF @id IS NOT NULL OR _parent = @start_with THEN
                        SET @level = @level + 1;
                        RETURN @id;
                END IF;
                SET @level := @level - 1;
                SELECT  id, parent_club_id
                INTO    _id, _parent
                FROM    fg_club
                WHERE   id = _parent;
        END LOOP;       
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP FUNCTION IF EXISTS `subscriberCount` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`fairgate`@`localhost` FUNCTION `subscriberCount`(`clubid` INT, `tablename` TEXT) RETURNS int(11)
BEGIN

        DECLARE subscriberTotalCount int DEFAULT 0;
		DECLARE ownContactTotalCount int DEFAULT 0;
        
		SELECT count(s.id) INTO  subscriberTotalCount FROM fg_cn_subscriber s WHERE club_id = clubId;		
		
		SELECT count(m.contact_id) INTO ownContactTotalCount FROM tablename m LEFT JOIN fg_cm_contact c ON c.id = m.contact_id
		WHERE c.is_deleted = 0 AND c.is_permanent_delete = 0 AND m.is_subscriber = 1;
		
        RETURN ownContactTotalCount;
          
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `subscriberName` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`fairgate`@`%` FUNCTION `subscriberName`(subscriberId INT) RETURNS text CHARSET utf8
BEGIN
	DECLARE subscriber_name TEXT;
	SELECT (CASE WHEN (s.first_name IS NOT NULL AND s.first_name!='' AND s.last_name IS NOT NULL AND s.last_name!='') THEN CONCAT(s.`last_name`,' ',s.`first_name`,' (',s.`email`,')')
		     WHEN (s.first_name IS NOT NULL AND s.first_name!='' AND (s.last_name IS NULL OR s.last_name='')) THEN CONCAT(s.`first_name`,' (',s.`email`,')')
		     WHEN (s.last_name IS NOT NULL AND s.last_name!='' AND (s.first_name IS NULL OR s.first_name='')) THEN CONCAT(s.`last_name`,' (',s.`email`,')')
		     
			 ELSE s.`email` END) INTO subscriber_name FROM `fg_cn_subscriber` s WHERE s.`id`=subscriberId;
	RETURN subscriber_name;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `subscriberSalutationText` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`fairgate`@`localhost` FUNCTION `subscriberSalutationText`(subscriberId INT, clubId INT, clubSystemLang CHAR(2)) RETURNS text CHARSET utf8
BEGIN
	
	DECLARE salutationVal, firstName, lastName, genderVal, corrresLang, companyName, contactTitle TEXT CHARSET utf8 DEFAULT ''; 
	DECLARE subscriber_Salutation_type, salutationValue TEXT CHARSET utf8 DEFAULT '';
	
	
	SELECT first_name, last_name, UPPER(gender), UPPER(salutation) 
		INTO firstName, lastName, genderVal, salutationVal FROM fg_cn_subscriber WHERE id = subscriberId;
	SET subscriber_Salutation_type = salutationVal; 
	IF(salutationVal = '' OR  genderVal = ''  OR ((salutationVal <> '' AND  genderVal <> '') AND ( (salutationVal = 'FORMAL' AND lastName = '') OR (salutationVal = 'INFORMAL' AND firstName = '')))) THEN
		SET subscriber_Salutation_type = 'NONE';
	END IF;       
	
        IF( subscriberId = 0) THEN
		SET subscriber_Salutation_type = 'NONE';
	END IF;


	CASE subscriber_Salutation_type			
		WHEN 'FORMAL' THEN
		BEGIN
			SELECT IF(genderVal = "MALE", male_formal, female_formal) INTO SalutationValue FROM fg_club_salutation_settings WHERE club_id = clubId;
            
			IF(SalutationValue IS NULL OR SalutationValue = '') THEN
				SELECT (CASE WHEN genderVal = "MALE" THEN (CASE WHEN (s1.male_formal_lang IS NOT NULL AND s1.male_formal_lang <>'') THEN s1.male_formal_lang ELSE s2.male_formal END) ELSE (CASE WHEN (s1.female_formal_lang IS NOT NULL AND s1.female_formal_lang <>'') THEN s1.female_formal_lang ELSE s2.female_formal END) END) INTO SalutationValue FROM fg_club_salutation_settings_i18n AS s1 LEFT JOIN fg_club_salutation_settings AS s2 ON s1.id = s2.id 
				WHERE s1.lang = clubSystemLang AND s2.club_id = 1;			
			END IF;			
			
			SET SalutationValue  = CONCAT(SalutationValue, ' ', lastName);
			
		END;
		
		WHEN 'INFORMAL' THEN
		BEGIN
                        SELECT IF(genderVal = "MALE", male_informal, female_informal) INTO SalutationValue FROM fg_club_salutation_settings WHERE club_id = clubId;
            
			IF(SalutationValue IS NULL OR SalutationValue = '') THEN
				SELECT (CASE WHEN genderVal = "MALE" THEN (CASE WHEN (s1.male_informal_lang IS NOT NULL AND s1.male_informal_lang <>'') THEN s1.male_informal_lang ELSE s2.male_informal END) ELSE (CASE WHEN (s1.female_informal_lang IS NOT NULL AND s1.female_informal_lang <>'') THEN s1.female_informal_lang ELSE s2.female_informal END) END) INTO SalutationValue FROM fg_club_salutation_settings_i18n AS s1 LEFT JOIN fg_club_salutation_settings AS s2 ON s1.id = s2.id 
				WHERE s1.lang = clubSystemLang AND s2.club_id = 1;			
			END IF;                    
                        SET SalutationValue  = CONCAT(SalutationValue, ' ', firstName);
                        
		END;
                WHEN 'NONE' THEN
		BEGIN
                    SELECT subscriber INTO SalutationValue FROM fg_club_salutation_settings WHERE club_id = clubId;
                    
                    IF(SalutationValue IS NULL OR SalutationValue = '') THEN
                            SELECT s1.subscriber_lang INTO SalutationValue FROM fg_club_salutation_settings_i18n AS s1 LEFT JOIN fg_club_salutation_settings AS s2 ON s1.id = s2.id 
                            WHERE s1.lang = clubSystemLang AND s2.club_id = 1;			
                    END IF; 
		END;	    
	END CASE;

	RETURN SalutationValue;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `addDropClubContactFields` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `addDropClubContactFields`( IN query LONGTEXT)
BEGIN
	
	DECLARE cc_club_id, record_not_found INTEGER DEFAULT 0;
DECLARE sql_err TEXT DEFAULT "";
	
	DECLARE club_cursor CURSOR FOR SELECT cc.id FROM fg_club AS cc;	
	
    DECLARE EXIT HANDLER FOR SQLEXCEPTION, SQLWARNING
	BEGIN
		ROLLBACK;
		
		SET sql_err = "Error.";

SELECT sql_err;

	END;
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;
	
	START TRANSACTION;
	OPEN club_cursor;
			loop_club: LOOP
				FETCH club_cursor INTO cc_club_id;
            IF record_not_found THEN
                    SET record_not_found = 0;
                    LEAVE loop_club;
                END IF;
				SET @k = CONCAT('ALTER TABLE tablecontact',cc_club_id, query);
				PREPARE stmt1 FROM @k;
				EXECUTE stmt1;
			END LOOP loop_club;	
		CLOSE club_cursor;
	
	COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `addGeneralCategory` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `addGeneralCategory`()
BEGIN
	
	DECLARE record_not_found, fetch_club_id, max_sort_order, club_category_count, team_category_count, wrkgrp_category_count, cntcts_category_count INTEGER DEFAULT 0;

	
	DECLARE field_cursor CURSOR FOR SELECT `id` FROM `fg_club` WHERE `is_deleted`=0 AND `is_fairgate`<>1;

	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;

	SET autocommit = 0;
	
	START TRANSACTION;
	OPEN field_cursor;
	loop_field: LOOP

		FETCH field_cursor INTO fetch_club_id;

		IF record_not_found THEN
			SET record_not_found = 0;
			LEAVE loop_field;
		END IF;

		
		SET club_category_count = (SELECT COUNT(`id`) FROM `fg_dm_document_category` WHERE `club_id`=fetch_club_id AND `document_type`='CLUB');
		IF (club_category_count = 0) THEN
			
			SET max_sort_order = (SELECT MAX(`sort_order`) FROM `fg_dm_document_category`);
			INSERT INTO fg_dm_document_category (`title`,`document_type`,`club_id`,`sort_order`) VALUES ('General','CLUB',fetch_club_id,max_sort_order+1);
		END IF;
		

		
		SET team_category_count = (SELECT COUNT(`id`) FROM `fg_dm_document_category` WHERE `club_id`=fetch_club_id AND `document_type`='TEAM');
		IF (team_category_count = 0) THEN
			
			SET max_sort_order = (SELECT MAX(`sort_order`) FROM `fg_dm_document_category`);
			INSERT INTO fg_dm_document_category (`title`,`document_type`,`club_id`,`sort_order`) VALUES ('General','TEAM',fetch_club_id,max_sort_order+1);
		END IF;
		

		
		SET wrkgrp_category_count = (SELECT COUNT(`id`) FROM `fg_dm_document_category` WHERE `club_id`=fetch_club_id AND `document_type`='WORKGROUP');
		IF (wrkgrp_category_count = 0) THEN
			
			SET max_sort_order = (SELECT MAX(`sort_order`) FROM `fg_dm_document_category`);
			INSERT INTO fg_dm_document_category (`title`,`document_type`,`club_id`,`sort_order`) VALUES ('General','WORKGROUP',fetch_club_id,max_sort_order+1);
		END IF;
		

		
		SET cntcts_category_count = (SELECT COUNT(`id`) FROM `fg_dm_document_category` WHERE `club_id`=fetch_club_id AND `document_type`='CONTACT');
		IF (cntcts_category_count = 0) THEN
			
			SET max_sort_order = (SELECT MAX(`sort_order`) FROM `fg_dm_document_category`);
			INSERT INTO fg_dm_document_category (`title`,`document_type`,`club_id`,`sort_order`) VALUES ('General','CONTACT',fetch_club_id,max_sort_order+1);
		END IF;
		

	END LOOP loop_field;
	CLOSE field_cursor;
	COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `addInvoiceAddressField` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `addInvoiceAddressField`(fieldnameIN  TEXT,fieldname_shortIN  TEXT,input_typeIN  TEXT,fieldtypeIN  TEXT,attributeset_idIN INT,sort_valIN INT)
BEGIN
DECLARE sort_club_id, maxsort_odr, ret_attribute_id, attribute_id, record_not_found INTEGER DEFAULT 0;
DECLARE result_record, chr_type, s, exec_qry, insertqry, pre_query, char_type TEXT DEFAULT "";

DECLARE club_cursor CURSOR FOR SELECT `id` FROM `fg_club` WHERE is_deleted=0 AND (state = "C" OR state = "CF" OR state = "D") ORDER BY `id`;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
    SELECT CONCAT('Sql Error', result_record);
    ROLLBACK;
END;
START TRANSACTION;
BLOCK1: BEGIN
 
 INSERT INTO fg_cm_attribute (`attributeset_id`, `fieldname`, `fieldname_short`, `input_type`, `fieldtype`, `is_system_field`, `is_fairgate_field`, `is_company`, `is_personal`, `is_single_edit`) VALUES 
                             (attributeset_idIN, fieldnameIN, fieldname_shortIN, input_typeIN, fieldtypeIN, 1,0,1,1,0);
 SET ret_attribute_id = LAST_INSERT_ID();

OPEN club_cursor;
club_loop: LOOP
FETCH club_cursor INTO sort_club_id;

           IF record_not_found THEN
                SET record_not_found = 0;
                LEAVE club_loop;
            END IF;

SET result_record = sort_club_id;

    INSERT INTO fg_cm_club_attribute (attribute_id, club_id, is_visible_contact, is_set_privacy_itself, privacy_contact, is_visible_teamadmin, is_changable_contact, is_changable_teamadmin, is_confirm_changes, is_mandatory, is_edited, sort_order) VALUES (ret_attribute_id, result_record, 1, 1, 'community', 1, 1, 1, 0, 0, 0, sort_valIN);



    IF (input_typeIN = 'singleline') THEN 
            SET char_type = 'VARCHAR( 160 )';
   END IF;	
    IF (input_typeIN = 'multiline') THEN 
            SET char_type = ' TEXT ';
    END IF;	
	


	
    SET @insertqry = CONCAT('ALTER TABLE ', ' `tablecontact', result_record, '`', ' ADD `' ,ret_attribute_id, '` ',char_type,'  CHARACTER SET utf8 COLLATE utf8_general_ci NULL ');		

PREPARE exec_qry FROM @insertqry;
            EXECUTE exec_qry;
            DEALLOCATE PREPARE exec_qry;
      


END LOOP club_loop;
    CLOSE club_cursor;
END BLOCK1;

COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `addInvoiceStartingWizardPage` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `addInvoiceStartingWizardPage`()
BEGIN
	
	DECLARE record_not_found, starting_wizard_sort_order, permission_id, record_id, record_sort_order INTEGER DEFAULT 0;

	
	DECLARE field_cursor CURSOR FOR SELECT id,sort_order FROM `fg_userguide_modules` WHERE `sort_order` >= (SELECT `sort_order` FROM `fg_userguide_modules` WHERE `title`='Invoicing | Invoices');


	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;

	
	SET starting_wizard_sort_order = (SELECT `sort_order` FROM `fg_userguide_modules` WHERE `title`='Invoicing | Invoices' LIMIT 0,1);
	
	
	SET autocommit = 0;
	START TRANSACTION;

	OPEN field_cursor;
	loop_field: LOOP
	
		FETCH field_cursor INTO record_id,record_sort_order;
		
		IF record_not_found THEN
			SET record_not_found = 0;
			LEAVE loop_field;
		END IF;
		

			
			UPDATE fg_userguide_modules SET sort_order = record_sort_order+1 WHERE id=record_id;

	END LOOP loop_field;	
	CLOSE field_cursor;

	
	SET permission_id = (SELECT `id` FROM `sf_guard_permission` WHERE `name` = 'backend.invoice.initialstep1' LIMIT 0,1);
		
        
	INSERT INTO fg_userguide_modules (`title`,`location_type`,`level`,`del_flg`,`is_link`,`permission_id`,`sort_order`) VALUES ('Invoicing | Starting wizard', 'B', '0', '0', '1', permission_id, starting_wizard_sort_order);

	COMMIT;

	SELECT permission_id, starting_wizard_sort_order;
		
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `addSystemSort` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `addSystemSort`()
BEGIN

DECLARE logquery TEXT DEFAULT '';
DECLARE myidentifier TEXT DEFAULT '';
 DECLARE exec_qry TEXT;
 SET @logquery = CONCAT("SELECT url_identifier INTO @myidentifier FROM fg_club WHERE id =936");

					PREPARE exec_qry FROM @logquery;
					EXECUTE exec_qry ;
					DEALLOCATE PREPARE exec_qry;
SELECT @myidentifier;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `alterMasterClubTableFields` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`fairgate`@`localhost` PROCEDURE `alterMasterClubTableFields`(IN fieldIds TEXT, IN clubId INTEGER, IN clubType VARCHAR(15), IN action VARCHAR(15))
BEGIN
	DECLARE fieldId, fieldInputType VARCHAR(30) DEFAULT 0;
	DECLARE record_not_found INTEGER DEFAULT 0;
	DECLARE deleteFieldIds, deleteFieldText, createFieldText, updateFieldText, fieldTypeText, alterTableText, test TEXT DEFAULT "";
-- 	Assign name for Mysql exception "General error: 1615 Prepared statement needs to be re-prepared"
	DECLARE mysql_prepare_exception CONDITION FOR 1615;
	DECLARE fieldCursor CURSOR FOR  SELECT id, input_type FROM `fg_cm_attribute` WHERE club_id = clubId AND FIND_IN_SET(id, fieldIds);
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;	
	OPEN fieldCursor;
		fieldCursorLoop: LOOP
			FETCH fieldCursor INTO fieldId, fieldInputType;
			IF record_not_found THEN
				SET record_not_found = 0;
				LEAVE fieldCursorLoop;
			END IF;	
			SET test = CONCAT(test,'loop');
			IF (action = 'delete') THEN
				SET deleteFieldIds = CONCAT(deleteFieldIds, IF(deleteFieldIds ='', '', ','), fieldId);
				SET deleteFieldText = CONCAT(deleteFieldText, IF(deleteFieldText ='', '', ','), 'DROP `',fieldId,'`');				
			ELSE
				CASE fieldInputType
					WHEN 'multiline' THEN
						BEGIN
							SET fieldTypeText = CONCAT('`', fieldId, '` TEXT CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL ');
						END;	
					WHEN 'date' THEN
						BEGIN								
							SET fieldTypeText = CONCAT('`', fieldId, '` date DEFAULT NULL DEFAULT NULL');
						END;
					WHEN 'fileupload' THEN
						BEGIN	
							SET fieldTypeText = CONCAT('`', fieldId, '` VARCHAR(200) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL');
						END;
					WHEN 'imageupload' THEN
						BEGIN	
							SET fieldTypeText = CONCAT('`', fieldId, '` VARCHAR(200) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL');
						END;							
					WHEN 'singleline' THEN
						BEGIN
							SET fieldTypeText = CONCAT('`', fieldId, '` VARCHAR(160) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL');
						END;								
					ELSE
						BEGIN
							SET fieldTypeText = CONCAT('`', fieldId, '` VARCHAR(160) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL');
						END;
					END CASE;
			END IF;
			IF (action = 'create') THEN
				SET test=CONCAT('create ', createFieldText);
				SET createFieldText = CONCAT(createFieldText, IF(createFieldText ='', '', ','), 'ADD ',fieldTypeText);
				SET test=CONCAT(test,'create ', createFieldText, '---',fieldTypeText);
			END IF;
			IF (action = 'update') THEN
				SET updateFieldText = CONCAT(updateFieldText, IF(updateFieldText ='', '', ','), 'CHANGE  `', fieldId, '` ',fieldTypeText);
			END IF;	
		END LOOP fieldCursorLoop;
	CLOSE fieldCursor;
	IF(deleteFieldIds!='')THEN
		DELETE FROM fg_cm_attribute WHERE FIND_IN_SET(id, deleteFieldIds);
	END IF;
	IF(clubType = 'federation' OR clubType ='sub_federation') THEN
		SET alterTableText = CONCAT('ALTER TABLE master_federation_', clubId);
	ELSE
		SET alterTableText = CONCAT('ALTER TABLE master_club_', clubId);
	END IF;
	
	IF(deleteFieldText <> '') THEN
		SET @dynamicSQL=CONCAT(alterTableText, ' ', deleteFieldText);
		PREPARE exec_qry FROM @dynamicSQL;
		EXECUTE exec_qry ;
		DEALLOCATE PREPARE exec_qry;	
	END IF;
	IF(createFieldText <> '') THEN
		SET test=CONCAT(test,alterTableText, ' ', createFieldText);
		SET @dynamicSQL=CONCAT(alterTableText, ' ', createFieldText);
		PREPARE exec_qry FROM @dynamicSQL;
		EXECUTE exec_qry ;
		DEALLOCATE PREPARE exec_qry;	
	END IF;		
	IF(updateFieldText <> '') THEN
		SET test=CONCAT(test,'---',alterTableText, ' ', updateFieldText);
		
		SET @dynamicSQL=CONCAT(alterTableText, ' ', updateFieldText);
		PREPARE exec_qry FROM @dynamicSQL;
		EXECUTE exec_qry ;
		DEALLOCATE PREPARE exec_qry;	
		
	END IF;	
	
		 -- SELECT test;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `archiveContacts` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `archiveContacts`(IN tablename TEXT,IN currentuser INT,IN clubid INT,IN system_att_first_name VARCHAR(50),IN system_att_last_name VARCHAR(50),IN system_att_company_name VARCHAR(50),IN system_att_dob  VARCHAR(50),IN team_terminology VARCHAR(50),IN date_today DATETIME,IN str_todate DATETIME,IN simple_date DATETIME, IN present_time INT,IN leaving_date_in VARCHAR(50))
BEGIN
    
    DECLARE loop_iteration_var,count_userid,count_user,user_contact_id,count_security,count_security1,role_log_id,count_con,contactid1,contactid2,contactid3 INTEGER;
    DECLARE gpcount,user_id_new,contact_cursor_is_member,contact_ids_cursor_contact_id,is_postal_address_val,comp_def_contact_new INTEGER DEFAULT "";
    DECLARE contact_cursor_contact_id,is_company1,is_company2,is_company3,is_company4,contact_id1,club_id1,contact_id_user,funid,user_contact_idy,count_securityn INTEGER;
    DECLARE cursor_linked_contact_id,group_id_new,role_id_new,is_executive_board_val,rcid,team_roster_category_id,contactid4,contactidn, is_companyn,contact_cursor_is_draft, contact_cursor_is_newsletter_subscriber,outReturnCode  INTEGER;
    DECLARE category_title_new,value_before_new,group_type_new,group_type1 TEXT;
    DECLARE sf_guard_user_var,usergroup_name,group_name1,group_name,group_name2,group_name3,group_title_new,role_title, succ_mess, sql_err TEXT DEFAULT "";
    DECLARE role_type,function_title,comp_def_contact_fun_new TEXT DEFAULT "";
    DECLARE group_name_var,contactname,contactname1,contactname2,default_contactname,company_name1, fst_nme,lst_nme,fst_nme1,lst_nme1,fst_nme2,lst_nme2,fst_nme3,lst_nme3 VARCHAR(50);
    DECLARE first_name1,last_name1,def_contact_name,company_name,first_name,last_name,company_name2,first_name2,last_name2, company_namen,contactnamen,lst_nmen,fst_nmen,value_after_change,value_before_active VARCHAR(50);
    DECLARE first_namen VARCHAR(50) DEFAULT NULL;
    DECLARE last_namen VARCHAR(50) DEFAULT NULL;
    DECLARE record_not_found INTEGER DEFAULT 0;
    DECLARE loop2query2 TEXT;DECLARE exec_qry,exec_qry1 TEXT;
	DECLARE insertqry, logstr1,logstr2,logstr3,logstr4,logstr5,logstr6,logstr7,logstr8 TEXT;
	DECLARE pre_query, exec_sel_qry, dynamicSQL TEXT;
    DECLARE contactidscursor CURSOR FOR 
    SELECT `contact_id` FROM `archivecontactsto` WHERE `club_id`= clubid AND `author`=currentuser AND `archived_date`=date_today;
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		ROLLBACK;
	END;
	START TRANSACTION;
	SET @insertqry = "INSERT INTO `fg_cm_change_log` (`contact_id`, `date`, `kind`, `field`,`value_before`, `value_after`,`changed_by`, `confirmed_by` ) VALUES";
    BLOCK1: BEGIN
        OPEN contactidscursor;
            contact_ids_one: LOOP
                FETCH contactidscursor INTO contact_ids_cursor_contact_id;
                IF record_not_found THEN
                    SET record_not_found = 0;
                    LEAVE contact_ids_one;
                END IF;

				SELECT `is_company`, `is_postal_address` INTO is_companyn, is_postal_address_val FROM `fg_cm_contact` WHERE `id` = contact_ids_cursor_contact_id;
                BLOCK2: BEGIN
                    DECLARE contactcursor CURSOR FOR
                    SELECT `is_member`, `id`, `is_draft`, `is_newsletter_subscriber` FROM `fg_cm_contact` WHERE `id`= contact_ids_cursor_contact_id;
                    OPEN contactcursor;
                        loop_contact: LOOP
                            FETCH contactcursor INTO contact_cursor_is_member, contact_cursor_contact_id, contact_cursor_is_draft, contact_cursor_is_newsletter_subscriber ;
                            IF record_not_found THEN
                                SET record_not_found = 0;
                                 LEAVE loop_contact;
                            END IF;
                            
                            IF(contact_cursor_contact_id = contact_ids_cursor_contact_id)THEN
                                IF(contact_cursor_is_member = 1)THEN

									  SET logstr1 = CONCAT("(",contact_cursor_contact_id,",","'",leaving_date_in,"'",",","'",'contact type',"'",",","'",'',"'",",","'",'Member',"'",",","'",'-',"'",",",currentuser,",",currentuser,")");
									  SET @insertqry = CONCAT(@insertqry,logstr1,',');									  
                                END IF;
                                IF(contact_cursor_is_draft =1 AND contact_cursor_is_newsletter_subscriber =1)THEN
                                    SELECT `value_after` INTO value_after_change FROM `fg_cm_change_log`  WHERE `contact_id` = contact_cursor_contact_id AND `kind` = 'contact status' ORDER BY `id` DESC LIMIT 1;
                                    IF(value_after_change!='')THEN
                                        SET value_before_active =  value_after_change;
                                    ELSE
                                        SET value_before_active =  'Subscriber (Contact administration)';
                                    END IF;
                                ELSE
                                    SET value_before_active =   'Active'; 
                                END IF;
                                

									SET logstr2 = CONCAT("(",contact_cursor_contact_id,",","'",date_today,"'",",","'",'contact status',"'",",","'",'-',"'",",","'",value_before_active,"'",",","'",'Archived',"'",",",currentuser,",",currentuser,")");								
									SET @insertqry = CONCAT(@insertqry,logstr2,',');									
                            END IF;
			IF(contact_cursor_is_member=1) THEN
                        SET @logstr8 = CONCAT("UPDATE `fg_cm_contact` SET  `is_deleted`= '1', `is_newsletter_subscriber` = '0', `is_member` = '0',`is_seperate_invoice` = '0',`leaving_date`='",leaving_date_in,"'  WHERE `id`= ",contact_ids_cursor_contact_id);
                        ELSE 
			 SET @logstr8 = CONCAT("UPDATE `fg_cm_contact` SET  `is_deleted`= '1', `is_newsletter_subscriber` = '0', `is_member` = '0',`is_seperate_invoice` = '0' WHERE `id`= ",contact_ids_cursor_contact_id);
			END IF;
			
			PREPARE exec_qry1 FROM @logstr8;
			EXECUTE exec_qry1;
			DEALLOCATE PREPARE exec_qry1;
                        END LOOP loop_contact;
                    CLOSE contactcursor;
                END BLOCK2;
                





 				SET @dynamicSQL=CONCAT('SELECT `contact_id`',',`',system_att_company_name,'`,`',system_att_first_name,'`,`',system_att_last_name,'` INTO @contactidn, @company_namen,@first_namen,@last_namen FROM `tablecontact',clubid,'`',' WHERE `contact_id` = ',contact_ids_cursor_contact_id);
				PREPARE exec_sel_qry FROM @dynamicSQL;
				EXECUTE exec_sel_qry ;	
				SET contactidn = @contactidn;
				SET company_namen = @company_namen;
				SET first_namen = @first_namen;
				SET last_namen = @last_namen;
				DEALLOCATE PREPARE exec_sel_qry;


                IF(is_company4=1)THEN
                    SET contactnamen = company_namen;
                ELSE    
                    CASE
                        WHEN last_namen != '' THEN 
                             SET lst_nmen =    CONCAT(last_namen," "); 
                        ELSE      
                             SET lst_nmen =    '';
                    END CASE;  
                    CASE
                        WHEN first_namen != '' THEN 
                             SET fst_nmen =    CONCAT(first_namen," "); 
                        ELSE      
                             SET fst_nmen =    '';
                    END CASE;
                    SET contactnamen = CONCAT(lst_nmen,fst_nmen); 
                END IF;

                IF(is_postal_address_val = 1)THEN
                    UPDATE `fg_cm_contact` SET `is_postal_address`= '0' WHERE `id`= contact_ids_cursor_contact_id;
                    SET loop_iteration_var = 0;
                    BLOCK3: BEGIN  

                        DECLARE linkedcontactcursor CURSOR FOR    
                            SELECT fgcmlc.`linked_contact_id` 
                            FROM `fg_cm_linkedcontact` AS fgcmlc 
                            LEFT JOIN `fg_cm_relation` AS fgcr ON fgcmlc.`relation_id` = fgcr.`id`
                            LEFT JOIN `fg_cm_contact` AS fgc ON fgcmlc.`contact_id` = fgc.`id`


                            WHERE fgcmlc.`contact_id` = contact_ids_cursor_contact_id AND fgc.`club_id` = clubid AND fgcmlc.`type` = 'household'; 



                        OPEN linkedcontactcursor;
                            looplinkedcontact: LOOP
                                FETCH linkedcontactcursor INTO cursor_linked_contact_id;

                                IF record_not_found THEN
                                    SET record_not_found = 0;
                                    LEAVE looplinkedcontact;
                                END IF;
                                SET loop_iteration_var = loop_iteration_var +1 ;
                                UPDATE `fg_cm_contact` SET `is_postal_address`= '0' WHERE `id`= cursor_linked_contact_id AND `is_seperate_invoice` =1;

                                SELECT COUNT(`id`) INTO count_con FROM `fg_cm_contact` WHERE `id` = cursor_linked_contact_id AND `is_postal_address`=1; 
                                IF(count_con=0)THEN
                                    IF(loop_iteration_var=1)THEN
                                        UPDATE `fg_cm_contact` SET `is_postal_address`= '1' WHERE `id`= cursor_linked_contact_id;
                                    END IF;
                                ELSEIF(count_con>1)THEN
                                    UPDATE `fg_cm_contact` SET `is_postal_address`= '0' WHERE `id`= cursor_linked_contact_id;
                                    IF(loop_iteration_var=1)THEN
                                        UPDATE `fg_cm_contact` SET `is_postal_address`= '1' WHERE `id`= cursor_linked_contact_id;
                                    END IF;
                                END IF;
                            END LOOP looplinkedcontact;
                        CLOSE linkedcontactcursor;

                    END BLOCK3;
                END IF;
				
                SET user_id_new = (SELECT `id` FROM `sf_guard_user` WHERE `contact_id` = contact_ids_cursor_contact_id);
                BLOCK4: BEGIN 
                    DECLARE sfguard_userrights_cursor CURSOR FOR
                    SELECT  gg.`id`, gg.`type`, r.`id`
                        FROM sf_guard_user AS gu
                        JOIN sf_guard_user_group AS gug ON gug.`user_id` = gu.`id`
                        LEFT JOIN sf_guard_group AS gg ON gg.`id` = gug.`group_id`
                        LEFT JOIN fg_security_admin AS fsa ON ( gug.`group_id` = fsa.`group_id` AND gu.`contact_id` = fsa.`contact_id`)
                        LEFT JOIN fg_rm_role AS r ON fsa.`role_id` = r.`id`
                        WHERE gu.`contact_id` =contact_ids_cursor_contact_id;
                    OPEN sfguard_userrights_cursor;
                       loop_sfguard_userrights: LOOP 
                           FETCH sfguard_userrights_cursor INTO group_id_new,group_type_new,role_id_new;    
                           IF record_not_found THEN
                               SET record_not_found = 0;
                               LEAVE loop_sfguard_userrights;
                           END IF;

                           CASE
                                WHEN group_type_new = 'team' OR group_type_new = 'workgroup' THEN
                                
                                SELECT COUNT(`id`) INTO count_security FROM `fg_security_admin` WHERE `contact_id`= contact_ids_cursor_contact_id AND `group_id` = group_id_new AND `role_id` = role_id_new;
                                IF(count_security>0)THEN
                                    SELECT COUNT(gu.`id`) INTO sf_guard_user_var
                                        FROM sf_guard_user AS gu
                                        JOIN sf_guard_user_group AS gug ON gug.`user_id` = gu.`id`
                                        LEFT JOIN sf_guard_group AS gg ON gg.`id` = gug.`group_id`
                                        LEFT JOIN fg_security_admin AS fsa ON ( gug.`group_id` = fsa.`group_id` AND gu.`contact_id` = fsa.`contact_id` )
                                        LEFT JOIN fg_rm_role AS r ON fsa.`role_id` = r.`id`
                                        WHERE gu.`contact_id` = contact_ids_cursor_contact_id AND fsa.`group_id`  = group_id_new AND fsa.`role_id` = role_id_new;                             
                                    SET group_title_new = (SELECT  gg.`name`
                                        FROM sf_guard_user AS gu
                                        JOIN sf_guard_user_group AS gug ON gug.`user_id` = gu.`id`
                                        LEFT JOIN sf_guard_group AS gg ON gg.`id` = gug.`group_id`
                                        LEFT JOIN fg_security_admin AS fsa ON ( gug.`group_id` = fsa.`group_id` AND gu.`contact_id` = fsa.`contact_id` )
                                        LEFT JOIN fg_rm_role AS r ON fsa.`role_id` = r.`id`
                                        WHERE gu.`contact_id` = contact_ids_cursor_contact_id AND fsa.`group_id`  = group_id_new AND fsa.`role_id` = role_id_new);                             
                                    SET role_title = (SELECT  r.`title`
                                        FROM sf_guard_user AS gu
                                        JOIN sf_guard_user_group AS gug ON gug.`user_id` = gu.`id`
                                        LEFT JOIN sf_guard_group AS gg ON gg.`id` = gug.`group_id`
                                        LEFT JOIN fg_security_admin AS fsa ON ( gug.`group_id` = fsa.`group_id` AND gu.`contact_id` = fsa.`contact_id` )
                                        LEFT JOIN fg_rm_role AS r ON fsa.`role_id` = r.`id`
                                        WHERE gu.`contact_id` = contact_ids_cursor_contact_id AND fsa.`group_id`  = group_id_new AND fsa.`role_id` = role_id_new);                             

                                    IF sf_guard_user_var IS NOT NULL THEN
                                            SET group_name_var = CONCAT(group_title_new,"( ",role_title,")");
                                    END IF;
                                

									SET logstr3 = CONCAT("(",contact_ids_cursor_contact_id,",","'",date_today,"'",",","'",'user rights',"'",",","'",'-',"'",",",QUOTE(group_name_var),",","'",'-',"'",",",currentuser,",",currentuser,")");
							        SET @insertqry = CONCAT(@insertqry,logstr3,',');									
                                    SET usergroup_name = (SELECT `name` FROM `sf_guard_group` WHERE `id` = group_id_new);
                                    SELECT `id`,`is_company`, 
                                        (SELECT `value` FROM `fg_cm_attribute_value_text` WHERE fg_cm_attribute_value_text.`contact_id` = fg_cm_contact.`id` AND fg_cm_attribute_value_text.`attribute_id` = system_att_company_name),
                                        (SELECT `value` FROM `fg_cm_attribute_value_text` WHERE fg_cm_attribute_value_text.`contact_id` = fg_cm_contact.`id` AND fg_cm_attribute_value_text.`attribute_id` =  system_att_first_name), 
                                        (SELECT `value` FROM `fg_cm_attribute_value_text` WHERE fg_cm_attribute_value_text.`contact_id` = fg_cm_contact.`id` AND fg_cm_attribute_value_text.`attribute_id` =  system_att_last_name)  
                                        INTO contactid1, is_company4, company_name,first_name,last_name  FROM `fg_cm_contact` WHERE `id` = contact_ids_cursor_contact_id;
                                    IF(is_company4=1)THEN
                                        SET contactname1 = company_name;
                                    ELSE    
                                        CASE
                                            WHEN last_name != '' THEN
                                                 SET lst_nme =    CONCAT(last_name," ");
                                            ELSE
                                                 SET lst_nme =    '';
                                        END CASE;
                                        CASE
                                            WHEN first_name != '' THEN
                                                 SET fst_nme =    CONCAT(first_name," ");
                                            ELSE
                                                 SET fst_nme =    '';
                                        END CASE;
                                        SET contactname1 = CONCAT(lst_nme,fst_nme);
                                    END IF;
                                    INSERT INTO `fg_rm_role_log` (`date`, `role_id`, `kind`,`field`, `value_before`, `value_after`,`changed_by`, `historical_id`, `is_historical`, `contactlog_id`,`booking_id` ) VALUES (str_todate, role_id_new, 'user rights', group_name, contactname1, '-', currentuser, NULL, 0, NULL, NULL);
                                    SET role_log_id = last_insert_id();
                                    SELECT `is_executive_board` INTO is_executive_board_val FROM `fg_rm_role` WHERE `id`= role_id_new;
                                    IF(is_executive_board_val=1)THEN
                                        INSERT INTO `fg_club_log` (`club_id`, `date`, `field`, `kind`,`value_before`, `value_after`,`changed_by`,`role_log_id` ) VALUES (clubid, str_todate,group_name , 'user rights', contactname1,NULL,currentuser ,role_log_id);
                                    END IF;
                                    DELETE FROM `fg_security_admin` WHERE `contact_id`= contact_ids_cursor_contact_id AND `group_id`= group_id_new AND `role_id` = role_id_new;
                                END IF;


                                SELECT COUNT(`id`) INTO gpcount FROM `fg_security_admin` WHERE `group_id` = group_id_new AND `contact_id` = contact_ids_cursor_contact_id;
                                IF(gpcount <= 0)THEN
                                   
                                    SELECT `name`,`type` INTO group_name1, group_type1 FROM `sf_guard_group` WHERE `id` = group_id_new;
                                    SELECT `contact_id` INTO contact_id1 FROM `sf_guard_user` WHERE `id` = user_id_new;   
                                    SELECT `club_id` INTO club_id1 FROM `fg_cm_contact` WHERE `id` = contact_id1; 
                                    IF(club_id1 = clubid)THEN
                                        INSERT INTO `fg_cm_change_log` (`contact_id`, `date`, `kind`, `field`,`value_before`, `value_after`,`changed_by`, `confirmed_by`,`is_confirmed` ) VALUES (contact_id1, date_today, 'user rights', '', group_name1,'',currentuser,NULL,NULL);
                                    END IF;
                                        DELETE FROM `sf_guard_user_group` WHERE `group_id` = user_id_new AND `user_id` = user_id_new;
                                END IF;
                                
                           ELSE
                               
                               SELECT COUNT(u.`contact_id`), u.`contact_id`, gg.`name` INTO count_user, contact_id_user, group_name2 
                                   FROM `sf_guard_user_group` AS ug
                                   LEFT JOIN `sf_guard_user` AS u ON u.`id` = ug.`user_id`
                                   LEFT JOIN `sf_guard_group` AS gg ON ug.`group_id` = gg.`id`
                                   WHERE ug.`user_id` = user_id_new AND `group_id` =group_id_new;

                                   IF(count_user>0)THEN

										SET logstr4 = CONCAT("(",contact_id_user,",","'",date_today,"'",",","'",'user rights',"'",",","'",'-',"'",",","'",group_name2,"'",",","'",'-',"'",",",currentuser,",",currentuser,")");
									    SET @insertqry = CONCAT(@insertqry,logstr4,',');										
                                   END IF;
                                  SELECT COUNT(`user_id`) INTO count_userid FROM `sf_guard_user_group` WHERE `group_id`= group_id_new AND `user_id`= user_id_new;

                                   IF(count_userid >0)THEN
                                       SELECT contact_id INTO user_contact_id FROM `sf_guard_user` WHERE `id`= user_id_new;
                                       SELECT  `id`,`is_company`, 
                                           (SELECT `value` FROM `fg_cm_attribute_value_text` WHERE fg_cm_attribute_value_text.`contact_id` = fg_cm_contact.`id` AND fg_cm_attribute_value_text.`attribute_id` = system_att_company_name),
                                           (SELECT `value` FROM `fg_cm_attribute_value_text` WHERE fg_cm_attribute_value_text.`contact_id` = fg_cm_contact.`id` AND fg_cm_attribute_value_text.`attribute_id` = system_att_first_name),
                                           (SELECT `value` FROM `fg_cm_attribute_value_text` WHERE fg_cm_attribute_value_text.`contact_id` = fg_cm_contact.`id` AND fg_cm_attribute_value_text.`attribute_id` = system_att_last_name)
                                       INTO contactid3, is_company2,company_name2,first_name2,last_name2 FROM `fg_cm_contact` WHERE id = user_contact_id;

                                       IF(is_company2=1)THEN
                                                SET contactname2 = company_name2;
                                       ELSE    
                                           CASE
                                               WHEN last_name2 != '' THEN 
                                                   SET lst_nme2 =    CONCAT(last_name2," "); 
                                               ELSE      
                                                   SET lst_nme2 =    '';
                                           END CASE;  
                                           CASE
                                               WHEN first_name2 != '' THEN 
                                                   SET fst_nme2 =    CONCAT(first_name2," "); 
                                               ELSE      
                                                   SET fst_nme2 =    '';
                                           END CASE;
                                           SET contactname2 = CONCAT(lst_nme2,fst_nme2); 
                                       END IF;                                       
                                       SELECT `name` INTO group_name3 FROM `sf_guard_group` WHERE `id`= group_id_new;
                                       INSERT INTO `fg_club_log` (`club_id`, `date`, `kind`, `field`,`value_before`, `value_after`,`changed_by` ) VALUES (clubid, str_todate, 'user rights', group_name3, contactname2,'-',currentuser);
									   DELETE FROM `sf_guard_user_group` WHERE `group_id` = group_id_new AND `user_id` = user_id_new  ;
                                   END IF;
                           END CASE;
                       END LOOP loop_sfguard_userrights;
                    CLOSE sfguard_userrights_cursor;      
                END BLOCK4;
                BLOCK5: BEGIN
                    DECLARE fgrmrolecontact_cursor CURSOR FOR
                    SELECT rc.`id`, rcat.`title`, r.`id`, r.`type`, r.`title`,rf.`id`, rf.`title` FROM `fg_rm_role_contact` AS rc
                        LEFT JOIN fg_rm_category_role_function AS crf ON rc.`fg_rm_crf_id` = crf.`id`
                        INNER JOIN fg_rm_category AS rcat ON crf.`category_id` = rcat.`id`
                        INNER JOIN fg_rm_role AS r ON crf.`role_id` = r.`id`
                        LEFT JOIN fg_rm_function AS rf ON crf.`function_id` = rf.`id`
                        WHERE rc.`contact_id` = contact_ids_cursor_contact_id;
                    OPEN fgrmrolecontact_cursor;
                        loop_fgrmrolecontact: LOOP 
                            FETCH fgrmrolecontact_cursor INTO rcid, category_title_new, role_id_new, role_type, role_title, funid, function_title;    
                            IF record_not_found THEN
                                SET record_not_found = 0;
                                LEAVE loop_fgrmrolecontact;
                            END IF;
                            IF(function_title != '')THEN
                                SET value_before_new = CONCAT(function_title,"( ",role_title,")");
                            ELSE
                                SET value_before_new = role_title ;
                            END IF;
                            IF(category_title_new = 'Team')THEN
                                SET category_title_new = team_terminology;
                            END IF;

							SET logstr5 = CONCAT("(",contact_ids_cursor_contact_id,",","'",date_today,"'",",","'",'assignment',"'",",",QUOTE(category_title_new),",",QUOTE(value_before_new),",","'",'-',"'",",",currentuser,",",currentuser,")");							
						    SET @insertqry = CONCAT(@insertqry,logstr5,',');							
                            INSERT INTO `fg_rm_role_log` (`date`, `role_id`, `kind`,`field`, `value_before`, `value_after`,`changed_by`, `historical_id`, `is_historical`, `contactlog_id`,`booking_id` ) VALUES (date_today, role_id_new, 'assigned contacts', function_title, contactnamen, '', currentuser, NULL, 0, NULL, NULL);
                            IF(funid != '')THEN
                                INSERT INTO `fg_rm_function_log` (`date`, `role_id`, `kind`,`function_id`,`field`, `value_before`, `value_after`,`changed_by`) VALUES (date_today, role_id_new, 'assigned contacts', funid, function_title, contactnamen, '', currentuser);
                            END IF;
                            DELETE FROM `fg_rm_role_contact` WHERE `id`= rcid;
                            BLOCK6: BEGIN
                                DECLARE fg_team_roster_category_cursor CURSOR FOR
                                SELECT id FROM `fg_team_roster_category` WHERE `category_type` =  'TEAM' AND `club_id` = club_id AND `team_id` = role_id_new ORDER BY `sort_order`; 
                                    OPEN fg_team_roster_category_cursor;
                                        loop_fg_team_roster_category: LOOP 
                                        FETCH fg_team_roster_category_cursor INTO team_roster_category_id;
                                            IF record_not_found THEN
                                                SET record_not_found = 0;
                                                LEAVE loop_fg_team_roster_category;
                                            END IF;
                                            DELETE FROM `fg_team_roster_category_contacts` WHERE `roster_id`= team_roster_category_id AND `contact_id` = contact_ids_cursor_contact_id;
                                        END LOOP loop_fg_team_roster_category;
                                    CLOSE fg_team_roster_category_cursor;
                            END BLOCK6; 
                        END LOOP loop_fgrmrolecontact;
                    CLOSE fgrmrolecontact_cursor;
                END BLOCK5;
                DELETE FROM `fg_cm_linkedcontact` WHERE `contact_id` = contact_ids_cursor_contact_id OR `linked_contact_id` = contact_ids_cursor_contact_id;

                SELECT `comp_def_contact`,`comp_def_contact_fun` INTO comp_def_contact_new, comp_def_contact_fun_new FROM `fg_cm_contact` WHERE `id` = contact_ids_cursor_contact_id;
                IF(comp_def_contact_new IS NOT NULL AND comp_def_contact_new !='' )THEN
                    UPDATE `fg_cm_contact` SET `comp_def_contact` = NULL, `comp_def_contact_fun` = NULL,`last_updated` = simple_date WHERE `id` = contact_ids_cursor_contact_id;
                    SELECT `id`,`is_company` ,
                        (SELECT `value` FROM `fg_cm_attribute_value_text` WHERE fg_cm_attribute_value_text.`contact_id` = fg_cm_contact.`id` AND fg_cm_attribute_value_text.`attribute_id` = system_att_company_name),
                        (SELECT `value` FROM `fg_cm_attribute_value_text` WHERE fg_cm_attribute_value_text.`contact_id` = fg_cm_contact.`id` AND fg_cm_attribute_value_text.`attribute_id` = system_att_first_name),
                        (SELECT `value` FROM `fg_cm_attribute_value_text` WHERE fg_cm_attribute_value_text.`contact_id` = fg_cm_contact.`id` AND fg_cm_attribute_value_text.`attribute_id` = system_att_last_name)
                        INTO contactid4,is_company3,company_name,first_name,last_name
                        FROM `fg_cm_contact` WHERE id = comp_def_contact_new;

                        IF(is_company3=1)THEN
                            SET default_contactname = company_name;
                        ELSE    
                            CASE
                                WHEN last_name != '' THEN 
                                    SET lst_nme3 =    CONCAT(last_name," "); 
                                ELSE      
                                    SET lst_nme3 =    '';
                            END CASE;  
                            CASE
                                WHEN first_name != '' THEN 
                                    SET fst_nme3 =    CONCAT(first_name," "); 
                                ELSE      
                                    SET fst_nme3 =    '';
                            END CASE;
                            SET default_contactname = CONCAT(lst_nme3,fst_nme3); 
                        END IF;
                        IF(comp_def_contact_new IS NOT NULL AND comp_def_contact_new !='' AND comp_def_contact_fun_new !='' AND comp_def_contact_fun_new IS NOT NULL)THEN
                            SET def_contact_name = CONCAT(default_contactname,"( ",comp_def_contact_fun_new,")");
                        END IF;


						SET logstr6 = CONCAT("(",contact_ids_cursor_contact_id,",","'",simple_date,"'",",","'",'linked contacts',"'",",","'",'Main contact',"'",",",QUOTE(def_contact_name),",","'",'-',"'",",",currentuser,",",'NULL',")");							
						SET @insertqry = CONCAT(@insertqry,logstr6,',');																	
						SET logstr7 = CONCAT("(",comp_def_contact_new,",","'",simple_date,"'",",","'",'linked contacts',"'",",","'",'Main contact of company',"'",",",QUOTE(contactnamen),",","'",'-',"'",",",currentuser,",",'NULL',")");							
						SET @insertqry = CONCAT(@insertqry,logstr7,',');
						
                END IF;								
            END LOOP contact_ids_one;	
			SET @insertqry = CONCAT(@insertqry,'##');
			SET @pre_query  = REPLACE(@insertqry,',##','');
			PREPARE exec_qry FROM @pre_query;
			EXECUTE exec_qry;
			DEALLOCATE PREPARE exec_qry;
        CLOSE contactidscursor;
    END BLOCK1;
    INSERT INTO `fg_cache` (`tabletitle`, `club_id`, `updated_at`) VALUES ('common',clubid,present_time);
COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `archiveContactsTest` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`fairgate`@`localhost` PROCEDURE `archiveContactsTest`()
BEGIN
	UPDATE `fairgate_v4`.`sf_guard_user` SET `first_name` = 'RahulTest' WHERE `sf_guard_user`.`id` = 293;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `archiveContactsV4` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`fairgate`@`localhost` PROCEDURE `archiveContactsV4`(IN tablename TEXT,IN currentuser INT,IN clubid INT,IN system_att_first_name VARCHAR(50),IN system_att_last_name VARCHAR(50),IN system_att_company_name VARCHAR(50),IN system_att_dob  VARCHAR(50),IN team_terminology VARCHAR(50),IN date_today DATETIME,IN str_todate DATETIME,IN simple_date DATETIME, IN present_time INT,IN leaving_date_in VARCHAR(50),club_heirarchy VARCHAR(50),currentClubType VARCHAR(50),primaryEmailSubs VARCHAR(255),salutaionSubs VARCHAR(255),genderSubs VARCHAR(255),userDefined_leavingDate VARCHAR(50))
BEGIN
    
    DECLARE loop_iteration_var,count_userid,count_user,user_contact_id,count_security,count_security1,role_log_id,count_con,contactid1,contactid2,contactid3 INTEGER;
    DECLARE gpcount,user_id_new,contact_cursor_is_member,contact_ids_cursor_contact_id,is_postal_address_val,comp_def_contact_new INTEGER DEFAULT "";
    DECLARE contact_cursor_contact_id,is_company1,is_company2,is_company3,is_company4,contact_id1,club_id1,contact_id_user,funid,user_contact_idy,count_securityn INTEGER;
    DECLARE cursor_linked_contact_id,group_id_new,role_id_new,is_executive_board_val,rcid,team_roster_category_id,contactid4,contactidn, is_companyn,contact_cursor_is_draft, contact_cursor_is_newsletter_subscriber,outReturnCode  INTEGER;
    DECLARE category_title_new,value_before_new,group_type_new,group_type1 TEXT;
    DECLARE sf_guard_user_var,usergroup_name,group_name1,group_name,group_name2,group_name3,group_title_new,role_title, succ_mess, sql_err TEXT DEFAULT "";
    DECLARE role_type,function_title,comp_def_contact_fun_new TEXT DEFAULT "";
    DECLARE group_name_var,contactname,contactname1,contactname2,default_contactname,company_name1, fst_nme,lst_nme,fst_nme1,lst_nme1,fst_nme2,lst_nme2,fst_nme3,lst_nme3 VARCHAR(50);
    DECLARE first_name1,last_name1,def_contact_name,company_name,first_name,last_name,company_name2,first_name2,last_name2, company_namen,contactnamen,lst_nmen,fst_nmen,value_after_change,value_before_active VARCHAR(50);
    DECLARE first_namen VARCHAR(50) DEFAULT NULL;
    DECLARE last_namen VARCHAR(50) DEFAULT NULL;
    DECLARE record_not_found INTEGER DEFAULT 0;
    DECLARE loop2query2 TEXT;DECLARE exec_qry,exec_qry1 TEXT;
    DECLARE insertqry, logstr1,logstr2,logstr3,logstr4,logstr5,logstr6,logstr7,logstr8,insertSubscriberLog TEXT;
    DECLARE pre_query, exec_sel_qry, dynamicSQL,insertEmailLog,insertFirstnameLog,insertLastnameLog,insertCompanyLog,insertGenderLog,insertSalutationLog TEXT;
    DECLARE mastertablename,linked_club_type,catagory_contact_assign VARCHAR(50);
    DECLARE linked_club_id,linked_contact_id_cursor INTEGER;
    DECLARE cat_id_new,cat_club,is_fed_cat,is_executive_board,last_inserted_role_log_id,household_contact_id,household_linked_contact_id,household_club_id,household_linked_club_id INTEGER;
    DECLARE archive_contact_name,cat_type,household_relation_name,household_linked_relation_name,currentClubtable VARCHAR(255);
    DECLARE other_contact_id,other_linkedcontact_id,other_relation_id,other_club_id,group_club_id,company_def_club_id,manual_role_type_count INTEGER;
    DECLARE other_relation, other_name, other_connection_type, mainContactName, mastertablenameMembership, heirarchy_club_type VARCHAR(255);
    DECLARE contact_cursor_membership_cat_id, heirarchy_club_id, count, contact_cursor_is_fed_category,contact_cursor_is_former_fed_member INTEGER;
    DECLARE contactidscursor CURSOR FOR 
    SELECT `contact_id` FROM `archivecontactsto` WHERE `club_id`= clubid AND `author`=currentuser AND `archived_date`=date_today;
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
            ROLLBACK;
    END;
    START TRANSACTION;
    SET @insertqry = "INSERT INTO `fg_cm_change_log` (`contact_id`,`club_id`, `date`, `kind`, `field`,`value_before`, `value_after`,`changed_by`, `confirmed_by` ) VALUES";

    BLOCK1: BEGIN
        OPEN contactidscursor;
            contact_ids_one: LOOP
                FETCH contactidscursor INTO contact_ids_cursor_contact_id;
                IF record_not_found THEN
                        SET record_not_found = 0;
                        LEAVE contact_ids_one;
                END IF;
			   SELECT contactName(contact_ids_cursor_contact_id) INTO mainContactName;
                SELECT `is_company` INTO is_companyn FROM `fg_cm_contact` WHERE `id` = contact_ids_cursor_contact_id;
                BLOCK2: BEGIN
                    DECLARE contactcursor CURSOR FOR
                    SELECT c.`is_member`, c.`id`, c.`is_draft`, c.`is_newsletter_subscriber`,c.`membership_cat_id`,c.`is_former_fed_member`, m.`is_fed_category` FROM `fg_cm_contact` AS c LEFT JOIN `fg_cm_membership` AS m ON m.`id`= c.`membership_cat_id` WHERE c.`id`= contact_ids_cursor_contact_id;
                    OPEN contactcursor;
                        loop_contact: LOOP
                            FETCH contactcursor INTO contact_cursor_is_member, contact_cursor_contact_id, contact_cursor_is_draft, contact_cursor_is_newsletter_subscriber, contact_cursor_membership_cat_id,contact_cursor_is_former_fed_member, contact_cursor_is_fed_category ;
                            IF record_not_found THEN
                                SET record_not_found = 0;
                                LEAVE loop_contact;
                            END IF;

                            IF(contact_cursor_contact_id = contact_ids_cursor_contact_id)THEN
                                IF(contact_cursor_is_member = 1)THEN

                                    SET logstr1 = CONCAT("(",contact_cursor_contact_id,",NULL,","'",leaving_date_in,"'",",","'",'contact type',"'",",","'",'',"'",",","'",'Member',"'",",","'",'-',"'",",",currentuser,",",currentuser,")");
                                    SET @insertqry = CONCAT(@insertqry,logstr1,',');									  
                                END IF;
                                IF(contact_cursor_is_draft =1 AND contact_cursor_is_newsletter_subscriber =1)THEN
                                    SELECT `value_after` INTO value_after_change FROM `fg_cm_change_log`  WHERE `contact_id` = contact_cursor_contact_id AND `kind` = 'contact status' ORDER BY `id` DESC LIMIT 1;
                                    IF(value_after_change!='')THEN
                                        SET value_before_active =  value_after_change;
                                    ELSE
                                        SET value_before_active =  'Subscriber (Contact administration)';
                                    END IF;
                                ELSE
                                    SET value_before_active =   'Active'; 
                                END IF;


                                SET logstr2 = CONCAT("(",contact_cursor_contact_id,",NULL,","'",date_today,"'",",","'",'contact status',"'",",","'",'-',"'",",","'",value_before_active,"'",",","'",'Archived',"'",",",currentuser,",",currentuser,")");								
                                SET @insertqry = CONCAT(@insertqry,logstr2,',');									
                            END IF;
						 -- Updating fg_cm_contact 
                            IF(contact_cursor_membership_cat_id IS NOT NULL || contact_cursor_membership_cat_id !='') THEN
							IF(contact_cursor_is_fed_category = 1) THEN
								SET @logstr8 = CONCAT("UPDATE `fg_cm_contact` SET  `is_deleted`= '1', `is_newsletter_subscriber` = '0', `is_member` = '0', `archived_on`='",leaving_date_in,"', `leaving_date`='",userDefined_leavingDate,"',`last_updated`='",leaving_date_in,"',`is_former_fed_member`=1, `resigned_on`='",leaving_date_in,"', `membership_cat_id` = ", "NULL"," WHERE `id`= ",contact_ids_cursor_contact_id);
							ELSE 
								SET @logstr8 = CONCAT("UPDATE `fg_cm_contact` SET  `is_deleted`= '1', `is_newsletter_subscriber` = '0', `is_member` = '0', `archived_on`='",leaving_date_in,"', `leaving_date`='",userDefined_leavingDate,"',`last_updated`='",leaving_date_in,"', `membership_cat_id` = ", "NULL"," WHERE `id`= ",contact_ids_cursor_contact_id);
							END IF;
                            ELSE 
                                SET @logstr8 = CONCAT("UPDATE `fg_cm_contact` SET  `is_deleted`= '1', `is_newsletter_subscriber` = '0', `is_member` = '0' ,`archived_on`='",leaving_date_in,"',`last_updated`='",leaving_date_in,"', `membership_cat_id` = ","NULL"," WHERE `id`= ",contact_ids_cursor_contact_id);
                            END IF;

						SET @primaryEmailQry=CONCAT("SELECT `",primaryEmailSubs,"` INTO @primaryEmail FROM `master_system` WHERE `club_id`=",clubid," AND `contact_id`=",contact_cursor_contact_id); 
						PREPARE exec_sel_qry FROM @primaryEmailQry;
						EXECUTE exec_sel_qry ;	
						DEALLOCATE PREPARE exec_sel_qry;

						IF(currentClubType='federation' || currentClubType='sub_federation')THEN

							SET currentClubtable=CONCAT('master_federation_',clubid);
							IF((contact_cursor_is_fed_category != 1 OR contact_cursor_is_fed_category IS NULL) AND contact_cursor_is_former_fed_member !=1) THEN

								SET @dynamicMasterSelectClubSQL=CONCAT('SELECT `is_subscriber` INTO @isSubscriber FROM `',currentClubtable,'` WHERE `contact_id`=',contact_ids_cursor_contact_id);
								PREPARE exec_sel_qry FROM @dynamicMasterSelectClubSQL;
								EXECUTE exec_sel_qry ;	
								DEALLOCATE PREPARE exec_sel_qry;

								IF(@isSubscriber=1 AND @primaryEmail!='' AND @primaryEmail IS NOT NULL) THEN

									SET @updateOwnTable = CONCAT("UPDATE `",currentClubtable,"` SET `is_subscriber`=0 WHERE `contact_id`=",contact_ids_cursor_contact_id);
									PREPARE exec_up_qry FROM @updateOwnTable;
									EXECUTE exec_up_qry ;	
									DEALLOCATE PREPARE exec_up_qry;

									SET @selectUserDetails= CONCAT("INSERT INTO `fg_cn_subscriber` (`club_id`,`email`,`first_name`,`last_name`,`company`,`gender`,`salutation`,`created_at`,`created_by`) SELECT ",clubid,",'",@primaryEmail,"',`",system_att_first_name,"`,`",system_att_last_name,"`,`",system_att_company_name,"`,`",genderSubs,"`,`",salutaionSubs,"`,'",leaving_date_in,"',",currentuser," FROM `master_system` WHERE `club_id`=",clubid," AND `contact_id`=",contact_cursor_contact_id); 
									
									PREPARE exec_ins_qry FROM @selectUserDetails;
									EXECUTE exec_ins_qry ;	
									DEALLOCATE PREPARE exec_ins_qry;

									SELECT LAST_INSERT_ID() INTO @subscriberId;
									SET @systemValues=CONCAT("SELECT `",primaryEmailSubs,"`,`",system_att_first_name,"`,`",system_att_last_name,"`,`",system_att_company_name,"`,`",genderSubs,"`,`",salutaionSubs,"` INTO @primaryEmailSys,@firstnameSys,@lastnameSys,@companySys,@genderSys,@salutaionSys FROM `master_system` WHERE `club_id`=",clubid," AND `contact_id`=",contact_cursor_contact_id);
									
									PREPARE exec_sel_qry FROM @systemValues;
									EXECUTE exec_sel_qry ;	
									DEALLOCATE PREPARE exec_sel_qry;
									SET @insertSubscriberLog = "INSERT INTO `fg_cn_subscriber_log` (`subscriber_id`,`club_id`,`date`,`kind`,`field`,`value_before`,`value_after`,`changed_by`) VALUES";
									IF(@primaryEmailSys IS NOT NULL AND @primaryEmailSys !='' )THEN
										SET @insertSubscriberLog=CONCAT(@insertSubscriberLog," (",@subscriberId,",",clubid,",'",leaving_date_in,"','data','email','','",@primaryEmailSys,"',",currentuser,"),");
									END IF;
									IF(@firstnameSys IS NOT NULL AND @firstnameSys !='' )THEN
										SET @insertSubscriberLog=CONCAT(@insertSubscriberLog," (",@subscriberId,",",clubid,",'",leaving_date_in,"','data','first_name','','",@firstnameSys,"',",currentuser,"),");
									END IF;
									IF(@lastnameSys IS NOT NULL AND @lastnameSys !='' )THEN
										SET @insertSubscriberLog=CONCAT(@insertSubscriberLog," (",@subscriberId,",",clubid,",'",leaving_date_in,"','data','last_name','','",@lastnameSys,"',",currentuser,"),");
									END IF;
									IF(@companySys IS NOT NULL AND @companySys !='' )THEN
										SET @insertSubscriberLog=CONCAT(@insertSubscriberLog," (",@subscriberId,",",clubid,",'",leaving_date_in,"','data','company','','",@companySys,"',",currentuser,"),");
									END IF;
									IF(@genderSys IS NOT NULL AND @genderSys !='' )THEN
										SET @insertSubscriberLog=CONCAT(@insertSubscriberLog," (",@subscriberId,",",clubid,",'",leaving_date_in,"','data','gender','','",@genderSys,"',",currentuser,"),");
									END IF;
									IF(@salutaionSys IS NOT NULL AND @salutaionSys !='' )THEN
										SET @insertSubscriberLog=CONCAT(@insertSubscriberLog," (",@subscriberId,",",clubid,",'",leaving_date_in,"','data','salutation','','",@salutaionSys,"',",currentuser,")");
									END IF;
									
									SET @insertSubscriberLog = CONCAT(@insertSubscriberLog,'##');
									SET @insertSubscriberLog  = REPLACE(@insertSubscriberLog,',##','');
									PREPARE exec_ins_qry FROM @insertSubscriberLog;
									EXECUTE exec_ins_qry ;	
									DEALLOCATE PREPARE exec_ins_qry;
									
								END IF;

							END IF;

							
						ELSE
							SET currentClubtable=CONCAT('master_club_',clubid);
							SET @dynamicMasterSelectClubSQL=CONCAT('SELECT `is_subscriber` INTO @isSubscriber FROM `',currentClubtable,'` WHERE `contact_id`=',contact_ids_cursor_contact_id);
							PREPARE exec_sel_qry FROM @dynamicMasterSelectClubSQL;
							EXECUTE exec_sel_qry ;	
							DEALLOCATE PREPARE exec_sel_qry;

							IF(@isSubscriber=1 AND @primaryEmail!='' AND @primaryEmail IS NOT NULL) THEN
								SET @updateOwnTable = CONCAT("UPDATE `",currentClubtable,"` SET `is_subscriber`=0 WHERE `contact_id`=",contact_ids_cursor_contact_id);
								PREPARE exec_up_qry FROM @updateOwnTable;
								EXECUTE exec_up_qry ;	
								DEALLOCATE PREPARE exec_up_qry;

								SET @selectUserDetails= CONCAT("INSERT INTO `fg_cn_subscriber` (`club_id`,`email`,`first_name`,`last_name`,`company`,`gender`,`salutation`,`created_at`,`created_by`) SELECT ",clubid,",'",@primaryEmail,"',`",system_att_first_name,"`,`",system_att_last_name,"`,`",system_att_company_name,"`,`",genderSubs,"`,`",salutaionSubs,"`,'",leaving_date_in,"',",currentuser," FROM `master_system` WHERE `club_id`=",clubid," AND `contact_id`=",contact_cursor_contact_id); 
								
								PREPARE exec_ins_qry FROM @selectUserDetails;
								EXECUTE exec_ins_qry ;	
								DEALLOCATE PREPARE exec_ins_qry;

								SELECT LAST_INSERT_ID() INTO @subscriberId;
								SET @systemValues=CONCAT("SELECT `",primaryEmailSubs,"`,`",system_att_first_name,"`,`",system_att_last_name,"`,`",system_att_company_name,"`,`",genderSubs,"`,`",salutaionSubs,"` INTO @primaryEmailSys,@firstnameSys,@lastnameSys,@companySys,@genderSys,@salutaionSys FROM `master_system` WHERE `club_id`=",clubid," AND `contact_id`=",contact_cursor_contact_id);
								
								PREPARE exec_sel_qry FROM @systemValues;
								EXECUTE exec_sel_qry ;	
								DEALLOCATE PREPARE exec_sel_qry;

								SET @insertSubscriberLog = "INSERT INTO `fg_cn_subscriber_log` (`subscriber_id`,`club_id`,`date`,`kind`,`field`,`value_before`,`value_after`,`changed_by`) VALUES";
								IF(@primaryEmailSys IS NOT NULL AND @primaryEmailSys !='' )THEN
									SET @insertSubscriberLog=CONCAT(@insertSubscriberLog," (",@subscriberId,",",clubid,",'",leaving_date_in,"','data','email','','",@primaryEmailSys,"',",currentuser,"),");
								END IF;
								IF(@firstnameSys IS NOT NULL AND @firstnameSys !='' )THEN
									SET @insertSubscriberLog=CONCAT(@insertSubscriberLog," (",@subscriberId,",",clubid,",'",leaving_date_in,"','data','first_name','','",@firstnameSys,"',",currentuser,"),");
								END IF;
								IF(@lastnameSys IS NOT NULL AND @lastnameSys !='' )THEN
									SET @insertSubscriberLog=CONCAT(@insertSubscriberLog," (",@subscriberId,",",clubid,",'",leaving_date_in,"','data','last_name','','",@lastnameSys,"',",currentuser,"),");
								END IF;
								IF(@companySys IS NOT NULL AND @companySys !='' )THEN
									SET @insertSubscriberLog=CONCAT(@insertSubscriberLog," (",@subscriberId,",",clubid,",'",leaving_date_in,"','data','company','','",@companySys,"',",currentuser,"),");
								END IF;
								IF(@genderSys IS NOT NULL AND @genderSys !='' )THEN
									SET @insertSubscriberLog=CONCAT(@insertSubscriberLog," (",@subscriberId,",",clubid,",'",leaving_date_in,"','data','gender','','",@genderSys,"',",currentuser,"),");
								END IF;
								IF(@salutaionSys IS NOT NULL AND @salutaionSys !='' )THEN
									SET @insertSubscriberLog=CONCAT(@insertSubscriberLog," (",@subscriberId,",",clubid,",'",leaving_date_in,"','data','salutation','','",@salutaionSys,"',",currentuser,")");
								END IF;

								SET @insertSubscriberLog = CONCAT(@insertSubscriberLog,'##');
								SET @insertSubscriberLog  = REPLACE(@insertSubscriberLog,',##','');
								PREPARE exec_ins_qry FROM @insertSubscriberLog;
								EXECUTE exec_ins_qry ;	
								DEALLOCATE PREPARE exec_ins_qry;

							END IF;
						END IF;

						 -- This block is used to update fg_cm_membership_history and fg_cm_membership log
						 -- if the contact is a member
						 SET mastertablenameMembership='';
						 BLOCK9: BEGIN 
							DECLARE membershipcat_cursor CURSOR FOR 
							SELECT fc.`id` , fc.`club_type`
							FROM `fg_club` AS fc 
							WHERE FIND_IN_SET(fc.`id`,club_heirarchy);
							IF(contact_cursor_membership_cat_id IS NOT NULL ||contact_cursor_membership_cat_id != '')THEN 
								OPEN membershipcat_cursor;
									loopmembershipcat: LOOP
										FETCH membershipcat_cursor INTO heirarchy_club_id,heirarchy_club_type;
										IF record_not_found THEN
											SET record_not_found = 0;
											LEAVE loopmembershipcat;
										END IF;
										IF(heirarchy_club_type='federation' || heirarchy_club_type='sub_federation') THEN
											SET mastertablenameMembership=CONCAT('master_federation_',heirarchy_club_id);
										END IF;

										SET @dynamicMasterMembershipSQL=CONCAT('UPDATE `',mastertablenameMembership,'` SET `is_fed_member`=0,`is_seperate_invoice`=0',' WHERE `contact_id`=',contact_ids_cursor_contact_id);
										PREPARE exec_update_qry FROM @dynamicMasterMembershipSQL;
										EXECUTE exec_update_qry ;	
										DEALLOCATE PREPARE exec_update_qry;
				
									END LOOP loopmembershipcat;
								CLOSE membershipcat_cursor;

								SET @dynamicMastermemberClubSQL=CONCAT('UPDATE `',currentClubtable,'` SET `is_seperate_invoice`=0',' WHERE `contact_id`=',contact_ids_cursor_contact_id);
								PREPARE exec_update_qry FROM @dynamicMastermemberClubSQL;
								EXECUTE exec_update_qry ;	
								DEALLOCATE PREPARE exec_update_qry;

								INSERT INTO `fg_cm_membership_log` (`club_id`,`membership_id`,`date`,`kind`,`field`,`value_before`,`value_after`,`changed_by`) VALUES (clubid,contact_cursor_membership_cat_id,date_today,'assigned contacts','',mainContactName,'',currentuser);
								UPDATE `fg_cm_membership_history` SET `leaving_date`=userDefined_leavingDate WHERE `contact_id`=contact_cursor_contact_id AND `membership_id`=contact_cursor_membership_cat_id ORDER BY `id` DESC LIMIT 1;
							ELSE
								SET @dynamicMasterClubSQL=CONCAT('UPDATE `',currentClubtable,'` SET `is_seperate_invoice`=0',' WHERE `contact_id`=',contact_ids_cursor_contact_id);
								PREPARE exec_update_qry FROM @dynamicMasterClubSQL;
								EXECUTE exec_update_qry ;	
								DEALLOCATE PREPARE exec_update_qry;
							END IF;
						 END BLOCK9; 
						 -- Appending log entry query
                            PREPARE exec_qry1 FROM @logstr8;
                            EXECUTE exec_qry1;
                            DEALLOCATE PREPARE exec_qry1; 

                        END LOOP loop_contact;
                    CLOSE contactcursor;
                END BLOCK2;
			   
			   SELECT contactName(contact_ids_cursor_contact_id) INTO contactnamen;

			   -- This section is used to update the household_head field in the master tables 
			   -- if the contact have a household connection
                SET mastertablename = '';
                BLOCK3: BEGIN  
                    DECLARE masterclubcursor CURSOR FOR 
                    SELECT distinct fgcmlc.`club_id` , fc.`club_type`,fgcmlc.`linked_contact_id`
                    FROM `fg_cm_linkedcontact` AS fgcmlc 
                    LEFT JOIN `fg_club` as fc ON fgcmlc.`club_id`= fc.`id`
                    WHERE fgcmlc.`contact_id` = contact_ids_cursor_contact_id AND fgcmlc.`type` = 'household';
                    OPEN masterclubcursor;
                        loopmasterclub: LOOP
                            FETCH masterclubcursor INTO linked_club_id,linked_club_type,linked_contact_id_cursor;
                            IF record_not_found THEN
                                SET record_not_found = 0;
                                LEAVE loopmasterclub;
                            END IF;
                            IF(linked_club_type='federation' || linked_club_type='sub_federation') THEN
                                SET mastertablename=CONCAT('master_federation_',linked_club_id);
                            ELSE
                                SET mastertablename=CONCAT('master_club_',linked_club_id);
                            END IF;

                            SET @dynamiclinkedSQL=CONCAT('SELECT `contact_id`,`is_household_head`',' INTO @master_table_contactId, @master_table_ishousehold FROM `',mastertablename,'` WHERE `contact_id` = ',contact_ids_cursor_contact_id);
                            PREPARE exec_sel_qry FROM @dynamiclinkedSQL;
                            EXECUTE exec_sel_qry ;	
                            DEALLOCATE PREPARE exec_sel_qry;

                            IF(@master_table_ishousehold = 1)THEN
                                SET @dynamicMasterupdateSQL=CONCAT('UPDATE `',mastertablename,'` SET `is_household_head`= ','0',' WHERE `contact_id`=',contact_ids_cursor_contact_id);
                                PREPARE exec_sel_qry FROM @dynamicMasterupdateSQL;
                                EXECUTE exec_sel_qry ;	
                                DEALLOCATE PREPARE exec_sel_qry;

							 SET SQL_SAFE_UPDATES = 0;

                                SET @dynamicMasterLinkedContactSQL=CONCAT('UPDATE `',mastertablename,'` AS mt LEFT JOIN `fg_cm_linkedcontact` AS fcl ON mt.`contact_id`=fcl.`linked_contact_id` AND fcl.`club_id`=',linked_club_id,' AND fcl.`contact_id`=',contact_ids_cursor_contact_id,' SET mt.`is_household_head`=0 ',' WHERE mt.`is_seperate_invoice`= 1 AND fcl.`contact_id`=',contact_ids_cursor_contact_id,' AND mt.`contact_id`=fcl.`linked_contact_id` AND fcl.`club_id`=',linked_club_id);
                                PREPARE exec_up_qry FROM @dynamicMasterLinkedContactSQL;
                                EXECUTE exec_up_qry ;	
                                DEALLOCATE PREPARE exec_up_qry;
								
                                SET @dynamicCountContact=CONCAT('SELECT COUNT(`linked_contact_id`)',' INTO @count_linked_contact_id FROM `fg_cm_linkedcontact` WHERE `contact_id` = ',contact_ids_cursor_contact_id,' AND `club_id`=',linked_club_id,' AND `type`="household"');
                                PREPARE exec_up_qry FROM @dynamicCountContact;
                                EXECUTE exec_up_qry ;	
                                DEALLOCATE PREPARE exec_up_qry;

                                IF(@count_linked_contact_id>1) THEN
                                    SET @dynamicMasterSetMainContactSQL=CONCAT('UPDATE `',mastertablename,'` AS mt SET `is_household_head`= ','1',' WHERE mt.`contact_id`=',linked_contact_id_cursor);
                                    PREPARE exec_up_qry FROM @dynamicMasterSetMainContactSQL;
                                    EXECUTE exec_up_qry ;	
                                    DEALLOCATE PREPARE exec_up_qry; 
                                END IF;
							 SET SQL_SAFE_UPDATES = 1;
                            END IF;

                        END LOOP loopmasterclub;
                    CLOSE masterclubcursor;
            	END BLOCK3; 
			   -- This section is used to make changes in the fg_cm_club_log and delete entry of the contact in the sf_guard_user table 
			   -- if the user have any user rights
                BLOCK4: BEGIN 
                    DECLARE sfguard_userrights_cursor CURSOR FOR
                    SELECT  gg.`id`, gg.`type`, r.`id`
                        FROM sf_guard_user AS gu
                        JOIN sf_guard_user_group AS gug ON gug.`user_id` = gu.`id`
                        LEFT JOIN sf_guard_group AS gg ON gg.`id` = gug.`group_id`
                        LEFT JOIN fg_security_admin AS fsa ON ( gug.`group_id` = fsa.`group_id` AND gu.`contact_id` = fsa.`contact_id`)
                        LEFT JOIN fg_rm_role AS r ON fsa.`role_id` = r.`id`
                        WHERE gu.`contact_id` =contact_ids_cursor_contact_id;
                    OPEN sfguard_userrights_cursor;
                        loop_sfguard_userrights: LOOP 
                            FETCH sfguard_userrights_cursor INTO group_id_new,group_type_new,role_id_new;    
                            IF record_not_found THEN
                                SET record_not_found = 0;
                                LEAVE loop_sfguard_userrights;
                            END IF;

                            BLOCK5: BEGIN 
                                DECLARE sfguard_user_id_cursor CURSOR FOR    
                                    SELECT `id` FROM `sf_guard_user` WHERE `contact_id` = contact_ids_cursor_contact_id;
                                OPEN sfguard_user_id_cursor;
                                    loop_sfguard_user_id: LOOP
                                        FETCH sfguard_user_id_cursor INTO user_id_new; 
                                        IF record_not_found THEN
                                            SET record_not_found = 0;
                                            LEAVE loop_sfguard_user_id;
                                        END IF;

                                        SELECT COUNT(u.`contact_id`), u.`contact_id`,u.`club_id`, gg.`name` INTO count_user, contact_id_user,group_club_id, group_name2 
                                        FROM `sf_guard_user_group` AS ug
                                        LEFT JOIN `sf_guard_user` AS u ON u.`id` = ug.`user_id`
                                        LEFT JOIN `sf_guard_group` AS gg ON ug.`group_id` = gg.`id`
                                        WHERE ug.`user_id` = user_id_new AND `group_id` =group_id_new;

                                        IF(count_user>0)THEN
                                            SET logstr4 = CONCAT("(",contact_id_user,",",group_club_id,",'",date_today,"'",",","'",'user rights',"'",",","'",'-',"'",",","'",group_name2,"'",",","'",'-',"'",",",currentuser,",",currentuser,")");
                                            SET @insertqry = CONCAT(@insertqry,logstr4,',');										
                                        END IF;
                                        SELECT COUNT(`user_id`) INTO count_userid FROM `sf_guard_user_group` WHERE `group_id`= group_id_new AND `user_id`= user_id_new;

                                        IF(count_userid >0)THEN
                                            SELECT contact_id INTO user_contact_id FROM `sf_guard_user` WHERE `id`= user_id_new;
                            
                                            SELECT `name` INTO group_name3 FROM `sf_guard_group` WHERE `id`= group_id_new;
                                            INSERT INTO `fg_club_log` (`club_id`, `date`, `kind`, `field`,`value_before`, `value_after`,`changed_by` ) VALUES (group_club_id, str_todate, 'user rights', group_name3, contactName(user_contact_id),'-',currentuser);
                                        END IF; 
                                    END LOOP loop_sfguard_user_id;
                                CLOSE sfguard_user_id_cursor;                                
                            END BLOCK5; 
                       END LOOP loop_sfguard_userrights;
                    CLOSE sfguard_userrights_cursor;
                    DELETE FROM `sf_guard_user` WHERE `contact_id` = contact_ids_cursor_contact_id;
                END BLOCK4; 
			   -- Updating fg_cm_role_log,fg_cm_function_log,fg_cm_log_assignment and delete entry of the contact in the fg_rm_role_contact table 
			   -- if the user have any assignments
                BLOCK6: BEGIN
                    DECLARE fgrmrolecontact_cursor CURSOR FOR
                    SELECT rc.`id`, rcat.`title`,rcat.`id`, r.`id`, r.`type`, r.`title`,rf.`id`, rf.`title`,rcat.`club_id`,rcat.`is_fed_category`,r.`is_executive_board`,rcat.`contact_assign` FROM `fg_rm_role_contact` AS rc
                        LEFT JOIN fg_rm_category_role_function AS crf ON rc.`fg_rm_crf_id` = crf.`id`
                        INNER JOIN fg_rm_category AS rcat ON crf.`category_id` = rcat.`id`
                        INNER JOIN fg_rm_role AS r ON crf.`role_id` = r.`id`
                        LEFT JOIN fg_rm_function AS rf ON crf.`function_id` = rf.`id`
                        WHERE rc.`contact_id` = contact_ids_cursor_contact_id;
                    OPEN fgrmrolecontact_cursor;
                        loop_fgrmrolecontact: LOOP 
                            FETCH fgrmrolecontact_cursor INTO rcid, category_title_new, cat_id_new, role_id_new, role_type, role_title, funid, function_title,cat_club,is_fed_cat,is_executive_board,catagory_contact_assign;    
                            IF record_not_found THEN
                                SET record_not_found = 0;
                                LEAVE loop_fgrmrolecontact;
                            END IF;
                            IF(function_title != '')THEN
                                SET value_before_new = CONCAT(role_title," (",function_title,")");
                            ELSE
                                SET value_before_new = role_title ;
                            END IF;
                            IF(category_title_new = 'Team')THEN
                                SET category_title_new = team_terminology;
                            END IF;
						 IF(is_fed_cat=1)THEN
							SET cat_type='fed';
						 ELSE 
							SET cat_type='club';
						 END IF;
						 
						 INSERT INTO `fg_cm_log_assignment` (`contact_id`, `category_club_id`, `role_type`,`category_id`, `role_id`, `function_id`,`date`, `category_title`, `value_before`, `value_after`,`changed_by` ) VALUES (contact_ids_cursor_contact_id,cat_club,cat_type,cat_id_new,role_id_new,funid,date_today,category_title_new,value_before_new,'',currentuser);
						 INSERT INTO `fg_rm_role_log` (`role_id`, `date`, `kind`,`field`, `value_before`, `value_after`,`changed_by`) VALUES (role_id_new, date_today, 'assigned contacts', value_before_new, mainContactName, '', currentuser);
							 
                            IF(funid != '')THEN
                                INSERT INTO `fg_rm_function_log` (`date`, `role_id`, `kind`,`function_id`,`field`, `value_before`, `value_after`,`changed_by`) VALUES (date_today, role_id_new, 'assigned contacts', funid, function_title, contactnamen, '', currentuser);
                            END IF;
						 
                            DELETE FROM `fg_rm_role_contact` WHERE `id`= rcid;
                            
                        END LOOP loop_fgrmrolecontact;
                    CLOSE fgrmrolecontact_cursor;
                END BLOCK6; 
			   -- Updating fg_cm_log_connection if the user have any connections
			   BLOCK7: BEGIN  
					SET SQL_SAFE_UPDATES = 0;
					INSERT INTO `fg_cm_log_connection` (`contact_id`, `linked_contact_id`, `assigned_club_id`,`date`,`connection_type`, `relation`, `value_before`,`value_after`,`changed_by`) SELECT contact_ids_cursor_contact_id,fgcmlc.`linked_contact_id`,fgcmlc.`club_id`,date_today,'Household contact',fcr.`name`,contactName(fgcmlc.`linked_contact_id`),'',currentuser
					FROM `fg_cm_linkedcontact` AS fgcmlc 
					LEFT JOIN `fg_cm_relation` AS fcr ON fgcmlc.`relation_id`=fcr.`id`
					WHERE fgcmlc.`contact_id` = contact_ids_cursor_contact_id AND fgcmlc.`type` = 'household';
					
					INSERT INTO `fg_cm_log_connection` (`contact_id`, `linked_contact_id`, `assigned_club_id`,`date`,`connection_type`, `relation`, `value_before`,`value_after`,`changed_by`) SELECT fgcmlc.`contact_id`,contact_ids_cursor_contact_id,fgcmlc.`club_id`,date_today,'Household contact',fcr.`name`,contactName(contact_ids_cursor_contact_id),'',currentuser
					FROM `fg_cm_linkedcontact` AS fgcmlc 
					LEFT JOIN `fg_cm_relation` AS fcr ON fgcmlc.`relation_id`=fcr.`id`
					WHERE fgcmlc.`linked_contact_id` = contact_ids_cursor_contact_id AND fgcmlc.`type` = 'household';
					SET SQL_SAFE_UPDATES = 1;
                 END BLOCK7;
				-- Updating fg_cm_log_connection if the user have any connections
				BLOCK8: BEGIN 
					DECLARE other_connection_cursor CURSOR FOR 
					SELECT fgcmlc.`contact_id`,fgcmlc.`linked_contact_id`,fgcmlc.`relation_id`,fgcmlc.`relation`,fcr.`name`,fgcmlc.`type`,fgcmlc.`club_id`
					FROM `fg_cm_linkedcontact` AS fgcmlc 
					LEFT JOIN `fg_cm_relation` AS fcr ON fgcmlc.`relation_id`=fcr.`id`
					WHERE (fgcmlc.`contact_id` = contact_ids_cursor_contact_id OR fgcmlc.`linked_contact_id` = contact_ids_cursor_contact_id) AND (fgcmlc.`type`='otherpersonal' OR fgcmlc.`type`='othercompany');

					OPEN other_connection_cursor;
						loopotherconnection: LOOP
							FETCH other_connection_cursor INTO other_contact_id,other_linkedcontact_id,other_relation_id,other_relation,other_name,other_connection_type,other_club_id;
							IF record_not_found THEN
								SET record_not_found = 0;
								LEAVE loopotherconnection;
							END IF;
							SET SQL_SAFE_UPDATES = 0;
							IF(is_companyn=1) THEN
								CASE 
									WHEN other_connection_type='otherpersonal' THEN
										INSERT INTO `fg_cm_log_connection` (`contact_id`, `linked_contact_id`, `assigned_club_id`,`date`,`connection_type`, `relation`, `value_before`,`value_after`,`changed_by`) VALUES (other_contact_id, other_linkedcontact_id, other_club_id, date_today, 'Single person', other_relation, contactName(other_linkedcontact_id),'', currentuser);

									WHEN other_connection_type='othercompany' THEN
										INSERT INTO `fg_cm_log_connection` (`contact_id`, `linked_contact_id`, `assigned_club_id`,`date`,`connection_type`, `relation`, `value_before`,`value_after`,`changed_by`) VALUES (other_contact_id, other_linkedcontact_id, other_club_id, date_today, 'Company', other_relation, contactName(other_linkedcontact_id),'', currentuser);
								END CASE;
							ELSE
								CASE 
									WHEN other_connection_type='otherpersonal' THEN
										INSERT INTO `fg_cm_log_connection` (`contact_id`, `linked_contact_id`, `assigned_club_id`,`date`,`connection_type`, `relation`, `value_before`,`value_after`,`changed_by`) VALUES (other_contact_id, other_linkedcontact_id, other_club_id, date_today, 'Single person', other_name, contactName(other_linkedcontact_id),'', currentuser);

									WHEN other_connection_type='othercompany' THEN
										INSERT INTO `fg_cm_log_connection` (`contact_id`, `linked_contact_id`, `assigned_club_id`,`date`,`connection_type`, `relation`, `value_before`,`value_after`,`changed_by`) VALUES (other_contact_id, other_linkedcontact_id, other_club_id, date_today, 'Company', other_relation, contactName(other_linkedcontact_id),'', currentuser);
								END CASE;
							END IF;
							SET SQL_SAFE_UPDATES = 1;
						END LOOP loopotherconnection;
					CLOSE other_connection_cursor;
				END BLOCK8; 
                SET SQL_SAFE_UPDATES = 0;
                DELETE FROM `fg_cm_linkedcontact` WHERE `contact_id` = contact_ids_cursor_contact_id OR `linked_contact_id` = contact_ids_cursor_contact_id; 

			   IF(is_companyn=0) THEN
					
					SET @companyContactConnections=CONCAT("INSERT INTO `fg_cm_log_connection` (`contact_id`, `linked_contact_id`, `assigned_club_id`,`date`, `connection_type`, `relation`,`value_before`, `value_after`, `changed_by`) SELECT `id`,",contact_ids_cursor_contact_id,",`club_id`,'",simple_date,"','Main contact',`comp_def_contact_fun`,contactName(fg_cm_contact.`comp_def_contact`),'',",currentuser," FROM fg_cm_contact WHERE `comp_def_contact`=",contact_ids_cursor_contact_id);
					PREPARE exec_ins_qry FROM @companyContactConnections;
					EXECUTE exec_ins_qry ;	
					DEALLOCATE PREPARE exec_ins_qry;

					SET @companyContactConnectionsNew=CONCAT("INSERT INTO `fg_cm_log_connection` (`contact_id`, `linked_contact_id`, `assigned_club_id`,`date`, `connection_type`, `relation`,`value_before`, `value_after`, `changed_by`) SELECT `comp_def_contact`,`id`,`club_id`,'",simple_date,"','Main contact of company',`comp_def_contact_fun`,contactName(fg_cm_contact.`id`),'',",currentuser," FROM fg_cm_contact WHERE `comp_def_contact`=",contact_ids_cursor_contact_id);
					PREPARE exec_ins_qry FROM @companyContactConnectionsNew;
					EXECUTE exec_ins_qry ;	
					DEALLOCATE PREPARE exec_ins_qry;

					UPDATE `fg_cm_contact` SET `comp_def_contact` = NULL, `comp_def_contact_fun` = NULL,`last_updated` = simple_date WHERE `comp_def_contact` = contact_ids_cursor_contact_id;

			   ELSE 

					SELECT `comp_def_contact`,`comp_def_contact_fun`,`club_id` INTO comp_def_contact_new, comp_def_contact_fun_new,company_def_club_id FROM `fg_cm_contact` WHERE `id` = contact_ids_cursor_contact_id;
					IF(comp_def_contact_new IS NOT NULL AND comp_def_contact_new !='' )THEN
					    UPDATE `fg_cm_contact` SET `comp_def_contact` = NULL, `comp_def_contact_fun` = NULL,`last_updated` = simple_date WHERE `id` = contact_ids_cursor_contact_id;
					    SELECT contactName(comp_def_contact_new) INTO def_contact_name;

					    INSERT INTO `fg_cm_log_connection` (`contact_id`, `linked_contact_id`, `assigned_club_id`,`date`, `connection_type`, `relation`,`value_before`, `value_after`, `changed_by`) VALUES (contact_ids_cursor_contact_id, comp_def_contact_new, company_def_club_id, simple_date, 'Main contact',comp_def_contact_fun_new,def_contact_name,'',currentuser);
					    INSERT INTO `fg_cm_log_connection` (`contact_id`, `linked_contact_id`, `assigned_club_id`,`date`, `connection_type`, `relation`,`value_before`, `value_after`, `changed_by`) VALUES (comp_def_contact_new, contact_ids_cursor_contact_id, company_def_club_id, simple_date, 'Main contact of company',comp_def_contact_fun_new,mainContactName,'',currentuser);
					END IF;	
			   END IF;
			   SET SQL_SAFE_UPDATES = 1;


			DELETE FROM `fg_cm_bookmarks` WHERE `contact_id` = contact_ids_cursor_contact_id;
			DELETE FROM `fg_table_settings` WHERE `contact_id` = contact_ids_cursor_contact_id;
			DELETE FROM `fg_club_bookmarks` WHERE `contact_id` = contact_ids_cursor_contact_id;
			DELETE FROM `fg_club_table_settings` WHERE `contact_id` = contact_ids_cursor_contact_id; 
			DELETE FROM `fg_rm_role_manual_contacts` WHERE `contact_id` = contact_ids_cursor_contact_id; 
			DELETE FROM `fg_cn_recepients_mandatory` WHERE `contact_id` = contact_ids_cursor_contact_id; 
			DELETE FROM `fg_cn_recepients_exception` WHERE `contact_id` = contact_ids_cursor_contact_id; 
                        DELETE FROM `fg_dm_assigment` WHERE `contact_id` = contact_ids_cursor_contact_id; 

            END LOOP contact_ids_one;	
            SET @insertqry = CONCAT(@insertqry,'##');
            SET @pre_query  = REPLACE(@insertqry,',##','');
            PREPARE exec_qry FROM @pre_query;
            EXECUTE exec_qry;
            DEALLOCATE PREPARE exec_qry;
        CLOSE contactidscursor;
    END BLOCK1;
    /*INSERT INTO `fg_cache` (`tabletitle`, `club_id`, `updated_at`) VALUES ('common',clubid,present_time); */
COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `createClubContactListTable` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `createClubContactListTable`( IN clubId INTEGER)
BEGIN
	DECLARE cc_attribute_id, record_not_found, loop_counter INTEGER DEFAULT 0; 
	DECLARE cc_fieldtype, cc_input_type TEXT DEFAULT "";
	DECLARE club_attribute_cursor CURSOR FOR SELECT ca.attribute_id, a.fieldtype, a.input_type FROM fg_cm_club_attribute AS ca LEFT JOIN fg_cm_attribute AS a ON ca.attribute_id = a.id WHERE ca.club_id = clubId;	
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;

	START TRANSACTION;
		SET @k = CONCAT('DROP TABLE IF EXISTS `tablecontact',clubId, '`');
		PREPARE stmt FROM @k;
		EXECUTE stmt;	
		
		SET @s1 = CONCAT('CREATE TABLE `tablecontact',clubId, '`(`contact_id` int(11)');
		
		SET @s2 = CONCAT(' AS (select `fg_cm_contact`.`id` AS `contact_id`');
		
		OPEN club_attribute_cursor;
			loop_attribute: LOOP
				FETCH club_attribute_cursor INTO cc_attribute_id, cc_fieldtype, cc_input_type;				
					
					SET @s2 = CONCAT(@s2, ',');
					
					IF record_not_found THEN
						SET record_not_found = 0;
						LEAVE loop_attribute;
					END IF;
					
					CASE cc_input_type
						WHEN 'multiline' THEN
							BEGIN
								SET @s1 = CONCAT(@s1, ', `', cc_attribute_id, '` TEXT CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL ');
							END;	
						WHEN 'date' THEN
							BEGIN								
								IF (cc_fieldtype = 'date') THEN 
									SET @s1 = CONCAT(@s1, ', `', cc_attribute_id, '` DATETIME NULL DEFAULT NULL');
								ELSE
									SET @s1 = CONCAT(@s1, ', `', cc_attribute_id, '` VARCHAR(30) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL');
								END IF;							
								
							END;
						WHEN 'fileupload' THEN
							BEGIN	
								SET @s1 = CONCAT(@s1, ', `', cc_attribute_id, '` VARCHAR(200) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL');
							END;
						WHEN 'imageupload' THEN
							BEGIN	
								SET @s1 = CONCAT(@s1, ', `', cc_attribute_id, '` VARCHAR(200) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL');
							END;							
						WHEN 'singleline' THEN
							BEGIN
								SET @s1 = CONCAT(@s1, ', `', cc_attribute_id, '` VARCHAR(160) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL');
							END;								
						ELSE
							BEGIN
								SET @s1 = CONCAT(@s1, ', `', cc_attribute_id, '` VARCHAR(160) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL');
							END;
						END CASE;	
					
					CASE cc_fieldtype
						WHEN 'int' THEN
							BEGIN
								SET @s2 = CONCAT(@s2, '(select `fg_cm_attribute_value_int`.`value` AS `value` from `fg_cm_attribute_value_int` where ((`fg_cm_attribute_value_int`.`contact_id` = `fg_cm_contact`.`id`) and (`fg_cm_attribute_value_int`.`attribute_id` = ',cc_attribute_id, '))) AS `',cc_attribute_id,'`');
							END;
						WHEN 'date' THEN
							BEGIN
								SET @s2 = CONCAT(@s2, '(select `fg_cm_attribute_value_date`.`value` AS `value` from `fg_cm_attribute_value_date` where ((`fg_cm_attribute_value_date`.`contact_id` = `fg_cm_contact`.`id`) and (`fg_cm_attribute_value_date`.`attribute_id` = ',cc_attribute_id, '))) AS `',cc_attribute_id,'`');
							END;
						WHEN 'text' THEN
							BEGIN
								SET @s2 = CONCAT(@s2, '(select `fg_cm_attribute_value_text`.`value` AS `value` from `fg_cm_attribute_value_text` where ((`fg_cm_attribute_value_text`.`contact_id` = `fg_cm_contact`.`id`) and (`fg_cm_attribute_value_text`.`attribute_id` = ',cc_attribute_id, '))) AS `',cc_attribute_id,'`');
							END;
					END CASE;			
			END LOOP loop_attribute;	
		CLOSE club_attribute_cursor;
	
	SET @s1 = CONCAT(@s1, ',PRIMARY KEY (`contact_id`))');
	SET @s2 = CONCAT(TRIM(BOTH ',' FROM @s2) , ' from `fg_cm_contact` where ((`fg_cm_contact`.`club_id` = ',clubId ,') and (`fg_cm_contact`.`is_permanent_delete` = 0)))');
	SET @s  = CONCAT(@s1, @s2);
	
	PREPARE stmt1 FROM @s;
	EXECUTE stmt1;
	
	SET @p1 =CONCAT('ALTER TABLE `tablecontact',clubId,'` ENGINE = InnoDB DEFAULT  CHARACTER SET utf8 COLLATE utf8_general_ci');
	PREPARE stmt2 FROM @p1;
	EXECUTE stmt2;	

	SET @p2 =CONCAT('ALTER TABLE `tablecontact',clubId,'` ADD FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact`(`id`) ON DELETE CASCADE ON UPDATE NO ACTION');
	PREPARE stmt3 FROM @p2;
	EXECUTE stmt3;
	COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `createClubContactListTableTest` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `createClubContactListTableTest`( IN clubId INTEGER)
BEGIN
	DECLARE cc_attribute_id, record_not_found, loop_counter INTEGER DEFAULT 0; 
	DECLARE cc_fieldtype, cc_input_type TEXT DEFAULT "";
	DECLARE club_attribute_cursor CURSOR FOR SELECT ca.attribute_id, a.fieldtype, a.input_type FROM fg_cm_club_attribute AS ca LEFT JOIN fg_cm_attribute AS a ON ca.attribute_id = a.id WHERE ca.club_id = clubId;	
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;

	START TRANSACTION;
		SET @k = CONCAT('DROP TABLE IF EXISTS `tablecontact',clubId, '`');
		PREPARE stmt FROM @k;
		EXECUTE stmt;	
		
		SET @s1 = CONCAT('CREATE TABLE `tablecontact',clubId, '`(`contact_id` int(11)');
		
		SET @s2 = CONCAT(' AS (select `fg_cm_contact`.`id` AS `contact_id`');
		
		OPEN club_attribute_cursor;
			loop_attribute: LOOP
				FETCH club_attribute_cursor INTO cc_attribute_id, cc_fieldtype, cc_input_type;				
					
					SET @s2 = CONCAT(@s2, ',');
					
					IF record_not_found THEN
						SET record_not_found = 0;
						LEAVE loop_attribute;
					END IF;
					
					CASE cc_input_type
						WHEN 'multiline' THEN
							BEGIN
								SET @s1 = CONCAT(@s1, ', `', cc_attribute_id, '` TEXT CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL ');
							END;	
						WHEN 'date' THEN
							BEGIN								
								IF (cc_fieldtype = 'date') THEN 
									SET @s1 = CONCAT(@s1, ', `', cc_attribute_id, '` DATETIME NULL DEFAULT NULL');
								ELSE
									SET @s1 = CONCAT(@s1, ', `', cc_attribute_id, '` VARCHAR(30) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL');
								END IF;							
								
							END;
						WHEN 'fileupload' THEN
							BEGIN	
								SET @s1 = CONCAT(@s1, ', `', cc_attribute_id, '` VARCHAR(200) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL');
							END;
						WHEN 'imageupload' THEN
							BEGIN	
								SET @s1 = CONCAT(@s1, ', `', cc_attribute_id, '` VARCHAR(200) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL');
							END;							
						WHEN 'singleline' THEN
							BEGIN
								SET @s1 = CONCAT(@s1, ', `', cc_attribute_id, '` VARCHAR(160) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL');
							END;								
						ELSE
							BEGIN
								SET @s1 = CONCAT(@s1, ', `', cc_attribute_id, '` VARCHAR(160) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL');
							END;
						END CASE;	
					
					CASE cc_fieldtype
						WHEN 'int' THEN
							BEGIN
								SET @s2 = CONCAT(@s2, '(select `fg_cm_attribute_value_int`.`value` AS `value` from `fg_cm_attribute_value_int` where ((`fg_cm_attribute_value_int`.`contact_id` = `fg_cm_contact`.`id`) and (`fg_cm_attribute_value_int`.`attribute_id` = ',cc_attribute_id, '))) AS `',cc_attribute_id,'`');
							END;
						WHEN 'date' THEN
							BEGIN
								SET @s2 = CONCAT(@s2, '(select `fg_cm_attribute_value_date`.`value` AS `value` from `fg_cm_attribute_value_date` where ((`fg_cm_attribute_value_date`.`contact_id` = `fg_cm_contact`.`id`) and (`fg_cm_attribute_value_date`.`attribute_id` = ',cc_attribute_id, '))) AS `',cc_attribute_id,'`');
							END;
						WHEN 'text' THEN
							BEGIN
								SET @s2 = CONCAT(@s2, '(select `fg_cm_attribute_value_text`.`value` AS `value` from `fg_cm_attribute_value_text` where ((`fg_cm_attribute_value_text`.`contact_id` = `fg_cm_contact`.`id`) and (`fg_cm_attribute_value_text`.`attribute_id` = ',cc_attribute_id, '))) AS `',cc_attribute_id,'`');
							END;
					END CASE;			
			END LOOP loop_attribute;	
		CLOSE club_attribute_cursor;
	
	SET @s1 = CONCAT(@s1, ',PRIMARY KEY (`contact_id`))');
	SET @s2 = CONCAT(TRIM(BOTH ',' FROM @s2) , ' from `fg_cm_contact` where ((`fg_cm_contact`.`club_id` = ',clubId ,') and (`fg_cm_contact`.`is_permanent_delete` = 0)))');
	SET @s  = CONCAT(@s1, @s2);
	
	PREPARE stmt1 FROM @s;
	EXECUTE stmt1;
	
	SET @p =CONCAT('ALTER TABLE `tablecontact',clubId,'` ENGINE = InnoDB DEFAULT  CHARACTER SET utf8 COLLATE utf8_general_ci');
	PREPARE stmt2 FROM @p;
	EXECUTE stmt2;	

	SET @p2 =CONCAT('ALTER TABLE `tablecontact',clubId,'` ADD FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact`(`id`) ON DELETE CASCADE ON UPDATE NO ACTION');
	PREPARE stmt3 FROM @p2;
	EXECUTE stmt3;		
	
	COMMIT;
	
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `createMasterClubAll` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `createMasterClubAll`()
BEGIN
	DECLARE clubId, record_not_found, isFairgate, isFederation, isSubFederation INTEGER DEFAULT 0; 
	DECLARE clubType TEXT DEFAULT "";
	DECLARE clubcursor CURSOR FOR SELECT id, is_fairgate, is_federation, is_sub_federation FROM fg_club WHERE is_deleted <> 1 AND is_fairgate <>1;	
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;

	START TRANSACTION;
		call createMasterSystemTable();
		OPEN clubcursor;
			loop_club: LOOP
				FETCH clubcursor INTO clubId, isFairgate, isFederation, isSubFederation;
					IF record_not_found THEN
						SET record_not_found = 0;
						LEAVE loop_club;
					END IF;
					SET clubType = 'club';					
					IF(isFederation = 1) THEN
						SET clubType = 'federation';
					END IF;
					IF(isSubFederation = 1) THEN
						SET clubType = 'sub_federation';
					END IF;			
   				 call `createMasterClubTable`( clubId, clubType);			
			END LOOP loop_club;	
		CLOSE clubcursor;
	COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `createMasterClubTable` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `createMasterClubTable`( IN clubId INTEGER, IN clubType TEXT)
BEGIN
	DECLARE cc_attribute_id, record_not_found, loop_counter INTEGER DEFAULT 0; 
	DECLARE cc_fieldtype, cc_input_type TEXT DEFAULT "";
	DECLARE club_attribute_cursor CURSOR FOR SELECT id, fieldtype, input_type FROM fg_cm_attribute WHERE is_system_field <> 1 AND is_fairgate_field <> 1 AND club_id = clubId;	
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;

	START TRANSACTION;
		IF(clubType ='federation' OR clubType ='sub_federation') THEN
			SET @query = CONCAT('DROP TABLE IF EXISTS `master_federation_',clubId, '`');			
			SET @query1 = CONCAT('CREATE TABLE `master_federation_',clubId, '`(`club_id` int(11), `is_fed_member` tinyint(1), `contact_id` int(11)');
			SET @alterquery = CONCAT('ALTER TABLE `master_federation_',clubId,'` ADD FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact`(`id`) ON DELETE CASCADE ON UPDATE NO ACTION, ADD FOREIGN KEY (`club_id`) REFERENCES `fg_club`(`id`) ON DELETE CASCADE ON UPDATE NO ACTION');
			SET @query2 = CONCAT(" AS (select `fg_cm_contact`.`club_id` AS club_id, '0' AS `is_fed_member`, `fg_cm_contact`.`id` AS `contact_id`");
		ELSE
			SET @query = CONCAT('DROP TABLE IF EXISTS `master_club_',clubId, '`');
			SET @query1 = CONCAT('CREATE TABLE `master_club_',clubId, '`(`contact_id` int(11)');
			SET @alterquery =CONCAT('ALTER TABLE `master_club_',clubId,'` ADD FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact`(`id`) ON DELETE CASCADE ON UPDATE NO ACTION');
			SET @query2 = CONCAT(' AS (select `fg_cm_contact`.`id` AS `contact_id`');		
		END IF;
		
		PREPARE stmt FROM @query;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
		
		OPEN club_attribute_cursor;
			loop_attribute: LOOP
				FETCH club_attribute_cursor INTO cc_attribute_id, cc_fieldtype, cc_input_type;				
					
					SET @query2 = CONCAT(@query2, ',');
					
					IF record_not_found THEN
						SET record_not_found = 0;
						LEAVE loop_attribute;
					END IF;
					
					CASE cc_input_type
						WHEN 'multiline' THEN
							BEGIN
								SET @query1 = CONCAT(@query1, ', `', cc_attribute_id, '` TEXT CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL ');
							END;	
						WHEN 'date' THEN
							BEGIN								
								IF (cc_fieldtype = 'date') THEN 
									SET @query1 = CONCAT(@query1, ', `', cc_attribute_id, '` DATETIME NULL DEFAULT NULL');
								ELSE
									SET @query1 = CONCAT(@query1, ', `', cc_attribute_id, '` VARCHAR(30) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL');
								END IF;							
								
							END;
						WHEN 'fileupload' THEN
							BEGIN	
								SET @query1 = CONCAT(@query1, ', `', cc_attribute_id, '` VARCHAR(200) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL');
							END;
						WHEN 'imageupload' THEN
							BEGIN	
								SET @query1 = CONCAT(@query1, ', `', cc_attribute_id, '` VARCHAR(200) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL');
							END;							
						WHEN 'singleline' THEN
							BEGIN
								SET @query1 = CONCAT(@query1, ', `', cc_attribute_id, '` VARCHAR(160) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL');
							END;								
						ELSE
							BEGIN
								SET @query1 = CONCAT(@query1, ', `', cc_attribute_id, '` VARCHAR(160) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL');
							END;
						END CASE;	
					
					CASE cc_fieldtype
						WHEN 'int' THEN
							BEGIN
								SET @query2 = CONCAT(@query2, '(select `fg_cm_attribute_value_int`.`value` AS `value` from `fg_cm_attribute_value_int` where ((`fg_cm_attribute_value_int`.`contact_id` = `fg_cm_contact`.`id`) and (`fg_cm_attribute_value_int`.`attribute_id` = ',cc_attribute_id, '))) AS `',cc_attribute_id,'`');
							END;
						WHEN 'date' THEN
							BEGIN
								SET @query2 = CONCAT(@query2, '(select `fg_cm_attribute_value_date`.`value` AS `value` from `fg_cm_attribute_value_date` where ((`fg_cm_attribute_value_date`.`contact_id` = `fg_cm_contact`.`id`) and (`fg_cm_attribute_value_date`.`attribute_id` = ',cc_attribute_id, '))) AS `',cc_attribute_id,'`');
							END;
						WHEN 'text' THEN
							BEGIN
								SET @query2 = CONCAT(@query2, '(select `fg_cm_attribute_value_text`.`value` AS `value` from `fg_cm_attribute_value_text` where ((`fg_cm_attribute_value_text`.`contact_id` = `fg_cm_contact`.`id`) and (`fg_cm_attribute_value_text`.`attribute_id` = ',cc_attribute_id, '))) AS `',cc_attribute_id,'`');
							END;
					END CASE;			
			END LOOP loop_attribute;	
		CLOSE club_attribute_cursor;	
		
		IF(clubType ='federation' OR clubType ='sub_federation') THEN
			SET @query1 = CONCAT(@query1, ',PRIMARY KEY (`contact_id`, `club_id`)) ENGINE = InnoDB DEFAULT  CHARACTER SET utf8 COLLATE utf8_general_ci ');
			SET @query2 = CONCAT(TRIM(BOTH ',' FROM @query2) , ' from `fg_cm_contact` where ((`fg_cm_contact`.`club_id` IN(SELECT  sublevelClubs(id) AS id FROM (SELECT  @start_with := ',clubId,',@id := @start_with,@level := 0) vars, fg_club WHERE @id IS NOT NULL) and (`fg_cm_contact`.`is_permanent_delete` = 0)))) ');
		ELSE
			SET @query1 = CONCAT(@query1, ',PRIMARY KEY (`contact_id`)) ENGINE = InnoDB DEFAULT  CHARACTER SET utf8 COLLATE utf8_general_ci ');
			SET @query2 = CONCAT(TRIM(BOTH ',' FROM @query2) , ' from `fg_cm_contact` where ((`fg_cm_contact`.`club_id` = ',clubId ,') and (`fg_cm_contact`.`is_permanent_delete` = 0))) ');
		END IF;
		
		SET @q  = CONCAT(@query1, @query2);
		
		PREPARE stmt FROM @q;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;

		PREPARE stmt FROM @alterquery;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
	COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `createMasterSystemTable` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `createMasterSystemTable`()
BEGIN
	DECLARE cc_attribute_id, record_not_found, loop_counter INTEGER DEFAULT 0; 
	DECLARE cc_fieldtype, cc_input_type TEXT DEFAULT "";
	DECLARE club_attribute_cursor CURSOR FOR SELECT id, fieldtype, input_type FROM fg_cm_attribute WHERE is_system_field =1 OR is_fairgate_field = 1;	
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;

	START TRANSACTION;
		SET @query = CONCAT('DROP TABLE IF EXISTS `master_system`');
		SET @query1 = CONCAT('CREATE TABLE `master_system`(`club_id` int(11), `contact_id` int(11)');
		SET @alterquery = CONCAT('ALTER TABLE `master_system` ADD FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact`(`id`) ON DELETE CASCADE ON UPDATE NO ACTION, ADD FOREIGN KEY (`club_id`) REFERENCES `fg_club`(`id`) ON DELETE CASCADE ON UPDATE NO ACTION');
		SET @query2 = CONCAT(' AS (select `fg_cm_contact`.`club_id` AS club_id, `fg_cm_contact`.`id` AS `contact_id`');
		PREPARE stmt FROM @query;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;	
		
		OPEN club_attribute_cursor;
			loop_attribute: LOOP
				FETCH club_attribute_cursor INTO cc_attribute_id, cc_fieldtype, cc_input_type;				
					
					SET @query2 = CONCAT(@query2, ',');
					
					IF record_not_found THEN
						SET record_not_found = 0;
						LEAVE loop_attribute;
					END IF;
					
					CASE cc_input_type
						WHEN 'multiline' THEN
							BEGIN
								SET @query1 = CONCAT(@query1, ', `', cc_attribute_id, '` TEXT CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL ');
							END;	
						WHEN 'date' THEN
							BEGIN								
								IF (cc_fieldtype = 'date') THEN 
									SET @query1 = CONCAT(@query1, ', `', cc_attribute_id, '` DATETIME NULL DEFAULT NULL');
								ELSE
									SET @query1 = CONCAT(@query1, ', `', cc_attribute_id, '` VARCHAR(30) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL');
								END IF;							
								
							END;
						WHEN 'fileupload' THEN
							BEGIN	
								SET @query1 = CONCAT(@query1, ', `', cc_attribute_id, '` VARCHAR(200) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL');
							END;
						WHEN 'imageupload' THEN
							BEGIN	
								SET @query1 = CONCAT(@query1, ', `', cc_attribute_id, '` VARCHAR(200) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL');
							END;							
						WHEN 'singleline' THEN
							BEGIN
								SET @query1 = CONCAT(@query1, ', `', cc_attribute_id, '` VARCHAR(160) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL');
							END;								
						ELSE
							BEGIN
								SET @query1 = CONCAT(@query1, ', `', cc_attribute_id, '` VARCHAR(160) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL');
							END;
						END CASE;	
					
					CASE cc_fieldtype
						WHEN 'int' THEN
							BEGIN
								SET @query2 = CONCAT(@query2, '(select `fg_cm_attribute_value_int`.`value` AS `value` from `fg_cm_attribute_value_int` where ((`fg_cm_attribute_value_int`.`contact_id` = `fg_cm_contact`.`id`) and (`fg_cm_attribute_value_int`.`attribute_id` = ',cc_attribute_id, '))) AS `',cc_attribute_id,'`');
							END;
						WHEN 'date' THEN
							BEGIN
								SET @query2 = CONCAT(@query2, '(select `fg_cm_attribute_value_date`.`value` AS `value` from `fg_cm_attribute_value_date` where ((`fg_cm_attribute_value_date`.`contact_id` = `fg_cm_contact`.`id`) and (`fg_cm_attribute_value_date`.`attribute_id` = ',cc_attribute_id, '))) AS `',cc_attribute_id,'`');
							END;
						WHEN 'text' THEN
							BEGIN
								SET @query2 = CONCAT(@query2, '(select `fg_cm_attribute_value_text`.`value` AS `value` from `fg_cm_attribute_value_text` where ((`fg_cm_attribute_value_text`.`contact_id` = `fg_cm_contact`.`id`) and (`fg_cm_attribute_value_text`.`attribute_id` = ',cc_attribute_id, '))) AS `',cc_attribute_id,'`');
							END;
					END CASE;			
			END LOOP loop_attribute;	
		CLOSE club_attribute_cursor;
	
		SET @query1 = CONCAT(@query1, ',PRIMARY KEY (`club_id`,`contact_id`)) ENGINE = InnoDB DEFAULT  CHARACTER SET utf8 COLLATE utf8_general_ci ');
		-- SET @query2 = CONCAT(TRIM(BOTH ',' FROM @query2) , ' from `fg_cm_contact` where ((`fg_cm_contact`.`club_id` = ',clubId ,') and (`fg_cm_contact`.`is_permanent_delete` = 0))) ');
		SET @query2 = CONCAT(TRIM(BOTH ',' FROM @query2) , ' from `fg_cm_contact` where (`fg_cm_contact`.`is_permanent_delete` = 0)) ');
		SET @q  = CONCAT(@query1, @query2);
		
		PREPARE stmt FROM @q;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;

		PREPARE stmt FROM @alterquery;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
	COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `createSpecialSuperdmin` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`fairgate`@`%` PROCEDURE `createSpecialSuperdmin`(admin_first_name VARCHAR(50), admin_last_name VARCHAR(50), admin_email VARCHAR(255), club_id_array VARCHAR(50))
BEGIN
	
	DECLARE new_contact_id, new_user_id, club_id_cursor, record_not_found INTEGER;
	DECLARE insert_query, insert_string, pre_query TEXT;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
            ROLLBACK;
	END;
	START TRANSACTION;
	INSERT INTO `fg_cm_contact` (`club_id`, `is_member`, `is_company`, `is_draft`, `is_deleted`, `is_permanent_delete`, `language_code`, `is_fairgate`, `last_updated`, `community_status`, `is_new`, `is_newsletter_subscriber`, `own_lang`, `member_id`, `is_conversation_reply`, `dispatch_type_invoice`, `dispatch_type_dun`, `has_main_contact`, `has_main_contact_address`, `created_at`, `origin`, `is_searchable`, `joining_date`, `leaving_date`, `archived_on`, `export_data_sharing`, `same_invoice_address`, `loginCountFlag`, `login_count`, `last_login`, `is_former_fed_member`, `map`) 
	VALUES (1, 0, 0, 0, 0, 0, '', 1, '0000-00-00 00:00:00', 'open', 0, 1, 'en', 2, 1, 'POST', 'POST', 1, 0, '0000-00-00 00:00:00', 'contact', 0, '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', 1, 1, 0, 0, '0000-00-00 00:00:00', 0, 1);

	SELECT LAST_INSERT_ID() INTO new_contact_id;
	
	INSERT INTO `master_system` (`club_id`, `contact_id`, `2`, `3`, `23`) 
	VALUES (1, new_contact_id, admin_first_name, admin_email, admin_last_name);

	INSERT INTO `sf_guard_user` (`first_name`, `last_name`, `username`, `username_canonical`, `email`, `email_canonical`, `algorithm`, `salt`, `password`, `is_active`, `is_super_admin`, `last_login`, `created_at`, `updated_at`, `contact_id`, `is_security_admin`, `enabled`, `plain_password`, `locked`, `expired`, `confirmation_token`, `password_requested_at`, `roles`, `credentials_expired`, `has_full_permission`) VALUES
	(admin_first_name, admin_last_name, admin_email, admin_email, admin_email, admin_email, 'sha1', '', '', 1, 1, '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', new_contact_id, 0, 1, '', 0, 0, '', '0000-00-00 00:00:00', 'a:1:{i:0;s:10:"ROLE_SUPER";}', 0, 0);

	SELECT LAST_INSERT_ID() INTO new_user_id;

	INSERT INTO `sf_guard_user_group` (`user_id`, `group_id`, `created_at`, `updated_at`) VALUES
	(new_user_id, 1, '0000-00-00 00:00:00', '0000-00-00 00:00:00');

	SET @insert_query = "INSERT INTO `sf_guard_user_club` (`user_id`, `club_id`) VALUES ";

	BLOCK1: BEGIN
		DECLARE club_group_cursor CURSOR FOR 
		SELECT fc.`id` 
		FROM `fg_club` AS fc 
		WHERE FIND_IN_SET(fc.`id`,club_id_array);
		OPEN club_group_cursor;
			clubloop: LOOP
				FETCH club_group_cursor INTO club_id_cursor;
				IF record_not_found THEN
					SET record_not_found = 0;
					LEAVE clubloop;
				END IF;

				SET insert_string = CONCAT("(",new_user_id,",",club_id_cursor,")");
				SET @insert_query = CONCAT(@insert_query,insert_string,',');
			END LOOP clubloop;
		CLOSE club_group_cursor;

		SET @insert_query = CONCAT(@insert_query,'##');
		SET @pre_query  = REPLACE(@insert_query,',##','');
		PREPARE exec_qry FROM @pre_query;
		EXECUTE exec_qry;
		DEALLOCATE PREPARE exec_qry;
	END BLOCK1;
	COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `deletecolums` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `deletecolums`(attribute_id_s TEXT)
BEGIN
DECLARE sort_club_id, maxsort_odr, ret_attribute_id, attribute_id, record_not_found INTEGER DEFAULT 0;
DECLARE result_record, chr_type, s, exec_qry, insertqry, pre_query, char_type TEXT DEFAULT "";

DECLARE club_cursor CURSOR FOR SELECT `id` FROM `fg_club` WHERE is_deleted=0 AND (state = "C" OR state = "CF" OR state = "D") AND id=937 ORDER BY `id`;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
    SELECT CONCAT('Sql Error', result_record);
    ROLLBACK;
END;
START TRANSACTION;
BLOCK1: BEGIN

OPEN club_cursor;
club_loop: LOOP
FETCH club_cursor INTO sort_club_id;

           IF record_not_found THEN
                SET record_not_found = 0;
                LEAVE club_loop;
            END IF;

SET result_record = sort_club_id;
 if exists (select * from information_schema.columns where table_name = 'tablecontact937' and column_name = '3212') then
  
SHOW COLUMNS FROM tablecontact937;

end if;


 
 
 
  
  
      


END LOOP club_loop;
    CLOSE club_cursor;
END BLOCK1;

COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `DeleteContactsWithDuplicateEmails` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `DeleteContactsWithDuplicateEmails`()
BEGIN
        DECLARE cc_id, cc_club_id,active_contact_id,archive_contact_id,subscriber_contact_id INTEGER DEFAULT 0; 
        DECLARE cc_email_id TEXT DEFAULT "";	
	DECLARE value_is_exist1, value_is_exist2, value_is_exist3, record_not_found INTEGER DEFAULT 0; 
	
	DECLARE subscriber_cursor CURSOR FOR SELECT c.`id`, c.`club_id`, t.`value` FROM `fg_cm_contact` AS c INNER JOIN `fg_cm_attribute_value_text` AS t ON c.`id` = t.`contact_id` WHERE c.`is_draft`=1 AND c.`is_newsletter_subscriber`=1 AND c.`is_deleted`=0 AND c.`is_permanent_delete`=0 AND t.`attribute_id` = 3 AND c.`club_id` =561 AND t.`value` IS NOT NULL AND t.`value` != " ";

	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;
    DECLARE EXIT HANDLER FOR SQLEXCEPTION, SQLWARNING
    BEGIN
        ROLLBACK;
    END;
	START TRANSACTION;
		CREATE TABLE IF NOT EXISTS `temp_delete_contacts` (`id` int(11) NOT NULL AUTO_INCREMENT, `subscriber_id` int(11) NOT NULL,
                `email_id` text DEFAULT NULL, `contact_id` int(11) NOT NULL, `type` text DEFAULT NULL, `club_id` int(11) NOT NULL, PRIMARY KEY (`id`))  ENGINE = InnoDB;
                BLOCK1: BEGIN
                    OPEN subscriber_cursor;
                            loop_subscriber: LOOP
                                    FETCH subscriber_cursor INTO cc_id,cc_club_id,cc_email_id;
                                    IF record_not_found THEN
                                            SET record_not_found = 0;
                                            LEAVE loop_subscriber;
                                    END IF;
                                                    
                                    BLOCK2: BEGIN
                                        DECLARE active_contact_cursor CURSOR FOR
                                        SELECT c1.`id` FROM `fg_cm_contact` AS c1 INNER JOIN `fg_cm_attribute_value_text` AS t1 ON c1.`id` = t1.`contact_id` WHERE c1.`is_draft`=0 AND c1.`is_deleted`=0 AND c1.`is_permanent_delete`=0 AND t1.`attribute_id` = 3 AND c1.`club_id` =cc_club_id AND t1.`value`=cc_email_id;

                                        OPEN active_contact_cursor;
                                            loop_active_contact: LOOP
                                                FETCH active_contact_cursor INTO active_contact_id;
                                                IF record_not_found THEN
                                                    SET record_not_found = 0;
                                                     LEAVE loop_active_contact;
                                                END IF;

                                                SET value_is_exist1 = (SELECT COUNT(d.`id`) FROM `temp_delete_contacts` AS d WHERE ((d.`subscriber_id` = cc_id AND  d.`contact_id` = active_contact_id) OR (d.`subscriber_id` = active_contact_id AND  d.`contact_id` = cc_id)) ORDER BY d.`id` ASC);
                                                IF value_is_exist1 = 0 THEN
                                                    INSERT INTO `temp_delete_contacts` (`subscriber_id`, `email_id`, `contact_id`, `type`,`club_id`)
                                                    VALUES (cc_id, cc_email_id, active_contact_id, 'active', cc_club_id);
                                                END IF;	

                                            END LOOP loop_active_contact;
                                        CLOSE active_contact_cursor;
                                    END BLOCK2;

                                    BLOCK3: BEGIN
                                        DECLARE archive_contact_cursor CURSOR FOR
                                        SELECT c2.`id` FROM `fg_cm_contact` AS c2 INNER JOIN `fg_cm_attribute_value_text` AS t2 ON c2.`id` = t2.`contact_id` WHERE c2.`is_deleted`=1 AND c2.`is_permanent_delete`=0 AND t2.`attribute_id` = 3 AND c2.`club_id` =cc_club_id AND t2.`value`=cc_email_id;

                                        OPEN archive_contact_cursor;
                                            loop_archive_contact: LOOP
                                                FETCH archive_contact_cursor INTO archive_contact_id;
                                                IF record_not_found THEN
                                                    SET record_not_found = 0;
                                                     LEAVE loop_archive_contact;
                                                END IF;

                                                SET value_is_exist2 = (SELECT COUNT(d.`id`) FROM `temp_delete_contacts` AS d WHERE ((d.`subscriber_id` = cc_id AND  d.`contact_id` = archive_contact_id) OR (d.`subscriber_id` = archive_contact_id AND  d.`contact_id` = cc_id)) ORDER BY d.`id` ASC);
                                                IF value_is_exist2 = 0 THEN
                                                    INSERT INTO `temp_delete_contacts` (`subscriber_id`, `email_id`, `contact_id`, `type`,`club_id`)
                                                    VALUES (cc_id, cc_email_id, archive_contact_id, 'archive', cc_club_id);
                                                END IF;	

                                            END LOOP loop_archive_contact;
                                        CLOSE archive_contact_cursor;
                                    END BLOCK3;

                                    BLOCK4: BEGIN
                                        DECLARE subscriber_contact_cursor CURSOR FOR
                                        SELECT c3.`id` FROM `fg_cm_contact` AS c3 INNER JOIN `fg_cm_attribute_value_text` AS t3 ON c3.`id` = t3.`contact_id` WHERE c3.`is_draft`=1 AND  c3.`is_newsletter_subscriber`=1 AND c3.`is_deleted`=0 AND c3.`is_permanent_delete`=0 AND t3.`attribute_id` = 3 AND c3.`club_id` =cc_club_id AND t3.`value`=cc_email_id AND c3.`id` != cc_id;

                                        OPEN subscriber_contact_cursor;
                                            loop_subscriber_contact: LOOP
                                                FETCH subscriber_contact_cursor INTO subscriber_contact_id;
                                                IF record_not_found THEN
                                                    SET record_not_found = 0;
                                                     LEAVE loop_subscriber_contact;
                                                END IF;

SET value_is_exist3 = (SELECT COUNT(d.`id`) FROM `temp_delete_contacts` AS d WHERE d.`contact_id` = cc_id ORDER BY d.`id` ASC);
                                                IF value_is_exist3 = 0 THEN
                                                    INSERT INTO `temp_delete_contacts` (`subscriber_id`, `email_id`, `contact_id`, `type`,`club_id`)
                                                    VALUES (cc_id, cc_email_id, subscriber_contact_id, 'subscriber', cc_club_id);
                                                END IF;	

                                            END LOOP loop_subscriber_contact;
                                        CLOSE subscriber_contact_cursor;
                                    END BLOCK4;

                                    UPDATE `fg_club` SET `picture_resized`= 1 WHERE `id` = cc_club_id;

                            END LOOP loop_subscriber;	
                    CLOSE subscriber_cursor;
                END BLOCK1;

	COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `deleteDuplicateSubscribers` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`fairgate`@`%` PROCEDURE `deleteDuplicateSubscribers`(IN `p_club_id` INT)
BEGIN
	DECLARE record_not_found, attr_set_id INTEGER DEFAULT 0;
    DECLARE dynamicSQL TEXT;
    DECLARE exec_qry TEXT;
    DECLARE fedChecking TEXT DEFAULT '';
    DECLARE clubTable TEXT DEFAULT '';
	DECLARE update_query TEXT DEFAULT '';
    DECLARE delete_query TEXT DEFAULT '';
    DECLARE clubId TEXT DEFAULT '';
    DECLARE my_var TEXT DEFAULT '';
    DECLARE clubType TEXT DEFAULT '';
	DECLARE parent TEXT DEFAULT '';
	DECLARE levels TEXT DEFAULT '';
   
	DECLARE CONTINUE HANDLER FOR
    NOT FOUND SET record_not_found = 1;
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        ROLLBACK;
    END;
	
	START TRANSACTION;
   
    DROP TABLE IF EXISTS `dynamic_Columncursor`;
    SET @dynamicSQL=CONCAT('CREATE TEMPORARY TABLE dynamic_Columncursor as SELECT @clubid AS Club_id,
                (SELECT club_type FROM fg_club WHERE id = Club_id) AS club_type,
                (SELECT @clubid := parent_club_id FROM fg_club WHERE id = Club_id) AS parent,
                @level := @level+ 1 AS level 
                FROM (SELECT @clubid :="',p_club_id,'", @level:= 0) vars, fg_club h WHERE @clubid > 1 ORDER BY level DESC' );
    PREPARE exec_qry FROM @dynamicSQL;
    EXECUTE exec_qry ;
    DEALLOCATE PREPARE exec_qry;

	BLOCK_CATEGORY: BEGIN
		
	DECLARE dynamiccolumnCursor CURSOR FOR  SELECT * FROM `dynamic_Columncursor`;
	
	
	-- mapping table iteration
	OPEN dynamiccolumnCursor;
		dynamiccolumnCursorLoop: LOOP
			FETCH dynamiccolumnCursor INTO clubId,clubType,parent,levels;
			IF record_not_found THEN
					SET record_not_found = 0;
					LEAVE dynamiccolumnCursorLoop;
			END IF;
			
			IF clubType='federation' OR clubType='sub_federation' THEN
			BEGIN
				SET fedChecking=CONCAT('AND (c.is_former_fed_member =1 OR mf.is_fed_member=1 OR c.club_id=',clubId,')');
				SET clubTable = CONCAT("master_federation_",clubId);
			END;
			ELSE
				SET fedChecking=CONCAT('AND c.club_id=',clubId);
				SET clubTable = CONCAT("master_club_",clubId);
			END IF;
			SET SQL_SAFE_UPDATES = 0;
			SET @update_query= CONCAT('UPDATE ',clubTable,' mf 
                    LEFT JOIN master_system ms ON ( ms.contact_id=mf.contact_id) 
                    LEFT JOIN fg_cm_contact c on ms.contact_id=c.id AND c.is_deleted=0 AND c.is_permanent_delete=0
                    LEFT JOIN fg_cn_subscriber cs ON trim(cs.email)=trim(ms.`3`) AND cs.club_id=',clubId,'
                    SET `is_subscriber`=1 WHERE trim(cs.email)=trim(ms.`3`) AND c.is_deleted=0 AND c.is_permanent_delete=0 ',fedChecking);
			PREPARE exec_qry FROM @update_query;
			EXECUTE exec_qry ;
			DEALLOCATE PREPARE exec_qry;
			
			SET @delete_query= CONCAT('DELETE cs FROM fg_cn_subscriber cs 
                    INNER JOIN master_system ms ON ( trim(cs.email)=trim(ms.`3`) AND cs.club_id=',clubId,') 
                    INNER JOIN ',clubTable,' mf on ms.contact_id=mf.contact_id 
                    INNER JOIN fg_cm_contact c on ms.contact_id=c.id AND c.is_deleted=0 AND c.is_permanent_delete=0 
                    WHERE trim(cs.email)=trim(ms.`3`) AND c.is_deleted=0 AND c.is_permanent_delete=0 ',fedChecking);
			PREPARE exec_qry FROM @delete_query;
			EXECUTE exec_qry ;
			DEALLOCATE PREPARE exec_qry;
			
		END LOOP dynamiccolumnCursorLoop;
	CLOSE dynamiccolumnCursor;
	END BLOCK_CATEGORY;

    SELECT my_var;
     
	DROP TABLE `dynamic_Columncursor`;

	COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `displayClientsAndProspects` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `displayClientsAndProspects`(tableAttributes TEXT, additionalModules TEXT, additionalModuleIds TEXT, adfreeModules TEXT, adfreeModuleIds TEXT, companyAttId INT, lastNameAttId INT, firstNameAttId INT, emailAttId INT, mobileAttId INT, frontend1ModuleId INT, selectClientFree TEXT, whereConditions TEXT, clientFreeCondition TEXT)
BEGIN
	
	DECLARE record_not_found, loopCount1, loopCount2, moduleIdPos, currModuleId, moduleId INTEGER DEFAULT 0;
	DECLARE attFieldName, columnHeading, attFieldNameVal, selectFields, attName, addrId, additionalModulesStr, currAdditionalModule, additionalModuleIdStr, adfreeModulesStr, currAdfreeModule, adfreeModuleIdStr, federationId, selectClubId, fixedFields, selectActiveContacts, resultQry, exec_qry, resultData, testVar TEXT DEFAULT '';
	
	DECLARE field_cursor CURSOR FOR SELECT `fieldname` FROM `fg_club_attribute` WHERE FIND_IN_SET(`id`, tableAttributes) ORDER BY FIELD( `id`, tableAttributes );

	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;

	SET federationId = "SELECT parent_club_id FROM fg_club WHERE id = (SELECT id FROM fg_club WHERE id = a.parent_club_id AND is_sub_federation = 1)";
	
	OPEN field_cursor;
	loop_field: LOOP
		FETCH field_cursor INTO attFieldName;

		IF record_not_found THEN
			SET record_not_found = 0;
			LEAVE loop_field;
		END IF;

		IF (columnHeading = '') THEN
			SET columnHeading = attFieldName;
		ELSE
			SET columnHeading = CONCAT(columnHeading, ',', attFieldName);
		END IF;

		IF (attFieldName = 'last_change') THEN
			SET attName = 'last_updated';
		ELSEIF (attFieldName = 'club_id') THEN
			SET attName = 'id';
		ELSEIF (attFieldName = 'identifier') THEN
			SET attName = 'url_identifier';
		ELSEIF (attFieldName = 'heard_about_us') THEN
			SET attName = 'hear_about_fairgate';
		ELSEIF (attFieldName = 'club_name') THEN
			SET attName = 'title';
		ELSE
			SET attName = attFieldName;
		END IF;

		SET attFieldNameVal = CONCAT(attFieldNameVal, ',', attName);
		
		IF (LOCATE('_corresp', attFieldName) || LOCATE('_billing', attFieldName)) THEN
			IF (LOCATE('_corresp', attFieldName)) THEN
				SET addrId = 'a.correspondence_id';
			ELSE
				SET addrId = 'a.billing_id';
			END IF;
			SET attName = REPLACE(attName, '_corresp', '');
			SET attName = REPLACE(attName, '_billing', '');
			SET attName = REPLACE(attName, 'zip', 'zipcode');

			SET selectFields = CONCAT(selectFields, ", (SELECT ",attName," FROM fg_club_address WHERE id=",addrId,") AS ",attFieldName);
		ELSEIF (LOCATE(attFieldName, additionalModules)) THEN

			SET additionalModulesStr = CONCAT(additionalModules, ',');
			SET loopCount1 = 0;
			whileLoop1: WHILE (LOCATE(',', additionalModulesStr) > 0)
			DO
			    SET currAdditionalModule = SUBSTRING(additionalModulesStr, 1, LOCATE(',', additionalModulesStr)-1);
			    SET additionalModulesStr = SUBSTRING(additionalModulesStr, LOCATE(',', additionalModulesStr)+1);
			    SET loopCount1 = loopCount1 + 1;
			    IF (currAdditionalModule = attFieldName) THEN
				SET moduleIdPos = loopCount1;
				LEAVE whileLoop1;
			    END IF;
			END WHILE;

			SET moduleId = 0;
			SET additionalModuleIdStr = CONCAT(additionalModuleIds, ',');
			SET loopCount2 = 0;
			whileLoop2: WHILE (LOCATE(',', additionalModuleIdStr) > 0)
			DO
			    SET currModuleId = SUBSTRING(additionalModuleIdStr, 1, LOCATE(',', additionalModuleIdStr)-1);
			    SET additionalModuleIdStr = SUBSTRING(additionalModuleIdStr, LOCATE(',', additionalModuleIdStr)+1);
			    SET loopCount2 = loopCount2 + 1;
			    IF (loopCount2 = moduleIdPos) THEN
				SET moduleId = currModuleId;
				LEAVE whileLoop2;
			    END IF;
			END WHILE;

			SET selectFields = CONCAT(selectFields, ", (IF((a.state='P'), ('0'), (SELECT `fg_mb_club_modules`.signed_on FROM `fg_mb_club_modules`
					    LEFT JOIN `fg_mb_module` ON (`fg_mb_club_modules`.module_id=`fg_mb_module`.id)
					    LEFT JOIN `fg_mb_module_federation` ON (`fg_mb_module_federation`.module_id=`fg_mb_module`.id)
					    WHERE ((`fg_mb_module`.is_visible = 1) AND ((`fg_mb_club_modules`.club_id = a.id
					    AND `fg_mb_club_modules`.module_id=",moduleId,")
					    OR ((`fg_mb_module_federation`.is_default = 1) AND `fg_mb_module_federation`.module_id=",moduleId,"))
					    AND (`fg_mb_module_federation`.federation_id IN (IF((",federationId,"), (",federationId,"), (1))))
				    ) LIMIT 1))) AS ", attFieldName);
			
		ELSEIF (LOCATE(attFieldName, adfreeModules)) THEN

			SET adfreeModulesStr = CONCAT(adfreeModules, ',');
			SET loopCount1 = 0;
			whileLoop1: WHILE (LOCATE(',', adfreeModulesStr) > 0)
			DO
			    SET currAdfreeModule = SUBSTRING(adfreeModulesStr, 1, LOCATE(',', adfreeModulesStr)-1);
			    SET adfreeModulesStr = SUBSTRING(adfreeModulesStr, LOCATE(',', adfreeModulesStr)+1);
			    SET loopCount1 = loopCount1 + 1;
			    IF (currAdfreeModule = attFieldName) THEN
				SET moduleIdPos = loopCount1;
				LEAVE whileLoop1;
			    END IF;
			END WHILE;

			SET moduleId = 0;
			SET adfreeModuleIdStr = CONCAT(adfreeModuleIds, ',');
			SET loopCount2 = 0;
			whileLoop2: WHILE (LOCATE(',', adfreeModuleIdStr) > 0)
			DO
			    SET currModuleId = SUBSTRING(adfreeModuleIdStr, 1, LOCATE(',', adfreeModuleIdStr)-1);
			    SET adfreeModuleIdStr = SUBSTRING(adfreeModuleIdStr, LOCATE(',', adfreeModuleIdStr)+1);
			    SET loopCount2 = loopCount2 + 1;
			    IF (loopCount2 = moduleIdPos) THEN
				SET moduleId = currModuleId;
				LEAVE whileLoop2;
			    END IF;
			END WHILE;

			SET selectFields = CONCAT(selectFields, ", (IF(((SELECT id FROM fg_mb_club_adfree WHERE (club_id = a.id AND ad_type_id = ",moduleId," AND is_active = 1 AND is_selected=1 AND (cost IS NOT NULL AND cost != 0)) LIMIT 1) IS NOT NULL), ('1'), ('0'))) AS ", attFieldName);

		ELSEIF (attFieldName = 'main_contact_count') THEN
			SET selectFields = CONCAT(selectFields, ", (SELECT login_count FROM fg_cm_contact WHERE id = a.fairgate_solution_contact) AS ",attFieldName);
		ELSEIF (attFieldName = 'all_contact_count') THEN
			SET selectFields = CONCAT(selectFields, ", (SELECT SUM(login_count) FROM fg_cm_contact WHERE club_id=a.id AND is_permanent_delete=0) AS ",attFieldName);
		ELSEIF (attFieldName = 'sales_agent') THEN
			SET selectFields = CONCAT(selectFields, ", (SELECT group_concat(cnt1.value ORDER BY cnt1.attribute_id DESC SEPARATOR ' ') FROM fg_cm_attribute_value_text cnt1 WHERE cnt1.attribute_id IN (",lastNameAttId,",",firstNameAttId,") AND cnt1.contact_id=a.responsible_contact_id) AS ",attFieldName);
		ELSEIF (attFieldName = 'activity_category') THEN
			SET selectFields = CONCAT(selectFields, ", (SELECT subsubcategory_name FROM fg_subcategorisation WHERE id=a.assignment_activity) AS ",attFieldName);
		ELSEIF (attFieldName = 'country') THEN
			SET selectFields = CONCAT(selectFields, ", (SELECT subsubcategory_name FROM fg_subcategorisation WHERE id=a.assignment_country) AS ",attFieldName);
		ELSEIF (attFieldName = 'state') THEN
			SET selectFields = CONCAT(selectFields, ", (SELECT subsubcategory_name FROM fg_subsubcategorisation WHERE id=a.assignment_state) AS ",attFieldName);
		ELSEIF (attFieldName = 'federation') THEN
			SET selectFields = CONCAT(selectFields, ", (SELECT title FROM fg_club WHERE id = (",federationId,")) AS ",attFieldName);
		ELSEIF (attFieldName = 'sub_federation') THEN
			SET selectFields = CONCAT(selectFields, ", (SELECT i.title FROM fg_club i WHERE (i.id = a.parent_club_id AND i.is_sub_federation = 1)) AS ",attFieldName);
		ELSEIF (attFieldName = 'first_contact') THEN
			SET selectFields = CONCAT(selectFields, ", (SELECT name FROM fg_club_firstcontact WHERE id=a.first_contact_type_id) AS ",attFieldName);
		ELSEIF (attFieldName = 'active_contacts') THEN
			SET selectFields = CONCAT(selectFields, ", (SELECT count(DISTINCT id) FROM fg_cm_contact WHERE club_id=a.id AND is_draft=0 AND is_deleted=0 AND is_permanent_delete=0) AS ",attFieldName);
		ELSEIF (attFieldName = 'layout') THEN
			SET selectFields = CONCAT(selectFields, ", (IF(((SELECT `fg_mb_club_modules`.id FROM `fg_mb_club_modules`
		            LEFT JOIN `fg_mb_module` ON (`fg_mb_club_modules`.module_id=`fg_mb_module`.id)
		            LEFT JOIN `fg_mb_module_federation` ON (`fg_mb_module_federation`.module_id=`fg_mb_module`.id)
		            WHERE ((`fg_mb_module`.is_visible = 1) AND ((`fg_mb_club_modules`.club_id = a.id
		            AND `fg_mb_club_modules`.module_id=",frontend1ModuleId,")
		            OR ((`fg_mb_module_federation`.is_default = 1) AND `fg_mb_module_federation`.module_id=",frontend1ModuleId,"))
		            AND (`fg_mb_module_federation`.federation_id IN (IF((",federationId,"), (",federationId,"), (1))))
		            ) LIMIT 1) IS NOT NULL),
		        (SELECT title FROM fg_tm_theme WHERE id = (SELECT theme_id FROM fg_tm_selection WHERE club_id=a.id AND settings_type='live' LIMIT 1)), (''))) AS ",attFieldName);
		ELSEIF (attFieldName = 'fg_main_contact_email') THEN
			SET selectFields = CONCAT(selectFields, ", (IF(((a.state='P') || (a.state='F') || (a.state='SF')),
		            (SELECT email FROM  fg_am_club_main_contact WHERE club_id=a.id LIMIT 1),
		            (SELECT cnt4.value FROM fg_cm_attribute_value_text cnt4 WHERE cnt4.attribute_id=",emailAttId," AND cnt4.contact_id=a.fairgate_solution_contact LIMIT 1)
		        )) AS ",attFieldName);
		ELSEIF (attFieldName = 'fg_main_contact_mobile') THEN
			SET selectFields = CONCAT(selectFields, ", (IF(((a.state='P') || (a.state='F') || (a.state='SF')),
		            (SELECT mobile FROM  fg_am_club_main_contact WHERE club_id=a.id LIMIT 1),
		            (SELECT cnt3.value FROM fg_cm_attribute_value_text cnt3 WHERE cnt3.attribute_id=",mobileAttId," AND cnt3.contact_id=a.fairgate_solution_contact LIMIT 1)
		        )) AS ",attFieldName);
		ELSEIF (attFieldName = 'fg_main_contact') THEN
			
			SET selectFields = CONCAT(selectFields, ", (IF(((a.state='P') || (a.state='F') || (a.state='SF')),
		            (SELECT CONCAT(last_name,' ',first_name) FROM  fg_am_club_main_contact WHERE club_id=a.id),
		            (SELECT getContactName(a.fairgate_solution_contact, ",companyAttId,", ",lastNameAttId,", ",firstNameAttId,"))
		            )) AS ",attFieldName);

		ELSEIF (attFieldName = 'fg_sponsor_contact_email') THEN
			SET selectFields = CONCAT(selectFields, ", (IF(((a.state='P') || (a.state='F') || (a.state='SF')), (''), (SELECT cnt7.value FROM fg_cm_attribute_value_text cnt7 WHERE cnt7.attribute_id=",emailAttId," AND cnt7.contact_id=a.fairgate_sponsor_contact LIMIT 1))) AS ",attFieldName);
		ELSEIF (attFieldName = 'fg_sponsor_contact_mobile') THEN
			SET selectFields = CONCAT(selectFields, ", (IF(((a.state='P') || (a.state='F') || (a.state='SF')), (''), (SELECT cnt6.value FROM fg_cm_attribute_value_text cnt6 WHERE cnt6.attribute_id=",mobileAttId," AND cnt6.contact_id=a.fairgate_sponsor_contact LIMIT 1))) AS ",attFieldName);

		ELSEIF (attFieldName = 'fg_sponsor_contact') THEN
			
			SET selectFields = CONCAT(selectFields, ", (IF(((a.state='P') || (a.state='F') || (a.state='SF')), (''),
                		(SELECT getContactName(a.fairgate_sponsor_contact, ",companyAttId,", ",lastNameAttId,", ",firstNameAttId,"))
             			)) AS ",attFieldName);

		ELSEIF (attFieldName = 'fg_invoice_contact_email') THEN
			SET selectFields = CONCAT(selectFields, ", (IF(((a.state='P') || (a.state='F') || (a.state='SF')), (''), (SELECT cnt10.value FROM fg_cm_attribute_value_text cnt10 WHERE cnt10.attribute_id=",emailAttId," AND cnt10.contact_id=a.fairgate_invoice_contact LIMIT 1))) AS ",attFieldName);
		ELSEIF (attFieldName = 'fg_invoice_contact_mobile') THEN
			SET selectFields = CONCAT(selectFields, ", (IF(((a.state='P') || (a.state='F') || (a.state='SF')), (''), (SELECT cnt9.value FROM fg_cm_attribute_value_text cnt9 WHERE cnt9.attribute_id=",mobileAttId," AND cnt9.contact_id=a.fairgate_invoice_contact LIMIT 1))) AS ",attFieldName);

		ELSEIF (attFieldName = 'fg_invoice_contact') THEN
			
			SET selectFields = CONCAT(selectFields, ", (IF(((a.state='P') || (a.state='F') || (a.state='SF')), (''),
                		(SELECT getContactName(a.fairgate_invoice_contact, ",companyAttId,", ",lastNameAttId,", ",firstNameAttId,"))
             			)) AS ",attFieldName);

		ELSEIF (attFieldName = 'admins') THEN
			SET selectFields = CONCAT(selectFields, ", (SELECT COUNT(DISTINCT sg.`user_id`) as user_id FROM `sf_guard_user_group` sg LEFT JOIN `sf_guard_user` su ON su.`id` = sg.`user_id` LEFT JOIN  `fg_cm_contact` c ON  c.`id` =  su.`contact_id` WHERE c.`club_id` = a.id) AS ",attFieldName);
		ELSEIF (attFieldName = 'last_admin_login') THEN
			SET selectFields = CONCAT(selectFields, ", (SELECT su.last_login FROM `sf_guard_user_group` ug LEFT JOIN `sf_guard_user` su ON (su.id = ug.user_id) LEFT JOIN `fg_cm_contact` cont ON (su.contact_id=cont.id) WHERE cont.club_id=a.id ORDER BY su.last_login DESC LIMIT 1) AS ",attFieldName);
		ELSEIF (attFieldName = 'last_contact_change') THEN
			SET selectFields = CONCAT(selectFields, ", (SELECT cnt11.last_updated FROM fg_cm_contact cnt11 WHERE cnt11.club_id=a.id AND cnt11.is_permanent_delete=0 ORDER BY cnt11.last_updated DESC LIMIT 1) AS ",attFieldName);
		ELSEIF (attFieldName = 'next_action') THEN
			SET selectFields = CONCAT(selectFields, ", (SELECT getNextActivityOfClub(a.id)) AS ",attFieldName);
		ELSEIF (attFieldName = 'sage') THEN
			SET selectFields = CONCAT(selectFields, ", (SELECT GROUP_CONCAT(sg.name SEPARATOR ', ') FROM fg_am_sage sg LEFT JOIN fg_am_club_sage csg ON (csg.sage_id=sg.id) WHERE csg.club_id=a.id) AS ",attFieldName);
		ELSEIF (attFieldName = 'okk') THEN
			SET selectFields = CONCAT(selectFields, ", (IF((a.okk='N'), ('No'), ('Yes'))) AS ",attFieldName);
		ELSEIF (attFieldName = 'dispatch_type_invoices') THEN
			SET selectFields = CONCAT(selectFields, ", (IF((a.state='P'), (''), (IF((a.invoice_dispatch_type='POST'), ('Post'), ('E-Mail'))))) AS ",attFieldName);
		ELSEIF (attFieldName = 'dispatch_type_duns') THEN
			SET selectFields = CONCAT(selectFields, ", (IF((a.state='P'), (''), (IF((a.dun_dispatch_type='POST'), ('Post'), ('E-Mail'))))) AS ",attFieldName);
		ELSEIF (attFieldName = 'subscribers') THEN
			SET selectFields = CONCAT(selectFields, ", (SELECT count(DISTINCT id) FROM fg_cm_contact WHERE club_id=a.id AND is_draft=1  AND is_deleted=0 AND is_newsletter_subscriber =1 AND is_permanent_delete=0) AS ",attFieldName);
		ELSEIF (attFieldName = 'revenues') THEN
			SET selectFields = CONCAT(selectFields, ", a.clientstate_amount AS ",attFieldName);
		ELSEIF (attFieldName = 'activity') THEN
			SET selectFields = CONCAT(selectFields, ", (SELECT subsubcategory_name FROM fg_subsubcategorisation WHERE id=a.assignment_subactivity) AS ",attFieldName);
		ELSEIF (attFieldName = 'sales_state') THEN
			SET selectFields = CONCAT(selectFields, ", (IF(((a.state='P') OR (a.state='CF')), 
				(SELECT CONCAT(stars,'-',title) FROM fg_sale_states WHERE id=a.sales_state_id),
				(IF(((a.state='C') OR (a.state='D') OR (a.state='CF')),
				    (CASE WHEN (a.clientstate_amount = 0) THEN '0'
				          WHEN (a.clientstate_amount > 0 AND a.clientstate_amount <= 500) THEN '1'
				          WHEN (a.clientstate_amount > 500 AND a.clientstate_amount <= 1000) THEN '2'
				          WHEN (a.clientstate_amount > 1000 AND a.clientstate_amount <= 1500) THEN '3'
				          WHEN (a.clientstate_amount > 1500 AND a.clientstate_amount <= 2000) THEN '4'
				          WHEN (a.clientstate_amount > 2000) THEN '5'
				    END),
				('')))
			    )) AS ",attFieldName);
		ELSEIF (attFieldName = 'contract_start') THEN
			SET selectFields = CONCAT(selectFields, ", a.invoice_date AS ",attFieldName);
		ELSE
			SET selectFields = CONCAT(selectFields, ", a.",attName," AS ",attFieldName);
		END IF;

	END LOOP loop_field;
	CLOSE field_cursor;

	IF (LOCATE('club_id', columnHeading) <= 0) THEN
		SET selectClubId = "a.id AS club_id,";
	END IF;

	SET fixedFields = "a.is_federation, a.is_sub_federation, a.correspondence_id, a.billing_id, a.state AS club_state, a.fairgate_solution_contact as main_contact_id, a.clientstate_amount as clientstate_amount";
	IF (LOCATE('identifier', columnHeading) <= 0) THEN
		SET fixedFields = CONCAT(fixedFields, ", a.url_identifier AS identifier");
	END IF;

	
		
	

	SET selectFields = CONCAT(selectClubId, fixedFields, selectFields, selectClientFree, selectActiveContacts);

	SET @columnHeading = columnHeading;
	
	SET @resultQry = CONCAT("SELECT @columnHeading, ",selectFields,"
            FROM fg_club a
            LEFT JOIN fg_mb_club_modules cm ON a.id = cm.club_id
            LEFT JOIN fg_mb_club_plan cp ON a.id = cp.club_id
            LEFT JOIN fg_mb_club_adfree ca ON a.id = ca.club_id
            LEFT JOIN fg_am_club_sage cs ON a.id = cs.club_id
            WHERE (a.is_deleted = 0 AND a.id <> 1 AND a.is_fairgate <> 1 ",whereConditions,")
            GROUP BY a.id ",clientFreeCondition);

	PREPARE exec_qry FROM @resultQry;
	EXECUTE exec_qry;
	DEALLOCATE PREPARE exec_qry;


	

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `DisplayImplications` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `DisplayImplications`(IN `clubId` INT, IN `in_contact_id` INT, IN `in_linked_contact_id` INT, IN `in_relation_id` INT, IN `default_club_lang` CHAR(2))
BEGIN

DECLARE linked_relation_id INTEGER;
DECLARE record_not_found INTEGER DEFAULT 0; 
DECLARE temp_relation INTEGER;
DECLARE temp_count INTEGER;

DECLARE contact_cursor_value_contact INTEGER;
DECLARE contact_cursor_value_linked_contact INTEGER;
DECLARE contact_cursor_value_relation INTEGER;

DECLARE contact_cursor_value_contact_two INTEGER;
DECLARE contact_cursor_value_linked_contact_two INTEGER;
DECLARE contact_cursor_value_relation_two INTEGER;

DECLARE contact_cursor CURSOR FOR
    SELECT `contact_id`, `linked_contact_id`, `relation_id` FROM `fg_cm_linkedcontact` WHERE (`contact_id` = in_contact_id  OR `contact_id` = in_linked_contact_id)  AND `type`='household' AND `club_id`=clubId;

DECLARE contact_cursor_one CURSOR FOR
    SELECT `contact_id`, `linked_contact_id`, (SELECT `id` FROM `fg_cm_relation` WHERE `name`=`linkedcontact_implications`.`relation`) AS relation_id  FROM `linkedcontact_implications` WHERE `contact_id` = in_contact_id;

DECLARE contact_cursor_two CURSOR FOR
    SELECT `contact_id`, `linked_contact_id`,  (SELECT `id` FROM `fg_cm_relation` WHERE `name`=`linkedcontact_implications`.`relation`) AS relation_id FROM `linkedcontact_implications` WHERE `contact_id` = in_linked_contact_id ;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;

DROP TEMPORARY TABLE IF EXISTS `linkedcontact_implications`;
CREATE TEMPORARY TABLE `linkedcontact_implications` (
  `contact_id` int(11),
  `linked_contact_id` int(11),
  `relation` varchar(40)
);

SELECT `first_level_relation_id` INTO linked_relation_id FROM `fg_cm_relation_first_level` WHERE `relation_id` = in_relation_id;

OPEN contact_cursor;
loop_contact: LOOP

FETCH contact_cursor INTO
    contact_cursor_value_contact,
    contact_cursor_value_linked_contact,
    contact_cursor_value_relation;
    
    IF record_not_found THEN
        SET record_not_found = 0;
                LEAVE loop_contact;
    END IF;
   
    INSERT INTO `linkedcontact_implications` (`contact_id`, `linked_contact_id`, `relation`) VALUES (contact_cursor_value_linked_contact, contact_cursor_value_contact,
					(
						SELECT IF(Ri18n.`title_lang`='',r.`name`,Ri18n.`title_lang`) as name
						FROM `fg_cm_relation` r
						LEFT JOIN `fg_cm_relation_i18n` Ri18n ON Ri18n.`id`=r.`id` AND Ri18n.`lang`=default_club_lang
						WHERE r.`id` = contact_cursor_value_relation
					)
				);
	
	IF (contact_cursor_value_contact = in_contact_id) THEN
            
            SELECT `second_level_relation_id` INTO temp_relation FROM `fg_cm_relation_second_level` 
                        WHERE  `relation_id` = linked_relation_id AND `first_level_relation_id` = contact_cursor_value_relation;
		
			
			INSERT INTO `linkedcontact_implications` (`contact_id`, `linked_contact_id`, `relation`) VALUES (contact_cursor_value_linked_contact, in_linked_contact_id,
					(
						SELECT IF(Ri18n.`title_lang`='',r.`name`,Ri18n.`title_lang`) as name
						FROM `fg_cm_relation` r
						LEFT JOIN `fg_cm_relation_i18n` Ri18n ON Ri18n.`id`=r.`id` AND Ri18n.`lang`=default_club_lang 
						WHERE r.`id` = temp_relation
					)
				);
			
			INSERT INTO `linkedcontact_implications` (`contact_id`, `linked_contact_id`, `relation`) VALUES (in_linked_contact_id,contact_cursor_value_linked_contact,
					(
						SELECT IF(Ri18n.`title_lang`='',r.`name`,Ri18n.`title_lang`) as name
						FROM `fg_cm_relation_first_level` 
						JOIN `fg_cm_relation` r
						ON(r.`id`=`fg_cm_relation_first_level`.`first_level_relation_id`)
						LEFT JOIN `fg_cm_relation_i18n` Ri18n ON Ri18n.`id`=r.`id` AND Ri18n.`lang`=default_club_lang 
						 
						WHERE `relation_id` = temp_relation
					)
				);

	 ELSE 
             
            SELECT `second_level_relation_id` INTO temp_relation FROM `fg_cm_relation_second_level` 
                        WHERE  `relation_id` = in_relation_id AND `first_level_relation_id` = contact_cursor_value_relation;
			
			INSERT INTO `linkedcontact_implications` (`contact_id`, `linked_contact_id`, `relation`) VALUES (contact_cursor_value_linked_contact, in_contact_id,
					(
						SELECT IF(Ri18n.`title_lang`='',r.`name`,Ri18n.`title_lang`) as name
						FROM `fg_cm_relation` r
						LEFT JOIN `fg_cm_relation_i18n` Ri18n ON Ri18n.`id`=r.`id` AND Ri18n.`lang`=default_club_lang  
						WHERE r.`id` = temp_relation
					)
				);
				
			INSERT INTO `linkedcontact_implications` (`contact_id`, `linked_contact_id`, `relation`) VALUES (in_contact_id, contact_cursor_value_linked_contact,
					(
						SELECT IF(Ri18n.`title_lang`='',r.`name`,Ri18n.`title_lang`) as name
						FROM `fg_cm_relation_first_level` 
						JOIN `fg_cm_relation` r
						ON(r.`id`=`fg_cm_relation_first_level`.`first_level_relation_id`) 
						LEFT JOIN `fg_cm_relation_i18n` Ri18n ON Ri18n.`id`=r.`id` AND Ri18n.`lang`=default_club_lang 
						WHERE `relation_id` = temp_relation
					)
				);
	END IF;		

END LOOP loop_contact;
CLOSE contact_cursor;


INSERT INTO `linkedcontact_implications` (`contact_id`, `linked_contact_id`, `relation`) VALUES (in_linked_contact_id,in_contact_id,
		(
			SELECT IF(Ri18n.`title_lang`='',r.`name`,Ri18n.`title_lang`) as name 
			FROM `fg_cm_relation` r
			LEFT JOIN `fg_cm_relation_i18n` Ri18n ON Ri18n.`id`=r.`id` AND Ri18n.`lang`=default_club_lang 
			WHERE r.`id` = in_relation_id
		)
	);           
            
INSERT INTO `linkedcontact_implications` (`contact_id`, `linked_contact_id`, `relation`) VALUES (in_contact_id, in_linked_contact_id,
		(
			SELECT IF(Ri18n.`title_lang`='',r.`name`,Ri18n.`title_lang`) as name
			FROM `fg_cm_relation` r
			LEFT JOIN `fg_cm_relation_i18n` Ri18n ON Ri18n.`id`=r.`id` AND Ri18n.`lang`=default_club_lang
			WHERE r.`id` = linked_relation_id
		)
	);             
 
   
                                    
OPEN contact_cursor_one;
loop_contact_one: LOOP

FETCH contact_cursor_one INTO
    contact_cursor_value_contact,
    contact_cursor_value_linked_contact,
    contact_cursor_value_relation;
    
    IF record_not_found THEN
            SET record_not_found = 0;
                        LEAVE loop_contact_one;
    END IF;
	
	OPEN contact_cursor_two;
	loop_contact_two: LOOP
	
	FETCH contact_cursor_two INTO
		contact_cursor_value_contact_two,
		contact_cursor_value_linked_contact_two,
		contact_cursor_value_relation_two;
        
        IF record_not_found THEN
            SET record_not_found = 0;
                        LEAVE loop_contact_two;
        END IF;
       
        IF(contact_cursor_value_linked_contact != in_linked_contact_id) THEN 
            IF(contact_cursor_value_linked_contact_two != in_contact_id) THEN 
                IF(contact_cursor_value_linked_contact != contact_cursor_value_linked_contact_two) THEN 
            
            
                    SELECT `second_level_relation_id` INTO temp_relation FROM `fg_cm_relation_second_level` WHERE  `relation_id` = (
                        SELECT `second_level_relation_id` FROM `fg_cm_relation_second_level` WHERE  `relation_id` = (
                            SELECT `first_level_relation_id` FROM `fg_cm_relation_first_level` WHERE `relation_id` = contact_cursor_value_relation
                        ) AND `first_level_relation_id` = in_relation_id
                    ) AND `first_level_relation_id` = contact_cursor_value_relation_two;
                    
                    SELECT count(*)  INTO temp_count FROM `linkedcontact_implications` 
                        WHERE `contact_id` = contact_cursor_value_linked_contact AND `linked_contact_id` = contact_cursor_value_linked_contact_two;
                        
                                     			
						INSERT INTO `linkedcontact_implications` (`contact_id`, `linked_contact_id`, `relation`) VALUES (contact_cursor_value_linked_contact, 
								contact_cursor_value_linked_contact_two,
								(
									SELECT IF(Ri18n.`title_lang`='',r.`name`,Ri18n.`title_lang`) as name 
									FROM `fg_cm_relation` r
									LEFT JOIN `fg_cm_relation_i18n` Ri18n ON Ri18n.`id`=r.`id` AND Ri18n.`lang`=default_club_lang
									WHERE r.`id` = temp_relation
								)
							);
                                                   
                    
                                    
                END IF;
            END IF;
        END IF;
    
	END LOOP loop_contact_two;
    CLOSE contact_cursor_two;	
	
		
END LOOP loop_contact_one;
CLOSE contact_cursor_one;
                                    
SELECT * FROM `linkedcontact_implications`;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `DisplayImplicationsNew` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `DisplayImplicationsNew`(in_contact_id INT, in_linked_contact_id INT, in_relation_id INT)
BEGIN

DECLARE linked_relation_id INTEGER;
DECLARE record_not_found INTEGER DEFAULT 0; 
DECLARE temp_relation INTEGER;
DECLARE first_level_relation INTEGER;
DECLARE implication_count INTEGER;

DECLARE contact_cursor_value_contact INTEGER;
DECLARE contact_cursor_value_linked_contact INTEGER;
DECLARE contact_cursor_value_relation INTEGER;

DECLARE contact_cursor_value_contact_two INTEGER;
DECLARE contact_cursor_value_linked_contact_two INTEGER;
DECLARE contact_cursor_value_relation_two INTEGER;

DECLARE contact_cursor CURSOR FOR
    SELECT `contact_id`, `linked_contact_id`, `relation_id` FROM `fg_cm_linkedcontact` WHERE (`contact_id` = in_contact_id  OR `contact_id` = in_linked_contact_id)  AND `type`='household';

DECLARE implications_cursor CURSOR FOR
    SELECT `contact_id`, `linked_contact_id`, `relation_id` FROM `linkedcontact_implications` WHERE `contact_id` = in_contact_id  OR `contact_id` = in_linked_contact_id;

DECLARE contact_cursor_one CURSOR FOR SELECT `contact_id`, `linked_contact_id`, `relation_id` FROM `linkedcontact_implications` WHERE `contact_id` = in_contact_id;

DECLARE contact_cursor_two CURSOR FOR SELECT `contact_id`, `linked_contact_id`, `relation_id` FROM `linkedcontact_implications` WHERE `contact_id` = in_linked_contact_id;

DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;

CREATE TABLE IF NOT EXISTS `linkedcontact_implications` (
  `contact_id` int(11),
  `linked_contact_id` int(11),
  `relation_id` int(11),
  `relation` varchar(40)
);
ALTER TABLE `linkedcontact_implications` ADD UNIQUE ( `contact_id`, `linked_contact_id`);

DELETE FROM `linkedcontact_implications` WHERE `contact_id` = in_linked_contact_id OR `linked_contact_id` = in_linked_contact_id;
SELECT count(*) INTO implication_count FROM `linkedcontact_implications` WHERE `contact_id` = in_contact_id;

SELECT `first_level_relation_id` INTO linked_relation_id FROM `fg_cm_relation_first_level` WHERE `relation_id` = in_relation_id;

IF (implication_count = 0) THEN
	OPEN contact_cursor;
ELSE
	OPEN implications_cursor;
END IF;
loop_contact: LOOP

IF (implication_count = 0) THEN
	FETCH contact_cursor INTO
	    contact_cursor_value_contact,
	    contact_cursor_value_linked_contact,
	    contact_cursor_value_relation;
ELSE
	FETCH implications_cursor INTO
	    contact_cursor_value_contact,
	    contact_cursor_value_linked_contact,
	    contact_cursor_value_relation;
END IF;
    
    IF record_not_found THEN
        SET record_not_found = 0;
                LEAVE loop_contact;
    END IF;
   
    INSERT INTO `linkedcontact_implications` (`contact_id`, `linked_contact_id`, `relation_id`, `relation`) VALUES (contact_cursor_value_contact, contact_cursor_value_linked_contact, contact_cursor_value_relation, 
					(
						SELECT `fg_cm_relation`.`name` 
						FROM `fg_cm_relation` 
						WHERE `id` = contact_cursor_value_relation
					)
				) ON DUPLICATE KEY UPDATE `relation_id`=contact_cursor_value_relation AND `relation`=
					(
						SELECT `fg_cm_relation`.`name` 
						FROM `fg_cm_relation` 
						WHERE `id` = contact_cursor_value_relation
					);

	SELECT `first_level_relation_id` INTO first_level_relation FROM `fg_cm_relation_first_level` WHERE `relation_id` = contact_cursor_value_relation;

    INSERT INTO `linkedcontact_implications` (`contact_id`, `linked_contact_id`, `relation_id`, `relation`) VALUES (contact_cursor_value_linked_contact, contact_cursor_value_contact, first_level_relation, 
					(
						SELECT `fg_cm_relation`.`name` 
						FROM `fg_cm_relation` 
						WHERE `id` = first_level_relation
					)
				) ON DUPLICATE KEY UPDATE `relation_id`= first_level_relation AND `relation`=
					(
						SELECT `fg_cm_relation`.`name` 
						FROM `fg_cm_relation` 
						WHERE `id` = first_level_relation
					);

	
	IF (contact_cursor_value_contact = in_contact_id) THEN
            
            SELECT `second_level_relation_id` INTO temp_relation FROM `fg_cm_relation_second_level` 
                        WHERE  `relation_id` = linked_relation_id AND `first_level_relation_id` = contact_cursor_value_relation;
		
			
			INSERT INTO `linkedcontact_implications` (`contact_id`, `linked_contact_id`, `relation_id`, `relation`) VALUES (in_linked_contact_id, contact_cursor_value_linked_contact, temp_relation,
					(
						SELECT `fg_cm_relation`.`name` 
						FROM `fg_cm_relation` 
						WHERE `id` = temp_relation
					)
				) ON DUPLICATE KEY UPDATE `relation_id`=temp_relation AND `relation`=
					(
						SELECT `fg_cm_relation`.`name` 
						FROM `fg_cm_relation` 
						WHERE `id` = temp_relation
					);
			
			INSERT INTO `linkedcontact_implications` (`contact_id`, `linked_contact_id`, `relation_id`, `relation`) VALUES (contact_cursor_value_linked_contact, in_linked_contact_id, (SELECT `first_level_relation_id` FROM `fg_cm_relation_first_level` WHERE `relation_id` = temp_relation),
					(
						SELECT `fg_cm_relation`.`name` 
						FROM `fg_cm_relation_first_level` 
						JOIN `fg_cm_relation` 
						ON(`fg_cm_relation`.`id`=`fg_cm_relation_first_level`.`first_level_relation_id`) 
						WHERE `relation_id` = temp_relation
					)
				) ON DUPLICATE KEY UPDATE `relation_id`=(SELECT `first_level_relation_id` FROM `fg_cm_relation_first_level` WHERE `relation_id` = temp_relation) AND `relation`=
					(
						SELECT `fg_cm_relation`.`name` 
						FROM `fg_cm_relation_first_level` 
						JOIN `fg_cm_relation` 
						ON(`fg_cm_relation`.`id`=`fg_cm_relation_first_level`.`first_level_relation_id`) 
						WHERE `relation_id` = temp_relation
					);

	 ELSE 
             
            SELECT `second_level_relation_id` INTO temp_relation FROM `fg_cm_relation_second_level` 
                        WHERE  `relation_id` = in_relation_id AND `first_level_relation_id` = contact_cursor_value_relation;
			
			INSERT INTO `linkedcontact_implications` (`contact_id`, `linked_contact_id`, `relation_id`, `relation`) VALUES (in_contact_id, contact_cursor_value_linked_contact, temp_relation,
					(
						SELECT `fg_cm_relation`.`name` 
						FROM `fg_cm_relation` 
						WHERE `id` = temp_relation
					)
				) ON DUPLICATE KEY UPDATE `relation_id`=temp_relation AND `relation`=
					(
						SELECT `fg_cm_relation`.`name` 
						FROM `fg_cm_relation` 
						WHERE `id` = temp_relation
					);
				
			INSERT INTO `linkedcontact_implications` (`contact_id`, `linked_contact_id`, `relation_id`, `relation`) VALUES (contact_cursor_value_linked_contact, in_contact_id, (SELECT `first_level_relation_id` FROM `fg_cm_relation_first_level` WHERE `relation_id` = temp_relation),
					(
						SELECT `fg_cm_relation`.`name` 
						FROM `fg_cm_relation_first_level` 
						JOIN `fg_cm_relation` 
						ON(`fg_cm_relation`.`id`=`fg_cm_relation_first_level`.`first_level_relation_id`) 
						WHERE `relation_id` = temp_relation
					)
				) ON DUPLICATE KEY UPDATE `relation_id`=(SELECT `first_level_relation_id` FROM `fg_cm_relation_first_level` WHERE `relation_id` = temp_relation) AND `relation`=
					(
						SELECT `fg_cm_relation`.`name` 
						FROM `fg_cm_relation_first_level` 
						JOIN `fg_cm_relation` 
						ON(`fg_cm_relation`.`id`=`fg_cm_relation_first_level`.`first_level_relation_id`) 
						WHERE `relation_id` = temp_relation
					);
	END IF;		

END LOOP loop_contact;
IF (implication_count = 0) THEN
	CLOSE contact_cursor;
ELSE
	CLOSE implications_cursor;
END IF;


INSERT INTO `linkedcontact_implications` (`contact_id`, `linked_contact_id`, `relation_id`, `relation`) VALUES (in_contact_id, in_linked_contact_id, in_relation_id,
		(
			SELECT `fg_cm_relation`.`name` 
			FROM `fg_cm_relation` 
			WHERE `id` = in_relation_id
		)
	) ON DUPLICATE KEY UPDATE `relation_id`=in_relation_id AND `relation`=
					(
						SELECT `fg_cm_relation`.`name` 
						FROM `fg_cm_relation` 
						WHERE `id` = in_relation_id
					);           
            
INSERT INTO `linkedcontact_implications` (`contact_id`, `linked_contact_id`, `relation_id`, `relation`) VALUES (in_linked_contact_id, in_contact_id, linked_relation_id,
		(
			SELECT `fg_cm_relation`.`name` 
			FROM `fg_cm_relation` 
			WHERE `id` = linked_relation_id
		)
	) ON DUPLICATE KEY UPDATE `relation_id`=linked_relation_id AND `relation`=
					(
						SELECT `fg_cm_relation`.`name` 
						FROM `fg_cm_relation` 
						WHERE `id` = linked_relation_id
					);             
 
   
                                    
OPEN contact_cursor_one;
loop_contact_one: LOOP

FETCH contact_cursor_one INTO
    contact_cursor_value_contact,
    contact_cursor_value_linked_contact,
    contact_cursor_value_relation;
    
    IF record_not_found THEN
            SET record_not_found = 0;
                        LEAVE loop_contact_one;
    END IF;
	
	OPEN contact_cursor_two;
	loop_contact_two: LOOP
	
	FETCH contact_cursor_two INTO
		contact_cursor_value_contact_two,
		contact_cursor_value_linked_contact_two,
		contact_cursor_value_relation_two;
        
        IF record_not_found THEN
            SET record_not_found = 0;
                        LEAVE loop_contact_two;
        END IF;
       
        IF(contact_cursor_value_linked_contact != in_linked_contact_id) THEN 
            IF(contact_cursor_value_linked_contact_two != in_contact_id) THEN 
                IF(contact_cursor_value_linked_contact != contact_cursor_value_linked_contact_two) THEN 
            
            
                    SELECT `second_level_relation_id` INTO temp_relation FROM `fg_cm_relation_second_level` WHERE  `relation_id` = (
                        SELECT `second_level_relation_id` FROM `fg_cm_relation_second_level` WHERE  `relation_id` = (
                            SELECT `first_level_relation_id` FROM `fg_cm_relation_first_level` WHERE `relation_id` = contact_cursor_value_relation
                        ) AND `first_level_relation_id` = in_relation_id
                    ) AND `first_level_relation_id` = contact_cursor_value_relation_two;
                                     			
		    INSERT INTO `linkedcontact_implications` (`contact_id`, `linked_contact_id`, `relation_id`, `relation`) VALUES (contact_cursor_value_linked_contact, contact_cursor_value_linked_contact_two, temp_relation,
						(
							SELECT `fg_cm_relation`.`name` 
							FROM `fg_cm_relation` 
							WHERE `id` = temp_relation
						)
					) ON DUPLICATE KEY UPDATE `relation_id`=temp_relation AND `relation`=
			(
				SELECT `fg_cm_relation`.`name` 
				FROM `fg_cm_relation` 
				WHERE `id` = temp_relation
			);
                END IF;
            END IF;
        END IF;
    
	END LOOP loop_contact_two;
    CLOSE contact_cursor_two;	
	
		
END LOOP loop_contact_one;
CLOSE contact_cursor_one;
                                    
SELECT * FROM `linkedcontact_implications`;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `function_test` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `function_test`(temptable1 char(100),  param_club_id INTEGER, param_account_id INTEGER)
BEGIN  
DECLARE s_sponsor_text_out TEXT  CHARSET  utf8;

 SET @graphinfo = CONCAT( "SELECT invCnt.contact_id AS contact_id,inv.id AS invoiceid, inv.invoice_no AS invoice_no,
 inv.invoice_date AS invoice_date, inv.due_date AS due_date, inv.paid_date AS paid_date,

	(SELECT GROUP_CONCAT(d1 ORDER BY invMainCnt DESC SEPARATOR '|') AS rslt 
	FROM 
	(SELECT  invCnt1.invoice_id AS invIdVal, 
	invCnt1.is_main_contact AS invMainCnt, 
	(IF((invCnt1.company_name IS NULL OR invCnt1.company_name =''), 
	(CONCAT(invCnt1.lastname,' ',invCnt1.firstname)), (invCnt1.company_name))) AS d1 
	FROM fg_im_invoice_contacts invCnt1 WHERE 1) AS cntTable WHERE invIdVal=inv.id GROUP BY invoiceid) AS contact_name,


	fg_cm_contact.is_company,`", temptable1, "`.`1` AS atr1, `fg_cm_contact`.`created_at` AS created_on,
	 `fg_cm_contact`.`dispatch_type_dun`, `fg_cm_contact`.`dispatch_type_invoice`, `", temptable1, "`.`92` AS atr92,
	`", temptable1, "`.`50830` AS atr50830, `", temptable1, "`.`68` AS atr68, `", temptable1, "`.`4` AS atr4,
	`", temptable1, "`.`72` AS atr72,`", temptable1, "`.`515` AS atr515, `sf_guard_user`.`last_login`, 
	`fg_cm_contact`.`last_updated`, `fg_cm_contact`.`member_id`,`", temptable1, "`.`86` AS atr86,
	`", temptable1, "`.`76` AS atr76,`", temptable1, "`.`107` AS atr107,`", temptable1, "`.`3` AS atr3, 
	`", temptable1, "`.`5` AS atr5,`", temptable1, "`.`21` AS atr21,`", temptable1, "`.`1002` AS atr1002,



	(SELECT GROUP_CONCAT(DISTINCT d1 SEPARATOR '; ' ) as reslt  
	FROM 
	( SELECT ac.invoice_id as inv_id,  
	 CONCAT(ac.income_acc_name,' (',ac.income_acc_no,')') AS d1 
	 FROM fg_im_invoice_item ac 
	 LEFT JOIN fg_im_item it ON (ac.item_id=it.id) WHERE it.account_id IN (",param_account_id,") 
	 GROUP BY inv_id, it.account_id ORDER BY ac.income_acc_name ) AS acnttble WHERE inv_id=inv.id) AS accountno,

	

	(SELECT GROUP_CONCAT(d1 SEPARATOR '; ' ) as reslt FROM 
	( SELECT it.invoice_id as inv_id,  
	IF((invCnt.company_name<>NULL OR invCnt.company_name<>''),
	(invCnt.company_name), (CONCAT(invCnt.lastname,' ',invCnt.firstname))) as contName,
    CONCAT(it.item_name,' (',(IF((inv.is_household), CONCAT((CASE WHEN (invCnt.company_name<>NULL
	OR invCnt.company_name<>'') THEN invCnt.company_name ELSE 
	CONCAT(invCnt.lastname,' ',invCnt.firstname) END),', CHF '), ('CHF '))),SUM(ROUND((it.price*it.quantity), 2)),')') AS d1
	FROM fg_im_invoice_item it 
	LEFT JOIN fg_im_invoice_contacts invCnt ON (invCnt.contact_id=it.contact_id AND invCnt.invoice_id=it.invoice_id) 
	LEFT JOIN fg_im_invoice inv ON (it.invoice_id=inv.id) 
	WHERE it.item_id IN (328,372) GROUP BY inv_id,it.item_id,it.contact_id ORDER BY it.item_name, contName ) AS itmtble 
	WHERE inv_id=inv.id) AS itemprice, 


	(SELECT GROUP_CONCAT(d1 SEPARATOR '; ') as reslt FROM
	( SELECT rc.contact_id c_id , 1 as id_val ,
	CONCAT( (IF ((r.is_executive_board = 1), ('Executive Board'),
	(r.title))), ' (', GROUP_CONCAT( DISTINCT(rf.title) SEPARATOR ', ' ) , ')' ) AS d1 
	FROM fg_rm_role_contact rc 
	INNER JOIN fg_rm_category_role_function crf ON ( rc.fg_rm_crf_id = crf.id ) 
	INNER JOIN fg_rm_role r ON ( crf.role_id = r.id ) 
	LEFT JOIN fg_team_category tc 	ON ( r.team_category_id = tc.id ) 
	LEFT JOIN fg_rm_function rf ON ( rf.id = crf.function_id ) 
	WHERE r.club_id =", param_club_id, " AND r.id IN ( 2666,3067,3475,2751,3127,3071,2750,2752,3068,3070,2749,2754,3170,3476 ) 
	GROUP BY rc.contact_id , r.id ORDER BY r.sort_order,rf.sort_order) As rlecont 
	where c_id =", temptable1, ".contact_id GROUP BY c_id,id_val ) As gp2301, 


	(SELECT GROUP_CONCAT(d1 SEPARATOR '; ') as reslt FROM 
	( SELECT rc.contact_id c_id , 1 as id_val ,CONCAT( (IF ((r.is_executive_board = 1), ('Executive Board'),
	(r.title))), ' (', GROUP_CONCAT( DISTINCT(rf.title) SEPARATOR ', ' ) , ')' ) AS d1 
	FROM fg_rm_role_contact rc 
	INNER JOIN fg_rm_category_role_function crf ON ( rc.fg_rm_crf_id = crf.id ) 
	INNER JOIN fg_rm_role r ON ( crf.role_id = r.id ) 
	LEFT JOIN fg_team_category tc 	ON ( r.team_category_id = tc.id ) 
	LEFT JOIN fg_rm_function rf ON ( rf.id = crf.function_id ) 
	WHERE r.club_id =", param_club_id, " AND r.id IN ( 3623,2693,2621 ) GROUP BY rc.contact_id , r.id 
	ORDER BY r.sort_order,rf.sort_order) As rlecont where c_id =", temptable1, ".contact_id 
	GROUP BY c_id,id_val ) As gp2302, 


	(SELECT GROUP_CONCAT(d1 SEPARATOR '; ' ) as reslt 
	FROM ( SELECT rc.contact_id c_id , 1 as id_val ,GROUP_CONCAT(distinct(IF ((r.is_executive_board = 1), 
	('Executive Board'), ( r.title)) ) ) AS d1 FROM fg_rm_role_contact rc 
	INNER JOIN fg_rm_category_role_function crf ON ( rc.fg_rm_crf_id = crf.id ) 
	INNER JOIN fg_rm_role r ON ( crf.role_id = r.id ) 
	LEFT JOIN fg_team_category tc ON ( r.team_category_id = tc.id ) 
	WHERE r.club_id =", param_club_id, " AND r.id IN ( 2761,4062,4063,2760 ) GROUP BY rc.contact_id , r.id 
	ORDER BY tc.sort_order, r.sort_order ) As rletble where c_id =", temptable1, ".contact_id 
	GROUP BY c_id,id_val) As gp2381, 


	(SELECT GROUP_CONCAT(d1 SEPARATOR '; ' ) as reslt FROM 
	( SELECT rc.contact_id c_id , 1 as id_val ,GROUP_CONCAT(distinct(IF ((r.is_executive_board = 1),
	('Executive Board'), ( r.title)) ) ) AS d1 FROM fg_rm_role_contact rc 
	INNER JOIN fg_rm_category_role_function crf ON ( rc.fg_rm_crf_id = crf.id ) 
	INNER JOIN fg_rm_role r ON ( crf.role_id = r.id ) 
	LEFT JOIN fg_team_category tc ON ( r.team_category_id = tc.id ) 
	WHERE r.club_id =", param_club_id, " AND r.id IN ( 2757,3060,2756 ) GROUP BY rc.contact_id , r.id 
	ORDER BY tc.sort_order, r.sort_order ) As rletble where c_id =", temptable1, ".contact_id 
	GROUP BY c_id,id_val) As gp2380, 


	(SELECT GROUP_CONCAT(d1 SEPARATOR '; ') as reslt FROM 
	( SELECT rc.contact_id c_id , 1 as id_val ,CONCAT( (IF ((r.is_executive_board = 1), 
	('Executive Board'), (r.title))), ' (', GROUP_CONCAT( DISTINCT(rf.title) SEPARATOR ', ' ) , ')' ) AS d1
	FROM fg_rm_role_contact rc 
	INNER JOIN fg_rm_category_role_function crf ON ( rc.fg_rm_crf_id = crf.id ) 
	INNER JOIN fg_rm_role r ON ( crf.role_id = r.id ) 
	LEFT JOIN fg_team_category tc ON ( r.team_category_id = tc.id ) 
	LEFT JOIN fg_rm_function rf ON ( rf.id = crf.function_id ) WHERE r.club_id =", param_club_id, " AND r.id IN ( 3249,3584 )
	GROUP BY rc.contact_id , r.id ORDER BY r.sort_order,rf.sort_order) As rlecont 
	where c_id =", temptable1, ".contact_id GROUP BY c_id,id_val ) As gp2925, 


	(SELECT GROUP_CONCAT(d1 SEPARATOR '; ' ) as reslt FROM 
	( SELECT rc.contact_id c_id , 1 as id_val ,GROUP_CONCAT(distinct(IF ((r.is_executive_board = 1),
	('Executive Board'), ( r.title)) ) ) AS d1 FROM fg_rm_role_contact rc 
	INNER JOIN fg_rm_category_role_function crf ON ( rc.fg_rm_crf_id = crf.id ) 
	INNER JOIN fg_rm_role r ON ( crf.role_id = r.id ) 
	LEFT JOIN fg_team_category tc ON ( r.team_category_id = tc.id ) WHERE r.club_id =", param_club_id, " 
	AND r.id IN ( 2889 ) GROUP BY rc.contact_id , r.id 
	ORDER BY tc.sort_order, r.sort_order ) As rletble where c_id =", temptable1, ".contact_id 
	GROUP BY c_id,id_val) As gp2504, 

	inv.total_amount AS total_amount, inv.paid_amount AS paid_amount, inv.balance_amount AS balance_amount, 
	GROUP_CONCAT(DISTINCT invDun.id ORDER BY invDun.id DESC) AS invDunId, 
	GROUP_CONCAT(DISTINCT invDun.dun_no ORDER BY invDun.id DESC) AS invDunNo, 
	COUNT(DISTINCT invDun.id) AS DUNCOUNT 

	FROM (select * from fg_im_invoice where  club_id = ", param_club_id, " AND  accouting_id = 133 AND  status = 'PAID' )inv 
	INNER JOIN fg_im_invoice_contacts invCnt ON (inv.id = invCnt.invoice_id) 
	LEFT JOIN fg_im_financial_institution invFin ON (inv.financial_institution_id = invFin.id) 
	LEFT JOIN fg_im_invoice_dun invDun ON (inv.id = invDun.invoice_id) 
	LEFT JOIN fg_im_invoice_item invItm ON (inv.id = invItm.invoice_id) 
	LEFT JOIN fg_im_item itm ON (invItm.item_id = itm.id) 
	LEFT JOIN fg_cm_contact ON (invCnt.contact_id=fg_cm_contact.id) 
	INNER JOIN ", temptable1, " ON fg_cm_contact.id=", temptable1, ".contact_id 
	LEFT JOIN sf_guard_user ON sf_guard_user.contact_id=fg_cm_contact.id 
	WHERE 

  
    invItm.item_id IN (328,372) 
	AND itm.account_id IN (",param_account_id,") 

	GROUP BY invoiceid 
	ORDER BY invoice_date DESC, invCnt.is_main_contact DESC ;",'');
 
    PREPARE exe_query FROM @graphinfo;
	EXECUTE exe_query;
 
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `getAdslisting` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `getAdslisting`(IN type_id INT,IN visibility ENUM('ACTIVE','INACTIVE','SCHEDULED'))
BEGIN
DECLARE record_not_found INTEGER DEFAULT 0;
DECLARE qry TEXT DEFAULT "";
DECLARE ads_duration_id VARCHAR(255) DEFAULT ""; 
DECLARE ads_id TEXT DEFAULT "";


DECLARE ads_cursor CURSOR FOR
SELECT `fg_am_ads_duration`.`fg_am_ads_id` FROM `fg_am_ads_duration` INNER JOIN `fg_am_ads` ON `fg_am_ads`.`id` = `fg_am_ads_duration`.`fg_am_ads_id` WHERE `ad_type_id` = type_id AND `visibility`='SCHEDULED' GROUP BY `fg_am_ads_duration`.`fg_am_ads_id` DESC ;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;
OPEN ads_cursor;
addurations: LOOP
    FETCH ads_cursor INTO
    ads_duration_id;
    if record_not_found THEN
        LEAVE addurations;
    END IF;

SET ads_id = CONCAT(ads_id,"'",ads_duration_id,"',");

END LOOP addurations;
CLOSE ads_cursor;
SELECT ads_id;




END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `GetAllContactListByClubIdColHeadAttrId` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `GetAllContactListByClubIdColHeadAttrId`(clubid INT, cond TEXT, colList TEXT)
BEGIN

DECLARE record_not_found INTEGER DEFAULT 0;
DECLARE attribute_id VARCHAR(50) DEFAULT "";
DECLARE attribute_fieldname VARCHAR(50) DEFAULT "";
DECLARE attribute_fieldname_short VARCHAR(50) DEFAULT "";
DECLARE attribute_fieldname_fieldtype VARCHAR(50) DEFAULT "";
DECLARE select_query TEXT DEFAULT 'CREATE TEMPORARY TABLE `contact_entity_values_flat` AS SELECT `id` AS contact_id';
DECLARE select_query_temp_tbl TEXT DEFAULT 'SELECT ';

DECLARE attribute_cursor CURSOR FOR
SELECT a.attribute_id, b.fieldname, b.fieldname_short, b.fieldtype
FROM
`fg_cm_club_attribute` AS a
LEFT JOIN `fg_cm_attribute` AS b ON b.id=a.attribute_id
WHERE `club_id` = clubid;

DECLARE CONTINUE HANDLER FOR
NOT FOUND SET record_not_found = 1;

SET select_query_temp_tbl = CONCAT(select_query_temp_tbl, colList, ' FROM `contact_entity_values_flat` ');

OPEN attribute_cursor;
allAttributes: LOOP
    FETCH attribute_cursor INTO
    attribute_id,
    attribute_fieldname,
    attribute_fieldname_short,
    attribute_fieldname_fieldtype;
    if record_not_found THEN
        LEAVE allAttributes;
    END IF;

      SET select_query = CONCAT(select_query, ',');

    IF attribute_fieldname_fieldtype = 'text'  THEN
        SET select_query = CONCAT(select_query,
            '(select `value` from `fg_cm_attribute_value_text` where `fg_cm_attribute_value_text`.`contact_id` = `fg_cm_contact`.`id` AND `fg_cm_attribute_value_text`.`attribute_id` = "',
            attribute_id,
            '") AS "',
            attribute_id,'"'
        );
    END IF;

     IF attribute_fieldname_fieldtype = 'date'  THEN
        SET select_query = CONCAT(select_query,
            '(select `value` from `fg_cm_attribute_value_date` where `fg_cm_attribute_value_date`.`contact_id` = `fg_cm_contact`.`id` AND `fg_cm_attribute_value_date`.`attribute_id` = "',
            attribute_id,
            '") AS "',
            attribute_id,'"'
        );
    END IF;

     IF attribute_fieldname_fieldtype = 'int'  THEN
        SET select_query = CONCAT(select_query,
            '(select `value` from `fg_cm_attribute_value_int` where `fg_cm_attribute_value_int`.`contact_id` = `fg_cm_contact`.`id` AND `fg_cm_attribute_value_int`.`attribute_id` = "',
            attribute_id,
            '") AS "',
            attribute_id,'"'
        );
    END IF;



END LOOP allAttributes;
CLOSE attribute_cursor;



SET @select_query = CONCAT(select_query, ',
    `is_member` AS "is_member",
    `is_company` AS "is_company",
    `comp_def_contact` AS "comp_def_contact",
    `comp_def_contact_fun` AS "comp_def_contact_fun",
    `is_sponsor` AS "is_sponsor",
    `is_household_head` AS `is_household_head`,
    `is_draft` AS `is_draft`,
     `is_newsletter_subscriber` AS `is_newsletter_subscriber`,
    `is_deleted` AS `is_deleted`,
    `is_permanent_delete` AS `is_permanent_delete`,
    `is_seperate_invoice` AS `is_seperate_invoice`,
    `last_updated` AS "last_updated",
    `member_id` AS "member_id",
    (SELECT `last_login` FROM `sf_guard_user` WHERE `contact_id` = `fg_cm_contact`.`id`) AS "last_login"
    FROM `fg_cm_contact` WHERE `club_id`=', clubid, ' AND `is_permanent_delete` = "0"');





PREPARE exe_query FROM @select_query;
EXECUTE exe_query;
DEALLOCATE PREPARE exe_query;

SET @select_query_temp_tbl = CONCAT(select_query_temp_tbl, cond);
PREPARE exe_query_temp_tbl FROM @select_query_temp_tbl;
EXECUTE exe_query_temp_tbl;
DEALLOCATE PREPARE exe_query_temp_tbl;

DROP TEMPORARY TABLE IF EXISTS `contact_entity_values_flat`;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `GetAllContactListByClubIdColHeadAttrIdNoFile` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `GetAllContactListByClubIdColHeadAttrIdNoFile`(clubid INT, cond TEXT, colList TEXT)
BEGIN

DECLARE record_not_found INTEGER DEFAULT 0; 
DECLARE attribute_id VARCHAR(50) DEFAULT ""; 
DECLARE attribute_fieldname VARCHAR(50) DEFAULT ""; 
DECLARE attribute_fieldname_short VARCHAR(50) DEFAULT ""; 
DECLARE attribute_fieldname_fieldtype VARCHAR(50) DEFAULT ""; 
DECLARE select_query TEXT DEFAULT 'CREATE TEMPORARY TABLE `contact_entity_values_flat` AS SELECT `id` AS contact_id';
DECLARE select_query_temp_tbl TEXT DEFAULT 'SELECT ';

DECLARE attribute_cursor CURSOR FOR
SELECT a.attribute_id, b.fieldname, b.fieldname_short, b.fieldtype
FROM 
`fg_cm_club_attribute` AS a
LEFT JOIN `fg_cm_attribute` AS b ON b.id=a.attribute_id
WHERE `club_id` = clubid AND (b.input_type NOT IN ('imageupload','fileupload'));

DECLARE CONTINUE HANDLER FOR
NOT FOUND SET record_not_found = 1;

SET select_query_temp_tbl = CONCAT(select_query_temp_tbl, colList, ' FROM `contact_entity_values_flat` ');

OPEN attribute_cursor;
allAttributes: LOOP
    FETCH attribute_cursor INTO
    attribute_id,
    attribute_fieldname,
    attribute_fieldname_short,
    attribute_fieldname_fieldtype;
    if record_not_found THEN
        LEAVE allAttributes;
    END IF;
    
      SET select_query = CONCAT(select_query, ',');
    
    IF attribute_fieldname_fieldtype = 'text'  THEN
        SET select_query = CONCAT(select_query, 
            '(select `value` from `fg_cm_attribute_value_text` where `fg_cm_attribute_value_text`.`contact_id` = `fg_cm_contact`.`id` AND `fg_cm_attribute_value_text`.`attribute_id` = "',
            attribute_id,
            '") AS "',
            attribute_id,'"'
        );
    END IF;

     IF attribute_fieldname_fieldtype = 'date'  THEN
        SET select_query = CONCAT(select_query, 
            '(select `value` from `fg_cm_attribute_value_date` where `fg_cm_attribute_value_date`.`contact_id` = `fg_cm_contact`.`id` AND `fg_cm_attribute_value_date`.`attribute_id` = "',
            attribute_id,
            '") AS "',
            attribute_id,'"'
        );
    END IF;
    
     IF attribute_fieldname_fieldtype = 'int'  THEN
        SET select_query = CONCAT(select_query, 
            '(select `value` from `fg_cm_attribute_value_int` where `fg_cm_attribute_value_int`.`contact_id` = `fg_cm_contact`.`id` AND `fg_cm_attribute_value_int`.`attribute_id` = "',
            attribute_id,
            '") AS "',
            attribute_id,'"'
        );
    END IF;


    
END LOOP allAttributes;
CLOSE attribute_cursor;

SET @select_query = CONCAT(select_query, 'FROM `fg_cm_contact` WHERE `club_id`=', clubid);
DROP TEMPORARY TABLE IF EXISTS `contact_entity_values_flat`;
PREPARE exe_query FROM @select_query;
EXECUTE exe_query;
DEALLOCATE PREPARE exe_query;

SET @select_query_temp_tbl = CONCAT(select_query_temp_tbl, cond);
PREPARE exe_query_temp_tbl FROM @select_query_temp_tbl;
EXECUTE exe_query_temp_tbl;
DEALLOCATE PREPARE exe_query_temp_tbl;

DROP TEMPORARY TABLE IF EXISTS `contact_entity_values_flat`;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `getRolelisting` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `getRolelisting`(IN type_id INT,IN visibility ENUM('ACTIVE','INACTIVE','SCHEDULED'))
BEGIN
DECLARE category VARCHAR(255);
DECLARE category_catID INTEGER;
DECLARE category_title VARCHAR(255);
DECLARE category_function_assign VARCHAR(255);
DECLARE role VARCHAR(255);
DECLARE role_roleId INTEGER;
DECLARE role_title VARCHAR(255);
DECLARE function VARCHAR(255); 
DECLARE category_count INTEGER DEFAULT 0;
DECLARE role_count INTEGER DEFAULT 0;
DECLARE function_count INTEGER DEFAULT 0;
DECLARE record_not_found INTEGER DEFAULT 0;

	DECLARE category_cursor CURSOR FOR
	SELECT id as catID,title,function_assign FROM ` fg_rm_category` WHERE is_active=1 AND is_visible=1 AND is_team =0 AND is_workgroup = 0 AND club_id=38;
	OPEN category_cursor;
	loop_field: LOOP
		FETCH category_cursor INTO category_catID,category_title, category_function_assign;
		IF record_not_found THEN
			SET record_not_found = 0;
			LEAVE loop_field;
		END IF;

		
	END LOOP loop_field;
	CLOSE category_cursor;
       
	SELECT category_catID;	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `handleAttributes` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`fairgate`@`localhost` PROCEDURE `handleAttributes`(IN randomval TEXT, IN clubId INTEGER, IN clubType VARCHAR(15), IN corresAddress VARCHAR(15), IN invoiceAddress VARCHAR(15))
BEGIN
	DECLARE catId, catType, catTitle, CatSort, catIsDeleted, catIsActive, catClubId, fieldRandom VARCHAR(255) DEFAULT "";
	DECLARE catLang, catTitleLang, currentAddressType, currentAddressId VARCHAR(255) DEFAULT "";
	DECLARE addressInsertId, insertCatId, fieldId, fieldCatId, fieldNewOld, fieldSetId,field_Name,fieldnameShort,inputType,isCompany,isPersonal,predefinedValue,isSingleEdit,isVisibleSubfed,isEditableSubfed, isRequiredFedmemberSubfed, isVisibleClub, isEditableClub, isRequiredFedmemberClub, addresType, isVisibleContact, isSetPrivacyItself, privacyContact, isVisibleTeamadmin, isChangableContact,isChangableTeamadmin, isConfirmContact, isRequiredType, isConfirmTeamadmin, fieldSort, fieldIsDeleted, fieldIsActive, fieldClubId VARCHAR(255) DEFAULT "";
	DECLARE fieldLang, field_NameLang, field_NameShortLang VARCHAR(255) DEFAULT "";
	DECLARE deleteFieldIds, createFieldIds, updatedFieldIds MEDIUMTEXT DEFAULT "";
	DECLARE cur_send_date DATETIME;
	DECLARE test Text DEFAULT "";
	
	DECLARE newAddressType VARCHAR(255) DEFAULT "";
	DECLARE newCatId, addressId1, newFieldId, loopCount, requiredCount, fieldUid INTEGER DEFAULT 0;
	
	DECLARE isNewField, insertNewAddressRow BOOLEAN DEFAULT FALSE;	
	DECLARE record_not_found INTEGER DEFAULT 0;
-- 	Assign name for Mysql exception "General error: 1615 Prepared statement needs to be re-prepared"
	DECLARE mysql_prepare_exception CONDITION FOR 1615;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		ROLLBACK;

                DELETE FROM fg_temp_attributeset WHERE `random` = randomval;
                DELETE FROM fg_temp_attributeset_i18n WHERE `random` = randomval;
                DELETE FROM fg_temp_attribute WHERE `random` = randomval;
                DELETE FROM fg_temp_attribute_i18n WHERE `random` = randomval;
                DELETE FROM fg_temp_attribute_required WHERE `random` = randomval;

	END;

	SET autocommit=0;
	SET SESSION tmp_table_size = 67108864;
	SET SESSION max_heap_table_size = 67108864;
	START TRANSACTION;
		
-- 	WARNING :::: MAKE SURE THAT ID OF ALL SYTEM FIELDS ARE CORRECT WHEN MOVING TO ANOTHER DATABASE
-- 	CURRENTLY WE HAVE SET FOUR CRON INSTANCES
	BLOCK_CATEGORY: BEGIN	
		DECLARE categoryCursor CURSOR FOR  SELECT id, `type`,title,sort_order, isDeleted FROM `fg_temp_attributeset` WHERE `random` = randomval AND club_id = clubId ;		
		OPEN categoryCursor;
			categoryCursorLoop: LOOP
				FETCH categoryCursor INTO catId, catType, catTitle, CatSort, catIsDeleted;
				IF record_not_found THEN
					SET record_not_found = 0;
					LEAVE categoryCursorLoop;
				END IF;	
				-- IF CATEGORY IS DELETED, DELETE IT FROM TABLE
				IF (catIsDeleted = 1) THEN
					IF(catType = 'old') THEN
						DELETE FROM fg_cm_attributeset WHERE id = catId AND club_id = clubId;
					END IF;
				ELSE
					-- IF CATEGORY IS NOT DELETED, SAVE CATEGORY DATA IF ANY
					SET @newCatId = catId;
					IF(catTitle IS NOT NULL OR CatSort IS NOT NULL) THEN
						INSERT INTO fg_cm_attributeset SET id = IF(catType ='old', catId, ''), club_id = IF ( catType ='new', clubId, NULL), title = IF ( (catType ='old' OR (catType ='new' AND catTitle IS NOT NULL) ), catTitle, title), sort_order = IF ( (catType ='old' OR (catType ='new' AND CatSort IS NOT NULL) ), CatSort, sort_order) ON DUPLICATE KEY UPDATE id = LAST_INSERT_ID( id ), title = IF(VALUES(title) IS NOT NULL,VALUES(title),title) , sort_order = IF(VALUES(sort_order) IS NOT NULL, VALUES(sort_order),sort_order), club_id = IF(VALUES(club_id) IS NOT NULL, VALUES(club_id),club_id) ;						
						SELECT LAST_INSERT_ID() INTO @newCatId;
					END IF;
					-- save category i18n values --
					INSERT INTO fg_cm_attributeset_i18n (id, lang, title_lang ) SELECT @newCatId, tas.lang, IF(tas.title_lang IS NOT NULL, tas.title_lang, cas.title_lang) FROM `fg_temp_attributeset_i18n` as tas LEFT JOIN fg_cm_attributeset_i18n as cas ON tas.id= cas.id AND tas.lang = cas.lang WHERE tas.id = catId ON DUPLICATE KEY UPDATE title_lang = VALUES(title_lang);

					-- save category field values --
					-- LOOP FOR FIELDS IN CATEGORY FROM THE TEMPAORARY TABLE FOR FIELDS
					BLOCK_FIELD: BEGIN
						DECLARE fieldCursor CURSOR FOR  SELECT * FROM `fg_temp_attribute` WHERE `random` = randomval AND cat_id = catId AND club_id = clubId;
						OPEN fieldCursor;
							fieldCursorLoop: LOOP
								FETCH fieldCursor INTO fieldUid,fieldId, fieldCatId, fieldNewOld, fieldSetId,field_Name,fieldnameShort,inputType,isCompany,isPersonal,predefinedValue,isSingleEdit,isVisibleSubfed,isEditableSubfed, isRequiredFedmemberSubfed, isVisibleClub, isEditableClub, isRequiredFedmemberClub, addresType, isVisibleContact, isSetPrivacyItself, privacyContact, isVisibleTeamadmin, isChangableContact,isChangableTeamadmin, isConfirmContact, isRequiredType, isConfirmTeamadmin, fieldSort, fieldIsDeleted, fieldIsActive, fieldClubId, fieldRandom;
								IF record_not_found THEN
									SET test = CONCAT(test, 'record not found fieldId ',fieldId,' --');
									SET record_not_found = 0;
									LEAVE fieldCursorLoop;
								END IF;
								SET loopCount = 1;
								-- IF FIELD IS DELETED, DELETE IT FROM TABLE AND CORRESPODING COLUMN IN  MASTER CLUB/FEDERATION TABLES
								IF(fieldIsDeleted = 1) THEN
									SET deleteFieldIds = CONCAT(deleteFieldIds, IF(deleteFieldIds ='', '', ','), fieldId);
									-- IF ADDRESS FIELD, DELETE INVOICE FIELD ALSO, IF ANY
									IF(@newCatId = corresAddress) THEN
										SET fieldId  = (SELECT id FROM fg_cm_attribute WHERE address_id = fieldId AND club_id = clubId LIMIT 0,1);
										IF(fieldId IS NOT NULL) THEN
											SET deleteFieldIds = CONCAT(deleteFieldIds, IF(deleteFieldIds ='', '', ','), fieldId);
										END IF;
									END IF;
								ELSE
									IF(fieldNewOld = 'new') THEN
										SET insertCatId = @newCatId;
									ELSE
										-- IF CATEGORY IS CHNAGED, UPDATE FIELD WITH THAT CATEGORY
										IF(fieldSetId IS NOT NUll) THEN
											SET insertCatId = fieldSetId;
										ELSE
											SET insertCatId = @newCatId;
										END IF;										
									END IF;
									-- IF THE FIELD IS IN ADDRESS CATEGORY 
									-- -- SPECIAL HANDLING FOR ADDRESS ACTEGORY FIELDS
									-- -- -- IF THE USED FOR BOTH 
									-- -- -- -- BY DEFAULT THE FIELD WILL BE USED FOR 'BOTH'/(INVOICE + CORRESPONDANCE) 
									-- -- -- -- WE HAVE TO KEEP TWO FIELDS IN THIS CASE 
									-- -- -- -- -- ONE FOR INVOICE (addres_type= 'invoice' and address_id = {corresponding field in correspondance category})
									-- -- -- -- -- OTHER ONE IS FOR CORRESPONDANCE(addres_type= 'both' and address_id = NULL)
									-- -- -- -- -- IF EXISTING ADDRESS FIELD AND USEED FOR CHANGE FROM 'INVOICE' ->'BOTH', KEEP THAT FIELD FOR 'INVOICE'(addres_type= 'invoice' and address_id = {corresponding field in correspondance category}) 
									-- -- -- -- -- -- AND CREATE ANOTHER ONE FOR CORRESPONDANCE(addres_type= 'BOTH' and address_id = NULL)
									-- -- -- -- -- IF EXISTING ADDRESS FIELD AND USEED FOR CHANGE FROM 'CORRESPONDANCE' ->'BOTH', KEEP THAT FIELD FOR 'CORRESPONDANCE'(addres_type= 'both' and address_id = null) 
									-- -- -- -- -- -- AND CREATE ANOTHER ONE FOR INVOICE(addres_type= 'BOTH' and address_id = {corresponding field in correspondance category})
									
									-- -- -- IF USED FOR INVOICE
									-- -- -- -- ONLY ONE FIELD (addres_type= 'invoice' and address_id = NULL)
									-- -- -- -- IF EXISTING ADDRESS FIELD AND USEED FOR CHANGE FROM 'BOTH' ->INVOICE, KEEP 'INVOICE ' FIELD AND DELETE THE OTHER ONE
									-- -- -- -- IF EXISTING ADDRESS FIELD AND USEED FOR CHANGE FROM 'CORRESPONDANCE' ->INVOICE, JUST CHNAGE THE ADDRESS TYPE TO 'INVOICE'
									-- -- -- IF USED FOR CORRESPONDANCE
									-- -- -- -- ONLY ONE FIELD (addres_type= 'correspondance' and address_id = NULL)								
									
									IF(	insertCatId = corresAddress) THEN
										SET test = CONCAT(test, 'Address Category--');
										-- IF THE FIELD IS NEW OR AN EXISTING FIELD IN ANOTHER CATEGORY CHANGED TO ADDRESS CATEGORY
										IF((fieldNewOld = 'new') OR (fieldSetId IS NOT NUll AND fieldNewOld = 'old' AND fieldSetId = corresAddress AND @newCatId<>fieldSetId)) THEN
											-- IF THE ADDRESS TYPE IS NULL, SET IT TO BOTH(INVOICE+CORRESPONDANCE)
											IF(addresType IS NULL) THEN
												SET test = CONCAT(test, 'New field address type null --');
												SET addresType='both';
												SET currentAddressType = 'correspondance';
											ELSE
												SET test = CONCAT(test, 'New field address type not null --');
												IF(addresType='both') THEN
													SET currentAddressType = 'correspondance';
												ELSE
													SET currentAddressType = addresType;
												END IF;										
											END IF;
											SET test = CONCAT(test, 'currentAddressType =',currentAddressType,' --');
										ELSE
											SELECT addres_type INTO currentAddressType FROM fg_cm_attribute WHERE id = fieldId;
											SET test = CONCAT(test, 'Old field address type null --', 'currentAddressType =',currentAddressType,' --');
										END IF;
										
										IF(addresType IS NOT NULL) THEN
											BEGIN												
												SET test = CONCAT(test, 'Address type is not null -- addresType =',addresType,'--');												
												CASE addresType
													WHEN 'correspondance' THEN
													BEGIN														
														IF(fieldNewOld = 'old' AND currentAddressType = 'both') THEN
															SET test = CONCAT(test, 'Address type is correspondance --');
															SET currentAddressId  = (SELECT id FROM fg_cm_attribute WHERE address_id = fieldId AND club_id = clubId LIMIT 0,1);
															IF(currentAddressId IS NOT NULL) THEN
																SET deleteFieldIds = CONCAT(deleteFieldIds, IF(deleteFieldIds ='', '', ','), currentAddressId);
															END IF;
														END IF;
														SET insertCatId = corresAddress;
													END;
													WHEN 'invoice' THEN
													BEGIN
														IF(fieldNewOld = 'old' AND currentAddressType = 'both') THEN
															SET test = CONCAT(test, 'Address type is invoice --');
															SET deleteFieldIds = CONCAT(deleteFieldIds, IF(deleteFieldIds ='', '', ','), fieldId);
															SET currentAddressId  = (SELECT id FROM fg_cm_attribute WHERE address_id = fieldId AND club_id = clubId LIMIT 0,1);
															IF(currentAddressId IS NOT NULL) THEN
																SET fieldId = currentAddressId;	
															END IF;
														END IF;
														SET insertCatId = invoiceAddress;
													END;
													WHEN 'both' THEN
													BEGIN
														IF(currentAddressType ='invoice') THEN
															SET test = CONCAT(test, 'Address type is both  currentAddressType is invoice--');
															SET insertCatId = invoiceAddress;
															SET addresType = 'invoice';
															SET newAddressType = 'both';
															SET loopCount = 2;
														ELSE 
															IF(currentAddressType ='correspondance') THEN
																SET test = CONCAT(test, 'Address type is both  currentAddressType is correspondance--');
																SET newAddressType = 'invoice';
																SET loopCount = 2;
																SET insertCatId = corresAddress;
															END IF;
														END IF;
													END;
												END CASE;
												
											END;
										ELSE
											IF (fieldNewOld = 'old') THEN
												CASE currentAddressType
													WHEN 'both' THEN
													BEGIN
														SET loopCount = 2;
														SELECT id INTO currentAddressId FROM fg_cm_attribute WHERE address_id = fieldId LIMIT 0,1;
													END;
													WHEN 'invoice' THEN
													BEGIN
														SET insertCatId = invoiceAddress;
													END;
													ELSE
														BEGIN
															-- EMPTY --
														END;
												END CASE;
											END IF;
										END IF;
									ELSE
										IF(fieldNewOld = 'old') THEN
											SET addresType = 'both';
											SET currentAddressId  = (SELECT id FROM fg_cm_attribute WHERE address_id = fieldId LIMIT 0,1);
											IF(currentAddressId IS NOT NULL) THEN
												SET deleteFieldIds = CONCAT(deleteFieldIds, IF(deleteFieldIds ='', '', ','), currentAddressId);
											END IF;
										END IF;
									END IF;
									SET addressInsertId = fieldId;
									SET test = CONCAT(test, 'fieldId = ',fieldId,'--');
									-- IF ADDRESS TYPE IS 'BOTH' loopCount WILL BE 2, TO HANDLE TWO LINKED FIELD IN ADDRESS CATEGORY
									WHILE loopCount > 0 DO
										BEGIN
											SET test = CONCAT(test, 'addressInsertId = ',addressInsertId,'--');
											SET test = CONCAT(test, 'insertCatId = ',insertCatId,'--');
											SET test = CONCAT(test, 'clubId = ',clubId,'--');											
											INSERT INTO fg_cm_attribute 
											SET id = IF(fieldNewOld ='old', addressInsertId, ''), 
											attributeset_id = insertCatId, 
											fieldname = IF ( (fieldNewOld ='old' OR (fieldNewOld ='new' AND field_Name IS NOT NULL) ), field_Name, fieldname), 
											fieldname_short = IF ( (fieldNewOld ='old' OR (fieldNewOld ='new' AND fieldnameShort IS NOT NULL) ), fieldnameShort, fieldname_short), 
											input_type = IF ( (fieldNewOld ='old' OR (fieldNewOld ='new' AND inputType IS NOT NULL) ), inputType, input_type),
											is_company = IF ( (fieldNewOld ='old' OR (fieldNewOld ='new' AND isCompany IS NOT NULL) ), isCompany, is_company), 
											is_personal = IF ( (fieldNewOld ='old' OR (fieldNewOld ='new' AND isPersonal IS NOT NULL) ), isPersonal, is_personal),
											predefined_value = IF ( (fieldNewOld ='old' OR (fieldNewOld ='new' AND predefinedValue IS NOT NULL) ), predefinedValue, predefined_value),											
											is_single_edit = IF ( (fieldNewOld ='old' OR (fieldNewOld ='new' AND isSingleEdit IS NOT NULL) ), isSingleEdit, is_single_edit), 
											is_visible_subfed = IF ( (fieldNewOld ='old' OR (fieldNewOld ='new' AND isVisibleSubfed IS NOT NULL) ), isVisibleSubfed, is_visible_subfed), 
											is_editable_subfed = IF ( (fieldNewOld ='old' OR (fieldNewOld ='new' AND isEditableSubfed IS NOT NULL) ), isEditableSubfed, is_editable_subfed),
											is_required_fedmember_subfed = IF ( (fieldNewOld ='old' OR (fieldNewOld ='new' AND isRequiredFedmemberSubfed IS NOT NULL) ), isRequiredFedmemberSubfed, is_required_fedmember_subfed), 
											is_visible_club = IF ( (fieldNewOld ='old' OR (fieldNewOld ='new' AND isVisibleClub IS NOT NULL) ), isVisibleClub, is_visible_club),
											is_editable_club = IF ( (fieldNewOld ='old' OR (fieldNewOld ='new' AND isEditableClub IS NOT NULL) ), isEditableClub, is_editable_club), 
											is_required_fedmember_club = IF ( (fieldNewOld ='old' OR (fieldNewOld ='new' AND isRequiredFedmemberClub IS NOT NULL) ), isRequiredFedmemberClub, is_required_fedmember_club), 
											addres_type = IF ( (fieldNewOld ='old' OR (fieldNewOld ='new' AND addresType IS NOT NULL) ), addresType, addres_type), 
											address_id = NULL, 
											is_active = IF ( (fieldNewOld ='old' OR (fieldNewOld ='new' AND fieldIsActive IS NOT NULL) ), fieldIsActive, is_active),
											club_id = IF (((fieldNewOld ='new') OR (addressInsertId = '') ), clubId, NULL)
											ON DUPLICATE KEY UPDATE 
											id = LAST_INSERT_ID( id ),
											attributeset_id = IF(VALUES(attributeset_id)IS NOT NULL, VALUES(attributeset_id), attributeset_id),
											fieldname = IF(VALUES(fieldname)IS NOT NULL, VALUES(fieldname), fieldname),
											fieldname_short = IF(VALUES(fieldname_short)IS NOT NULL, VALUES(fieldname_short), fieldname_short),
											input_type = IF(VALUES(input_type)IS NOT NULL, VALUES(input_type), input_type),
											is_company = IF(VALUES(is_company)IS NOT NULL, VALUES(is_company), is_company),
											is_personal = IF(VALUES(is_personal)IS NOT NULL, VALUES(is_personal), is_personal),
											predefined_value = IF(VALUES(predefined_value)IS NOT NULL, VALUES(predefined_value), predefined_value),
											is_single_edit = IF(VALUES(is_single_edit)IS NOT NULL, VALUES(is_single_edit), is_single_edit),
											is_visible_subfed = IF(VALUES(is_visible_subfed)IS NOT NULL, VALUES(is_visible_subfed), is_visible_subfed),
											is_editable_subfed = IF(VALUES(is_editable_subfed)IS NOT NULL, VALUES(is_editable_subfed), is_editable_subfed),
											is_required_fedmember_subfed = IF(VALUES(is_required_fedmember_subfed)IS NOT NULL, VALUES(is_required_fedmember_subfed), is_required_fedmember_subfed),
											is_visible_club = IF(VALUES(is_visible_club)IS NOT NULL, VALUES(is_visible_club), is_visible_club),
											is_editable_club = IF(VALUES(is_editable_club)IS NOT NULL, VALUES(is_editable_club), is_editable_club),
											is_required_fedmember_club = IF(VALUES(is_required_fedmember_club)IS NOT NULL, VALUES(is_required_fedmember_club), is_required_fedmember_club),
											addres_type = IF(VALUES(addres_type)IS NOT NULL, VALUES(addres_type), addres_type),
											address_id = IF(VALUES(addres_type)IS NOT NULL, VALUES(address_id), address_id),
											is_active = IF(VALUES(is_active)IS NOT NULL, VALUES(is_active), is_active),
											club_id = IF(VALUES(club_id)IS NOT NULL, VALUES(club_id), club_id);

											SELECT LAST_INSERT_ID() INTO @newFieldId;
											/* update fed profile status*/											
											IF(isVisibleSubfed IS NOT NULL OR isEditableSubfed IS NOT NULL OR isVisibleClub IS NOT NULL OR isEditableClub IS NOT NULL) THEN
												UPDATE fg_cm_attribute SET `fed_profile_status` = IF( (`is_visible_subfed` =1 OR `is_editable_subfed` = 1 OR `is_visible_club` = 1 OR `is_editable_club` =1), 1,0 ) WHERE id = @newFieldId AND club_id = clubId;
											END IF;
											
											IF(fieldNewOld = 'new') THEN
												SET isNewField = true;
												SET createFieldIds = CONCAT(createFieldIds, IF(createFieldIds ='', '', ','), @newFieldId);
											END IF;
											IF(fieldNewOld = 'old' AND inputType IS NOT NULL AND loopCount = 1 AND insertNewAddressRow = FALSE) THEN
												SET updatedFieldIds = CONCAT(updatedFieldIds, IF(updatedFieldIds ='', '', ','), @newFieldId);
											END IF;
											-- save field i18n values --
											IF (insertNewAddressRow = FALSE ) THEN
												SET test = CONCAT(test, 'insertNewAddressRow = FALSE--');
												SET test = CONCAT(test, 'newFieldId = ',@newFieldId,'--');
												INSERT INTO fg_cm_attribute_i18n (id, lang, fieldname_lang, fieldname_short_lang ) SELECT @newFieldId, ta.lang, IF(ta.fieldname_lang IS NOT NULL, ta.fieldname_lang, ca.fieldname_lang),IF(ta.fieldname_short_lang IS NOT NULL, ta.fieldname_short_lang, ca.fieldname_short_lang) FROM `fg_temp_attribute_i18n` as ta LEFT JOIN fg_cm_attribute_i18n as ca ON ta.id= ca.id AND ta.lang = ca.lang WHERE ta.id = fieldId ON DUPLICATE KEY UPDATE fieldname_lang = VALUES(fieldname_lang),fieldname_short_lang = VALUES(fieldname_short_lang); 										
												-- save required fields --
												SET requiredCount= 0;
												IF(fieldNewOld ='old') THEN
													SELECT count(membership_id) INTO requiredCount FROM fg_temp_attribute_required WHERE attribute_id = fieldId AND club_id = clubId;
													IF(requiredCount IS NOT NULL AND requiredCount>0) THEN
														DELETE FROM fg_cm_attribute_required WHERE attribute_id = @newFieldId AND club_id = clubId;
													END IF;
												END IF;
												INSERT INTO fg_cm_attribute_required(attribute_id, club_id, membership_id) SELECT @newFieldId, clubId, tr.membership_id FROM fg_temp_attribute_required AS tr WHERE tr.attribute_id = fieldId ON DUPLICATE KEY UPDATE membership_id = VALUES(membership_id);
											ELSE
												SET test = CONCAT(test, 'insertNewAddressRow = TRUE--');
												SET createFieldIds = CONCAT(createFieldIds, IF(createFieldIds ='', '', ','), @newFieldId);
												INSERT INTO fg_cm_attribute_i18n (id, lang, fieldname_lang, fieldname_short_lang ) SELECT @newFieldId, ta.lang, ta.fieldname_lang, ta.fieldname_short_lang FROM `fg_cm_attribute_i18n` AS ta WHERE ta.id = @addressId1;								
												-- save required fields --
												INSERT INTO fg_cm_attribute_required(attribute_id, club_id, membership_id) SELECT @newFieldId, tr.club_id, tr.membership_id FROM fg_cm_attribute_required AS tr WHERE tr.attribute_id = @addressId1 AND tr.club_id = clubId;
											END IF;
											
		-- isVisibleContact, isSetPrivacyItself, privacyContact, isVisibleTeamadmin, isChangableContact,isChangableTeamadmin, isConfirmContact, isRequiredType, isConfirmTeamadmin, fieldSort, fieldIsDeleted, fieldIsActive, fieldClubId									
											-- save contact profile - club attributes --
											INSERT INTO fg_cm_club_attribute 
											SET attribute_id = @newFieldId,
											club_id = clubId,
											is_visible_contact = IF ( (fieldNewOld ='old' OR (fieldNewOld ='new' AND isVisibleContact IS NOT NULL) ), isVisibleContact, is_visible_contact) , 
											is_set_privacy_itself = IF ( (fieldNewOld ='old' OR (fieldNewOld ='new' AND isSetPrivacyItself IS NOT NULL) ), isSetPrivacyItself, is_set_privacy_itself), 
											privacy_contact = IF ( (fieldNewOld ='old' OR (fieldNewOld ='new' AND privacyContact IS NOT NULL) ), privacyContact, privacy_contact), 
											is_visible_teamadmin = IF ( (fieldNewOld ='old' OR (fieldNewOld ='new' AND isVisibleTeamadmin IS NOT NULL) ), isVisibleTeamadmin, is_visible_teamadmin), 
											is_changable_contact = IF ( (fieldNewOld ='old' OR (fieldNewOld ='new' AND isChangableContact IS NOT NULL) ), isChangableContact, is_changable_contact),
											is_changable_teamadmin = IF ( (fieldNewOld ='old' OR (fieldNewOld ='new' AND isChangableTeamadmin IS NOT NULL) ), isChangableTeamadmin, is_changable_teamadmin), 
											is_confirm_contact = IF ( (fieldNewOld ='old' OR (fieldNewOld ='new' AND isConfirmContact IS NOT NULL) ), isConfirmContact, is_confirm_contact),
											is_required_type = IF ( (fieldNewOld ='old' OR (fieldNewOld ='new' AND isRequiredType IS NOT NULL) ), isRequiredType, is_required_type),
											is_confirm_teamadmin = IF ( (fieldNewOld ='old' OR (fieldNewOld ='new' AND isConfirmTeamadmin IS NOT NULL) ), isConfirmTeamadmin, is_confirm_teamadmin), 
											sort_order = IF ( (fieldNewOld ='old' OR (fieldNewOld ='new' AND fieldSort IS NOT NULL) ), fieldSort, sort_order)
											ON DUPLICATE KEY UPDATE 
											is_visible_contact = IF(VALUES(is_visible_contact)IS NOT NULL, VALUES(is_visible_contact), is_visible_contact),
											is_set_privacy_itself = IF(VALUES(is_set_privacy_itself)IS NOT NULL, VALUES(is_set_privacy_itself), is_set_privacy_itself),
											privacy_contact =IF(VALUES(privacy_contact)IS NOT NULL, VALUES(privacy_contact), privacy_contact),
											is_visible_teamadmin = IF(VALUES(is_visible_teamadmin)IS NOT NULL, VALUES(is_visible_teamadmin), is_visible_teamadmin),
											is_changable_contact = IF(VALUES(is_changable_contact)IS NOT NULL, VALUES(is_changable_contact), is_changable_contact),
											is_changable_teamadmin = IF(VALUES(is_changable_teamadmin)IS NOT NULL, VALUES(is_changable_teamadmin), is_changable_teamadmin),
											is_confirm_contact = IF(VALUES(is_confirm_contact)IS NOT NULL, VALUES(is_confirm_contact), is_confirm_contact),
											is_required_type = IF(VALUES(is_required_type)IS NOT NULL, VALUES(is_required_type), is_required_type),
											is_confirm_teamadmin = IF(VALUES(is_confirm_teamadmin)IS NOT NULL, VALUES(is_confirm_teamadmin), is_confirm_teamadmin),
											sort_order = IF(VALUES(sort_order)IS NOT NULL, VALUES(sort_order), sort_order);	
											/* update profile status*/
											IF(isSetPrivacyItself IS NOT NULL OR privacyContact IS NOT NULL OR isVisibleContact IS NOT NULL OR  isVisibleTeamadmin IS NOT NULL OR isChangableContact IS NOT NULL OR isChangableTeamadmin IS NOT NULL) THEN
												UPDATE fg_cm_club_attribute SET `profile_status` = IF( (`is_set_privacy_itself` =1 AND `privacy_contact` ='community' AND `is_visible_contact` = 1 AND `is_visible_teamadmin` = 1 AND `is_changable_contact` =1 AND `is_changable_teamadmin` = 1), 1,0 ) WHERE attribute_id = @newFieldId AND club_id = clubId;
											END IF;
											-- IF A NEW FIELD IS CREATED for afederation/sub federation, UPDATE entries in fg_cm_club_attrribute for sub level clubs
											IF(isNewField = TRUE AND (clubType ='federation' OR clubType ='sub_federation')) THEN
												INSERT INTO fg_cm_club_attribute(attribute_id, sort_order, club_id) SELECT @newFieldId, 999, hi.id as ids FROM (SELECT  sublevelClubs(id) AS id, @level AS level FROM (SELECT  @start_with := clubId,@id := @start_with,@level := 0) vars, fg_club WHERE @id IS NOT NULL) ho JOIN fg_club hi ON hi.id = ho.id;
											END IF;
											SET test = CONCAT(test, 'loopCount= ',loopCount,'--');
											-- IF ADDRESS CATEGORY FIELD, HANLE TWO FIELDS IF ANY
											IF(	insertCatId = corresAddress OR insertCatId = invoiceAddress) THEN
												IF(addresType IS NOT NULL) THEN
													IF(loopCount = 2) THEN
														IF(fieldNewOld = 'new') THEN
															SET createFieldIds = CONCAT(createFieldIds, IF(createFieldIds ='', '', ','), @newFieldId);	
														END IF;
														SET insertNewAddressRow = TRUE;
														SET test = CONCAT(test, 'insertNewAddressRow= ',insertNewAddressRow,'--');
														SET test = CONCAT(test, 'New Address type= ',newAddressType,'--');
														SET @addressId1 = @newFieldId;
														SET addresType =  newAddressType;
														IF( addresType ='both' OR addresType ='correspondance' ) THEN
															SET insertCatId = corresAddress;
														ELSE
															SET insertCatId = invoiceAddress;
														END IF;													
														SET addressInsertId = '';
														SET test = CONCAT(test, 'insertCatId= ',insertCatId,'--');
														SET test = CONCAT(test, 'addresType= ',addresType,'--');
														IF(fieldNewOld ='old') THEN
															SELECT at.fieldname, at.fieldname_short, at.input_type, at.is_company, at.is_personal, at.predefined_value, at.is_single_edit, at.is_visible_subfed, at.is_editable_subfed, at.is_required_fedmember_subfed, at.is_visible_club,is_editable_club, at.is_required_fedmember_club, at.is_active,
															atc.is_visible_contact, atc.is_set_privacy_itself, atc.privacy_contact, atc.is_visible_teamadmin, atc.is_changable_contact, atc.is_changable_teamadmin, atc.is_confirm_contact, atc.is_required_type, atc.is_confirm_teamadmin, atc.sort_order  
															INTO field_Name, fieldnameShort, inputType, isCompany, isPersonal, predefinedValue, isSingleEdit, isVisibleSubfed, isEditableSubfed, isRequiredFedmemberSubfed, isVisibleClub, isEditableClub, isRequiredFedmemberClub, fieldIsActive, isVisibleContact, isSetPrivacyItself, privacyContact, isVisibleTeamadmin, isChangableContact, isChangableTeamadmin, isConfirmContact, isRequiredType, isConfirmTeamadmin, fieldSort FROM fg_cm_attribute AS at INNER JOIN fg_cm_club_attribute AS atc ON at.id = atc.attribute_id WHERE at.id=@newFieldId AND atc.club_id =clubId;
														END IF;
													ELSE
														-- IF A NEW FIELD IS INSERTED IN ADDRESS CATEGORY, THEN UPDATE address_id column in fg_cm_attribute
														IF(addressInsertId ='') THEN
															CASE newAddressType
																WHEN 'both' THEN
																BEGIN
																	UPDATE fg_cm_attribute SET address_id =@newFieldId WHERE id = @addressId1;
																END;
																WHEN 'invoice' THEN
																BEGIN
																	UPDATE fg_cm_attribute SET address_id =@addressId1 WHERE id = @newFieldId;
																END;
																ELSE
																BEGIN
																	-- EMPTY --
																END;
															END CASE;
															SET insertNewAddressRow = FALSE;
														END IF;
													END IF;		
												ELSE
													IF (fieldNewOld = 'old' AND currentAddressType = 'both') THEN
														IF(loopCount = 2) THEN
															IF(inputType IS NOT NULL) THEN
																SET updatedFieldIds = CONCAT(updatedFieldIds, IF(updatedFieldIds ='', '', ','), @newFieldId);
															END IF;
															SET addressInsertId = currentAddressId;
															SET insertCatId = invoiceAddress;
														END IF;
													END IF;
													
												END IF;
											END IF;
											SET loopCount = loopCount - 1;
											SET test = CONCAT(test, '@newFieldId= ',@newFieldId,'-- while loop ends');
										END;
									END WHILE;
								END IF;
								SET addresType = NULL;
								SET fieldSetId = NULL;
								SET currentAddressType = NULL;
								SET @addressId1 = NULL;
								SET currentAddressId = NULL;
								SET isNewField = FALSE;
							END LOOP fieldCursorLoop;
						CLOSE fieldCursor;
					END BLOCK_FIELD;
				END IF;
			END LOOP categoryCursorLoop;
		CLOSE categoryCursor;
	END BLOCK_CATEGORY;
	-- DELETE FIELD FROM fg_cm_attribute + master club/fderation
	IF(deleteFieldIds <> '')THEN
		SET test = CONCAT(test, 'deleteFieldIds= ',deleteFieldIds,'--');
		call alterMasterClubTableFields(deleteFieldIds, clubId, clubType, 'delete');
	END IF;
	-- CREATE FIELD IN master club/fderation
	IF(createFieldIds <> '')THEN
		SET test = CONCAT(test, 'createFieldIds= ',createFieldIds,'--');
		call alterMasterClubTableFields(createFieldIds, clubId, clubType, 'create');
		SET test = CONCAT(test, "call alterMasterClubTableFields(",createFieldIds,',',clubId,',',clubType,',', "'create');");
	END IF;	
	-- UPDATE FIELD IN master club/fderation IF INPUT_TYPE CHANGED
	IF(updatedFieldIds <> '')THEN
		SET test = CONCAT(test, 'updatedFieldIds= ',updatedFieldIds,'--');
		SET test = CONCAT(test, "call alterMasterClubTableFields(",updatedFieldIds,',',clubId,',',clubType,',', "'update');");
		call alterMasterClubTableFields(updatedFieldIds, clubId, clubType, 'update');
	END IF;	
        
        DELETE FROM fg_temp_attributeset WHERE `random` = randomval;
        DELETE FROM fg_temp_attributeset_i18n WHERE `random` = randomval;
        DELETE FROM fg_temp_attribute WHERE `random` = randomval;
        DELETE FROM fg_temp_attribute_i18n WHERE `random` = randomval;
        DELETE FROM fg_temp_attribute_required WHERE `random` = randomval;        	
	
    COMMIT;
	
	-- SELECT test;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `importContacts` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`fairgate`@`%` PROCEDURE `importContacts`(IN `tableName1` TEXT, IN `tableName2` TEXT, IN `p_club_id` INT, IN `changed_by` INT, IN `main_contact` TEXT, IN `own_table` TEXT)
BEGIN
    DECLARE record_not_found, attr_set_id INTEGER DEFAULT 0;
    DECLARE attr_set_id_inv INTEGER DEFAULT 137;
    DECLARE invcoun INTEGER DEFAULT 0;
    DECLARE same_as INTEGER DEFAULT 1;
    DECLARE has_MC TEXT DEFAULT '0';
    DECLARE is_company text;
    DECLARE dynamicSQL TEXT;
    DECLARE exec_qry TEXT;
    DECLARE exec_qry1 TEXT;
    DECLARE fieldname TEXT;
    DECLARE attributetable TEXT;
    DECLARE prevLoopTable TEXT DEFAULT '';
    DECLARE rowc INTEGER;
    DECLARE colfg TEXT;
    DECLARE coltitle TEXT;
    DECLARE attribquery TEXT DEFAULT '';
    DECLARE queryColumns TEXT DEFAULT '';
    DECLARE queryValues TEXT DEFAULT '';
    DECLARE logquery TEXT DEFAULT '';
    DECLARE clubId TEXT DEFAULT '';
    DECLARE email_value TEXT DEFAULT '';
    DECLARE fgCmContactColumns TEXT DEFAULT '';
    DECLARE fgCmContactValues TEXT DEFAULT '';
    DECLARE my_var TEXT DEFAULT '';
    DECLARE same_query TEXT DEFAULT '';
    DECLARE tableName TEXT DEFAULT '';
    DECLARE joindate_query TEXT DEFAULT '';
    DECLARE impTable TEXT;
    DECLARE defSubscri INTEGER DEFAULT 1;
    DECLARE rowid_joindate INTEGER;
    DECLARE lev_col TEXT DEFAULT NULL;
    DECLARE mem_id TEXT DEFAULT '';
    DECLARE is_mem TEXT DEFAULT '';
    DECLARE is_fed_mem TEXT DEFAULT '';
    DECLARE mem_leaving TEXT DEFAULT 'NULL';
    
    DECLARE CONTINUE HANDLER FOR
    NOT FOUND SET record_not_found = 1;
    DECLARE EXIT HANDLER FOR SQLEXCEPTION 
    BEGIN
        ROLLBACK;
    END;

	START TRANSACTION;
   
    DROP TABLE IF EXISTS `dynamic_Columncursor`;
    SET @dynamicSQL=CONCAT('CREATE TEMPORARY TABLE dynamic_Columncursor as SELECT * FROM ',tableName2,' WHERE imp_table="',tableName1,'" ORDER BY fg_table,if(col_fg="is_subscriber",1,2) ASC' );
    PREPARE exec_qry FROM @dynamicSQL;
    EXECUTE exec_qry ;
    DEALLOCATE PREPARE exec_qry;

	BLOCK_CATEGORY: BEGIN
		
	DECLARE dynamiccolumnCursor CURSOR FOR  SELECT * FROM `dynamic_Columncursor`;
	DECLARE fgCmContactColumnCursor CURSOR FOR  SELECT * FROM `dynamic_Columncursor` WHERE TRIM(`fg_table`)='fg_cm_contact';

	IF main_contact='single' THEN
		SET is_company='0';
	ELSE
		SET is_company='1';
		IF main_contact='companyWithMain' THEN
			SET has_MC='1';
		END IF;
	END IF;
        SET lev_col = (SELECT col_imp FROM import_maping WHERE imp_table=tableName1 AND col_fg='leaving_date' LIMIT 1);
        IF(lev_col IS NULL OR lev_col ='') THEN
            SET mem_id='membership_id';
            SET is_mem='IF(membership_id IS NULL OR membership_id = "" ,0,1) AS is_member';
        ELSE
            SET mem_id=CONCAT('IF(`',lev_col,'` IS NULL OR `',lev_col,'`="" OR LENGTH(`',lev_col,'`)=0,membership_id,NULL)');
            SET is_mem=CONCAT('IF((`',lev_col,'` IS NOT NULL AND `',lev_col,'`!="" AND LENGTH(`',lev_col,'`)>0) AND (membership_id IS NOT NULL AND membership_id != "" ),0,1) AS is_member');
        END IF;
	-- build query for fg_cm_contact table 
	SET fgCmContactColumns='INSERT INTO fg_cm_contact (`club_id`,`member_id`,`is_company`,`is_draft`,`is_deleted`,`has_main_contact`,`created_at`, `import_id`,`import_table`,`membership_cat_id`,`is_member`';
	SET fgCmContactValues=CONCAT(' (SELECT ',p_club_id,',0,',is_company,',0,0,',has_MC,',NOW(),`row_id`,"',tableName1,'",',mem_id,',',is_mem);
	OPEN fgCmContactColumnCursor;
		fgCmContactColumnCursor: LOOP
			FETCH fgCmContactColumnCursor INTO rowc,fieldname,colFg,attributetable,impTable,colTitle;
			IF record_not_found THEN
					SET record_not_found = 0;
					LEAVE fgCmContactColumnCursor;
			END IF;			

                        CASE colFg
                            WHEN 'joining_date' THEN
                                BEGIN
                                    SET fgCmContactColumns=CONCAT(fgCmContactColumns,',`joining_date`');
                                    SET fgCmContactValues=CONCAT(fgCmContactValues,",IF(membership_id IS NULL OR membership_id = '','0000-00-00',IF(`",fieldname,"` = '0000-00-00',NOW(),",fieldname,")) AS joining_date");
                                END;  
                            WHEN 'leaving_date' THEN
                                BEGIN
                                    SET fgCmContactColumns=CONCAT(fgCmContactColumns,',`leaving_date`');
                                    SET fgCmContactValues=CONCAT(fgCmContactValues,",IF(membership_id IS NULL OR membership_id = '','NULL',IF(`",fieldname,"` = '0000-00-00',NULL,",fieldname,")) AS leaving_date");
                                END;
                            ELSE
                                BEGIN
                                    SET fgCmContactColumns=CONCAT(fgCmContactColumns,',`',colFg,'`');
                                    SET fgCmContactValues=CONCAT(fgCmContactValues,",",fieldname);
                                END;
                        END CASE;


		END LOOP fgCmContactColumnCursor;
    CLOSE fgCmContactColumnCursor;
-- SET my_var=CONCAT(my_var,fgCmContactColumns,')',fgCmContactValues,' FROM ',tableName1,' WHERE  is_removed=0)');
-- SELECT my_var;
	SET @dynamicSQL=CONCAT(fgCmContactColumns,')',fgCmContactValues,' FROM ',tableName1,' WHERE  is_removed=0)');
	 PREPARE exec_qry FROM @dynamicSQL;
	 EXECUTE exec_qry ;
	 DEALLOCATE PREPARE exec_qry;
	SET @logquery= CONCAT("INSERT INTO fg_cm_change_log ( `date`, `changed_by`, `confirmed_by`,  `contact_id`,`kind`, `field`, `value_after`,`attribute_id`)(SELECT NOW(), '",changed_by,"','",changed_by,"', C.id, 'contact status','','active','' FROM ",tableName1," T LEFT JOIN fg_cm_contact C ON C.import_id=T.row_id WHERE C.import_table='",tableName1,"')");
	PREPARE exec_qry FROM @logquery;
	EXECUTE exec_qry ;
	DEALLOCATE PREPARE exec_qry;

	 SET my_var='inn==';
	-- mapping table iteration
	OPEN dynamiccolumnCursor;
		dynamiccolumnCursorLoop: LOOP
			FETCH dynamiccolumnCursor INTO rowc,fieldname,colFg,attributetable,impTable,colTitle;
			IF record_not_found THEN
					SET record_not_found = 0;
					LEAVE dynamiccolumnCursorLoop;
			END IF; 
SET my_var=CONCAT(my_var,'++');
			-- skip fg_cm_contact fields since its updated			
			IF(attributetable='fg_cm_contact') THEN
				ITERATE dynamiccolumnCursorLoop;
			END IF;
			-- add log entry for updated fields
			IF(colFg <>'is_subscriber' AND fieldname<>'') THEN
			SET @logquery= CONCAT("INSERT INTO fg_cm_change_log ( `date`, `changed_by`, `confirmed_by`,  `contact_id`,`kind`, `field`, `value_after`,`attribute_id`)(SELECT NOW(), '",changed_by,"','",changed_by,"', C.id, 'data','",colTitle,"',T.",fieldname,",cast('",colFg,"'as UNSIGNED) FROM ",tableName1," T LEFT JOIN fg_cm_contact C ON C.import_id=T.row_id WHERE C.import_table='",tableName1,"' AND T.",fieldname," IS NOT NULL AND T.",fieldname," !='' )");
				 PREPARE exec_qry FROM @logquery;
				 EXECUTE exec_qry ;
				 DEALLOCATE PREPARE exec_qry; 
			END IF;
			-- Build query so that each table updated only once by keeping table name of previous iteration.
			IF(prevLoopTable <> attributetable) THEN 
			BEGIN
				-- if not first iteration
				IF (queryColumns <>'') THEN
-- SET my_var =CONCAT(my_var,'---',queryColumns,') (SELECT C.id',queryValues,' FROM ',tableName1,' T LEFT JOIN fg_cm_contact C ON C.import_id=T.row_id WHERE C.import_table="',tableName1,'" AND T.is_removed="0") ');
					SET @attribQuery= CONCAT(queryColumns,') (SELECT C.id',queryValues,' FROM ',tableName1,' T LEFT JOIN fg_cm_contact C ON C.import_id=T.row_id WHERE C.import_table="',tableName1,'" AND T.is_removed="0") ');
					SET my_var=CONCAT(my_var,@attribQuery,'==');
				 PREPARE exec_qry FROM @attribQuery;
				 EXECUTE exec_qry ;
				 DEALLOCATE PREPARE exec_qry;
					SET @attribQuery='';
					SET queryColumns='';
					SET queryValues='';
				END IF;
				-- add entry in club and federation table
				SET tableName=SUBSTRING(attributetable,1,11);
				IF(colFg ='is_subscriber' AND fieldname = '') THEN
                                        SET queryColumns=CONCAT("INSERT INTO ",attributetable," (`contact_id`,`",colFg,"`");
                                        SET @defSubscri='';
                                        IF(tableName='master_club' OR tableName='master_syst' ) THEN
                                            SET clubId=SUBSTRING(attributetable,13);
                                        ELSE
                                            SET queryColumns=CONCAT(queryColumns,",is_fed_member");
                                            SET clubId=SUBSTRING(attributetable,19);
                                        END IF;
                                        IF(p_club_id=clubId) THEN
                                            SET @logquery= CONCAT("SELECT default_contact_subscription INTO @defSubscri FROM fg_club WHERE id=",clubId);
                                            PREPARE exec_qry FROM @logquery;
                                            EXECUTE exec_qry ;
                                            DEALLOCATE PREPARE exec_qry; 
                                            SET queryValues= CONCAT(queryValues,",",@defSubscri);
                                        ELSE
                                            SET queryValues= CONCAT(queryValues,",'1'");
                                        END IF;
                                        IF(tableName!='master_club' AND tableName !='master_syst') THEN
                                            IF(lev_col IS NULL OR lev_col ='') THEN
                                                SET is_fed_mem=',T.is_fed_member';
                                            ELSE
                                                SET is_fed_mem=CONCAT(',IF((`',lev_col,'` IS NOT NULL AND `',lev_col,'`!="" AND LENGTH(`',lev_col,'`)>0) AND (T.membership_id IS NOT NULL AND T.membership_id != "" ),0,T.`is_fed_member`)');
                                            END IF;   
                                             SET queryValues= CONCAT(queryValues,is_fed_mem);
                                        END IF;
                                        -- SET @logquery= CONCAT("INSERT INTO fg_cm_change_log ( `date`, `changed_by`, `confirmed_by`,  `contact_id`,`kind`, `field`, `value_after`,`attribute_id`)(SELECT NOW(), '",changed_by,"','",changed_by,"', C.id, 'data','",colTitle,"',",@defSubscri,",'' FROM ",tableName1," T LEFT JOIN fg_cm_contact C ON C.import_id=T.row_id WHERE C.import_table='",tableName1,"' )");
                                        -- PREPARE exec_qry FROM @logquery;
                                        -- EXECUTE exec_qry ;
                                        -- DEALLOCATE PREPARE exec_qry;

                                ELSE
                                    SET queryColumns=CONCAT("INSERT INTO ",attributetable," (`contact_id`,`",colFg,"`");
                                    SET queryValues= CONCAT(",T.",fieldname);
				END IF;
				IF(tableName != 'master_club') THEN 
					SET queryColumns= CONCAT(queryColumns,", `club_id`");
					SET queryValues= CONCAT( queryValues,",'",p_club_id,"'");
				END IF;
			END;
			ELSEIF(colFg <>'is_subscriber' AND fieldname != '') THEN 
			BEGIN
				SET queryColumns= CONCAT(queryColumns,", `",colFg,"`");
				SET queryValues= CONCAT( queryValues,",T.",fieldname);
			END;
                        END IF;
			SET prevLoopTable=attributetable;
		END LOOP dynamiccolumnCursorLoop;
	CLOSE dynamiccolumnCursor;
	END BLOCK_CATEGORY;

	-- insert last table set query
	IF queryColumns !='' THEN
		SET @attribQuery= CONCAT(queryColumns,') (SELECT C.id',queryValues,' FROM ',tableName1,' T LEFT JOIN fg_cm_contact C ON C.import_id=T.row_id WHERE C.import_table="',tableName1,'" AND T.is_removed="0") ');
		SET my_var=CONCAT(my_var,@attribQuery,'==');

	 PREPARE exec_qry FROM @attribQuery;
	 EXECUTE exec_qry ;
	 DEALLOCATE PREPARE exec_qry; 
	END IF;

SELECT my_var;
	SET @same_query= CONCAT('INSERT INTO fg_cm_membership_log ( `club_id`,`contact_id`,`membership_id`,`date`,`kind`,`changed_by`, `value_after`) (SELECT "',p_club_id,'",C.id,T.membership_id,C.joining_date, "assigned contacts","',changed_by,'",contactName(C.id) FROM ',tableName1,' T LEFT JOIN fg_cm_contact C ON C.import_id=T.row_id AND C.import_table="',tableName1,'" WHERE C.import_id=T.row_id AND C.import_table="',tableName1,'" AND (T.membership_id IS NOT NULL AND T.membership_id != "") )');
        PREPARE exec_qry FROM @same_query;
        EXECUTE exec_qry ;
        DEALLOCATE PREPARE exec_qry;
	
        IF(lev_col IS NOT NULL AND lev_col !='') THEN
            SET @same_query= CONCAT('INSERT INTO fg_cm_membership_log ( `club_id`,`contact_id`,`membership_id`,`date`,`kind`,`changed_by`, `value_before`,`value_after`) (SELECT "',p_club_id,'",C.id,T.membership_id,C.leaving_date, "assigned contacts","',changed_by,'",contactName(C.id),"-" FROM ',tableName1,' T LEFT JOIN fg_cm_contact C ON C.import_id=T.row_id AND C.import_table="',tableName1,'" WHERE C.import_id=T.row_id AND C.import_table="',tableName1,'" AND (T.membership_id IS NOT NULL AND T.membership_id != "" AND T.',lev_col,' IS NOT NULL AND T.',lev_col,' !="" ) )');
            PREPARE exec_qry FROM @same_query;
             EXECUTE exec_qry ;
             DEALLOCATE PREPARE exec_qry;
            SET mem_leaving =CONCAT('IF(T.',lev_col,' IS NOT NULL AND T.',lev_col,' !="",T.',lev_col,',NULL)');
        END IF;
        
        SET @same_query= CONCAT('INSERT INTO fg_cm_membership_history (`contact_id`,`membership_club_id`,`membership_id`,`membership_type`,`joining_date`,`leaving_date`,`changed_by`) (SELECT C.id,',p_club_id,',T.membership_id,IF(T.`member_clubid` !="',p_club_id,'","federation","club"),C.joining_date,',mem_leaving,', "',changed_by,'" FROM ',tableName1,' T LEFT JOIN fg_cm_contact C ON C.import_id=T.row_id AND C.import_table="',tableName1,'" WHERE C.import_id=T.row_id AND C.import_table="',tableName1,'" AND T.membership_id IS NOT NULL AND T.membership_id != "" )');
	 PREPARE exec_qry FROM @same_query;
	 EXECUTE exec_qry ;
	 DEALLOCATE PREPARE exec_qry;

        
	DROP TABLE `dynamic_Columncursor`;
	-- SET @same_query= CONCAT("DROP TABLE ",tableName1);
	-- PREPARE exec_qry FROM @same_query;
	-- EXECUTE exec_qry ;
	-- DEALLOCATE PREPARE exec_qry;
	
	/* SET @same_query= CONCAT("DELETE FROM ",tableName2," WHERE imp_table='",tableName1,"'");
	PREPARE exec_qry FROM @same_query;
	EXECUTE exec_qry ;
	DEALLOCATE PREPARE exec_qry; */

	COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `importContactsTest` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`%` PROCEDURE `importContactsTest`(tableName1 TEXT,tableName2 TEXT,club_default_lang TEXT,p_club_id INT, changed_by INT, main_contact TEXT,own_table TEXT)
BEGIN
	DECLARE record_not_found, attr_set_id INTEGER DEFAULT 0;
    DECLARE attr_set_id_corr INTEGER DEFAULT 2;
    DECLARE attr_set_id_inv INTEGER DEFAULT 137;
    DECLARE invcoun INTEGER DEFAULT 0;
    DECLARE strasse_id_corr INTEGER DEFAULT 47;
    DECLARE ort_id_corr INTEGER DEFAULT 77;
    DECLARE canton_id_corr INTEGER DEFAULT 78;
    DECLARE plz_id_corr INTEGER DEFAULT 79;
    DECLARE land_id_corr INTEGER DEFAULT 106;
    DECLARE postfach_id_corr INTEGER DEFAULT 71785;

    DECLARE strasse_id_inv INTEGER DEFAULT 71873;
    DECLARE plz_id_inv INTEGER DEFAULT 71874;
    DECLARE ort_id_inv INTEGER DEFAULT 71875;
    DECLARE canton_id_inv INTEGER DEFAULT 71876;
    DECLARE land_id_inv INTEGER DEFAULT 71877;
    DECLARE postfach_id_inv INTEGER DEFAULT 71878;
	DECLARE same_as INTEGER DEFAULT 1;
    DECLARE has_MC TEXT DEFAULT '0';
	DECLARE is_mem TEXT DEFAULT '0';
	DECLARE is_company text;
    DECLARE dynamicSQL TEXT;
    DECLARE exec_qry TEXT;
    DECLARE exec_qry1 TEXT;
    DECLARE fieldname TEXT;
    DECLARE attributetable TEXT;
    DECLARE prevLoopTable TEXT DEFAULT '';
    DECLARE rowid INTEGER;
	DECLARE rowc INTEGER;
    DECLARE colfg TEXT;
    DECLARE coltitle TEXT;
    DECLARE newcontact INTEGER;
    DECLARE fieldvalue TEXT ;
    DECLARE loop2query1 TEXT;
    DECLARE loop2query2 TEXT;
    DECLARE attribquery TEXT DEFAULT '';
    DECLARE loop2query3 TEXT;
    DECLARE loop2query4 TEXT;
    DECLARE value_rand  TEXT;
    DECLARE value_salt  TEXT;
    DECLARE value_password  TEXT;
    DECLARE queryColumns TEXT DEFAULT '';
	DECLARE queryValues TEXT DEFAULT '';
    DECLARE contact_ids TEXT DEFAULT '';
    DECLARE logquery TEXT DEFAULT '';
    DECLARE email_value TEXT DEFAULT '';
    DECLARE fgCmContactColumns TEXT DEFAULT '';
    DECLARE fgCmContactValues TEXT DEFAULT '';
    DECLARE my_var TEXT DEFAULT '';
    DECLARE same_query TEXT DEFAULT '';
    DECLARE filedname_joindate TEXT DEFAULT '';
    DECLARE club_lang_count INTEGER DEFAULT 0; 
    DECLARE joindate_not_exist TEXT DEFAULT '';
    DECLARE filedname_joindate_val TEXT DEFAULT '';
    DECLARE joindate_query TEXT DEFAULT '';
    DECLARE filedname_joindate_val_nonsession TEXT DEFAULT '';
    DECLARE row_id, corr_attr_id, inv_attr_id, rowid_joindate INTEGER;
    
	DECLARE CONTINUE HANDLER FOR
    NOT FOUND SET record_not_found = 1;
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        ROLLBACK;
    END;
    SET autocommit=0;
    SET unique_checks=0;
    SET foreign_key_checks=0;

	
	START TRANSACTION;
   
    SET club_lang_count = 1;

    DROP TABLE IF EXISTS `dynamic_Columncursor`;
    SET @dynamicSQL=CONCAT('CREATE TEMPORARY TABLE dynamic_Columncursor as SELECT * FROM ',tableName2,' ORDER BY fg_table ASC' );
    PREPARE exec_qry FROM @dynamicSQL;
    EXECUTE exec_qry ;
    DEALLOCATE PREPARE exec_qry;

	BLOCK_CATEGORY: BEGIN
		
	DECLARE dynamiccolumnCursor CURSOR FOR  SELECT * FROM `dynamic_Columncursor`;
	DECLARE fgCmContactColumnCursor CURSOR FOR  SELECT * FROM `dynamic_Columncursor` WHERE TRIM(`fg_table`)='fg_cm_contact';

	IF main_contact='single' THEN
		SET is_company='0';
	ELSE
		SET is_company='1';
		IF main_contact='companyWithMain' THEN
			SET has_MC='1';
		END IF;
	END IF;
	SET @same_query=CONCAT('SELECT COUNT(id) INTO @invcoun FROM ',tableName2,' WHERE fg_table = "fg_cm_contact" AND col_fg in (select id from fg_cm_attribute WHERE attributeset_id=',attr_set_id_inv,' AND club_id=1 )');
	PREPARE exec_qry FROM @same_query;
	EXECUTE exec_qry ;
	DEALLOCATE PREPARE exec_qry;
	IF(@invcoun>0) THEN
		SET same_as=0;
	END IF;
	SET fgCmContactColumns='INSERT INTO fg_cm_contact (`club_id`,`member_id`,`is_company`,`is_draft`,`is_deleted`,`is_newsletter_subscriber`,`is_sponsor`,`has_main_contact`,`created_at`, `same_invoice_address`,`import_id`,`import_table`';
	SET fgCmContactValues=CONCAT(' (SELECT ',p_club_id,',0,',is_company,',0,0,0,0,',has_MC,',NOW(),',same_as,',`row_id`,"',tableName1,'" FROM ',tableName1,')');
	OPEN fgCmContactColumnCursor;
		fgCmContactColumnCursor: LOOP
			FETCH fgCmContactColumnCursor INTO rowc,fieldname,colFg,attributetable,colTitle;
			IF record_not_found THEN
					SET record_not_found = 0;
					LEAVE fgCmContactColumnCursor;
			END IF;
			IF(colFg='member_category') THEN
				SET fgCmContactColumns=CONCAT(fgCmContactColumns,',`membership_cat_id`,`is_member`');
				SET fgCmContactValues=CONCAT(fgCmContactValues,",membership_id,IF(membership_id IS NULL OR membership_id = '',0,1) AS is_member");
				SET @joindate_query=CONCAT('SELECT COUNT(id) INTO @rowid_joindate FROM ',tableName2,' WHERE col_fg="joining_date"');
				PREPARE exec_qry FROM @joindate_query;
				EXECUTE exec_qry ;
				DEALLOCATE PREPARE exec_qry;
				IF(@rowid_joindate<1) THEN
					SET fgCmContactColumns=CONCAT(fgCmContactColumns,',`joining_date`');
					SET fgCmContactValues=CONCAT(fgCmContactValues,",NOW()");
				END IF;
			ELSEIF(colFg='joining_date') THEN
				SET fgCmContactColumns=CONCAT(fgCmContactColumns,',`joining_date`');
				SET fgCmContactValues=CONCAT(fgCmContactValues,"IF(membership_id IS NULL OR membership_id = '','0000-00-00',IF(`",fieldname,"` IS NULL OR `",fieldname,"` = '',NOW(),",fieldname,")) AS joining_date");
			ELSE
				SET fgCmContactColumns=CONCAT(fgCmContactColumns,',`',colFg,'`');
				SET fgCmContactValues=CONCAT(fgCmContactValues,",",fieldname);
			END IF;
		END LOOP fgCmContactColumnCursor;
    CLOSE fgCmContactColumnCursor;

	SET @dynamicSQL=CONCAT(fgCmContactColumns,')',fgCmContactValues);
	PREPARE exec_qry FROM @dynamicSQL;
	EXECUTE exec_qry ;
	DEALLOCATE PREPARE exec_qry;
	SET my_var='';
	SET joindate_not_exist = ''; 
	
	OPEN dynamiccolumnCursor;
		
		dynamiccolumnCursorLoop: LOOP
			FETCH dynamiccolumnCursor INTO rowc,fieldname,colFg,attributetable,colTitle;
			IF record_not_found THEN
					SET record_not_found = 0;
					LEAVE dynamiccolumnCursorLoop;
			END IF;	
			IF(attributetable='fg_cm_contact') THEN
				ITERATE dynamiccolumnCursorLoop;
			END IF;
			SET my_var=CONCAT(my_var,rowc,fieldname,colFg,attributetable,colTitle,'&&&&&');
			
			SET @logquery= CONCAT("INSERT INTO fg_cm_change_log ( `date`, `changed_by`, `confirmed_by`,  `contact_id`,`kind`, `field`, `value_after`)(SELECT NOW(), ",changed_by,",",changed_by,", C.id, 'data','",colTitle,"',T.",fieldname," FROM ",tableName1," T LEFT JOIN fg_cm_contact C ON C.import_id=T.row_id WHERE C.import_table='",tableName1,"' )");
			PREPARE exec_qry FROM @logquery;
			EXECUTE exec_qry ;
			DEALLOCATE PREPARE exec_qry;
			
			IF(prevLoopTable <> attributetable) THEN 
			BEGIN
				set my_var=CONCAT(my_var,queryColumns,'^^^^^');
				IF (queryColumns <>'') THEN
				set my_var=CONCAT(my_var,queryColumns,'==');
					SET @attribQuery= CONCAT(queryColumns,') (SELECT C.id,',p_club_id,',',@queryValues,' FROM ',tableName1,' T LEFT JOIN fg_cm_contact C ON C.import_id=T.row_id WHERE C.import_table="',tableName1,'") ');
					PREPARE exec_qry FROM @attribQuery;
					EXECUTE exec_qry ;
					DEALLOCATE PREPARE exec_qry;
					SET @attribQuery='';
					SET queryColumns='';
					SET @queryValues='';
				END IF;
				IF(colFg='contact_id') THEN
					IF(own_table = attributetable) THEN
						SET queryColumns=CONCAT("INSERT INTO ",attributetable," (`contact_id`,`club_id`");
						SET @queryValues= '';
					ELSE
						SET queryColumns=CONCAT("INSERT INTO ",attributetable," (`contact_id`,`club_id`,is_fed_member");
						SET @queryValues= CONCAT(',IF(`member_clubid` !="',p_club_id,'" AND membership_id IS NOT NULL AND membership_id != '',1,0) AS is_fed_member');
					END IF;
				ELSE
					SET queryColumns=CONCAT("INSERT INTO ",attributetable," (`contact_id`,`club_id`,`",colFg,"`");
					SET @queryValues= CONCAT("T.",fieldname);
				END IF;
			END;
			ELSEIF(colFg <>'contact_id') THEN 
			BEGIN
				SET queryColumns= CONCAT(queryColumns,", `",colFg,"`");
				SET @queryValues= CONCAT( @queryValues,",T.",fieldname);
			END;
			END IF;
			
			SET prevLoopTable=attributetable;
		END LOOP dynamiccolumnCursorLoop;
	CLOSE dynamiccolumnCursor;
	END BLOCK_CATEGORY;
	
	IF queryColumns !='' THEN
		SET @attribQuery= CONCAT(queryColumns,') (SELECT C.id,',p_club_id,',',@queryValues,' FROM ',tableName1,' T LEFT JOIN fg_cm_contact C ON C.import_id=T.row_id WHERE C.import_table="',tableName1,'") ');
		select @invcoun,my_var,@attribQuery;
		PREPARE exec_qry FROM @attribQuery;
		EXECUTE exec_qry ;
		DEALLOCATE PREPARE exec_qry;
	END IF;
	DROP TABLE `dynamic_Columncursor`;
	COMMIT;
    SET unique_checks=1;
    SET foreign_key_checks=1;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `importContactsTestDeepa` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`fairgate`@`%` PROCEDURE `importContactsTestDeepa`(IN `tableName1` TEXT, IN `tableName2` TEXT, IN `p_club_id` INT, IN `changed_by` INT, IN `main_contact` TEXT, IN `own_table` TEXT)
BEGIN
    DECLARE record_not_found, attr_set_id INTEGER DEFAULT 0;
    DECLARE attr_set_id_inv INTEGER DEFAULT 137;
    DECLARE invcoun INTEGER DEFAULT 0;
    DECLARE same_as INTEGER DEFAULT 1;
    DECLARE has_MC TEXT DEFAULT '0';
    DECLARE is_mem TEXT DEFAULT '0';
    DECLARE is_company text;
    DECLARE dynamicSQL TEXT;
    DECLARE exec_qry TEXT;
    DECLARE exec_qry1 TEXT;
    DECLARE fieldname TEXT;
    DECLARE attributetable TEXT;
    DECLARE prevLoopTable TEXT DEFAULT '';
    DECLARE rowc INTEGER;
    DECLARE colfg TEXT;
    DECLARE coltitle TEXT;
    DECLARE attribquery TEXT DEFAULT '';
    DECLARE queryColumns TEXT DEFAULT '';
    DECLARE queryValues TEXT DEFAULT '';
    DECLARE logquery TEXT DEFAULT '';
    DECLARE clubId TEXT DEFAULT '';
    DECLARE email_value TEXT DEFAULT '';
    DECLARE fgCmContactColumns TEXT DEFAULT '';
    DECLARE fgCmContactValues TEXT DEFAULT '';
    DECLARE my_var TEXT DEFAULT '';
    DECLARE same_query TEXT DEFAULT '';
    DECLARE tableName TEXT DEFAULT '';
    DECLARE joindate_query TEXT DEFAULT '';
    DECLARE impTable TEXT;
    DECLARE defSubscri INTEGER DEFAULT 1;
    DECLARE rowid_joindate INTEGER;
    
    DECLARE CONTINUE HANDLER FOR
    NOT FOUND SET record_not_found = 1;

    -- DECLARE EXIT HANDLER FOR SQLEXCEPTION
    -- BEGIN
        -- ROLLBACK;
    -- END;
	
	START TRANSACTION;
   
    DROP TABLE IF EXISTS `dynamic_Columncursor`;
    SET @dynamicSQL=CONCAT('CREATE TEMPORARY TABLE dynamic_Columncursor as SELECT * FROM ',tableName2,' WHERE imp_table="',tableName1,'" ORDER BY fg_table,if(col_fg="is_subscriber",1,2) ASC' );
    PREPARE exec_qry FROM @dynamicSQL;
    EXECUTE exec_qry ;
    DEALLOCATE PREPARE exec_qry;

	BLOCK_CATEGORY: BEGIN
		
	DECLARE dynamiccolumnCursor CURSOR FOR  SELECT * FROM `dynamic_Columncursor`;
	DECLARE fgCmContactColumnCursor CURSOR FOR  SELECT * FROM `dynamic_Columncursor` WHERE TRIM(`fg_table`)='fg_cm_contact';

	IF main_contact='single' THEN
		SET is_company='0';
	ELSE
		SET is_company='1';
		IF main_contact='companyWithMain' THEN
			SET has_MC='1';
		END IF;
	END IF;
	-- build query for fg_cm_contact table 
	SET fgCmContactColumns='INSERT INTO fg_cm_contact (`club_id`,`member_id`,`is_company`,`is_draft`,`is_deleted`,`is_sponsor`,`has_main_contact`,`created_at`,`last_updated`, `import_id`,`import_table`,`membership_cat_id`,`is_member`';
	SET fgCmContactValues=CONCAT(' (SELECT ',p_club_id,',0,',is_company,',0,0,0,',has_MC,',NOW(),NOW(),`row_id`,"',tableName1,'",membership_id,IF(membership_id IS NULL OR membership_id = "",0,1) AS is_member');
	OPEN fgCmContactColumnCursor;
		fgCmContactColumnCursor: LOOP
			FETCH fgCmContactColumnCursor INTO rowc,fieldname,colFg,attributetable,impTable,colTitle;
			IF record_not_found THEN
					SET record_not_found = 0;
					LEAVE fgCmContactColumnCursor;
			END IF;
			IF(colFg='joining_date') THEN
				SET fgCmContactColumns=CONCAT(fgCmContactColumns,',`joining_date`');
				SET fgCmContactValues=CONCAT(fgCmContactValues,",IF(membership_id IS NULL OR membership_id = '','0000-00-00',IF(`",fieldname,"` = '0000-00-00',NOW(),",fieldname,")) AS joining_date");
			ELSE
				SET fgCmContactColumns=CONCAT(fgCmContactColumns,',`',colFg,'`');
				SET fgCmContactValues=CONCAT(fgCmContactValues,",",fieldname);
			END IF;
		END LOOP fgCmContactColumnCursor;
    CLOSE fgCmContactColumnCursor;

	SET @dynamicSQL=CONCAT(fgCmContactColumns,')',fgCmContactValues,' FROM ',tableName1,' WHERE  is_removed=0)');
	PREPARE exec_qry FROM @dynamicSQL;
	EXECUTE exec_qry ;
	DEALLOCATE PREPARE exec_qry;

	SET @logquery= CONCAT("INSERT INTO fg_cm_change_log ( `date`, `changed_by`, `confirmed_by`,  `contact_id`,`kind`, `field`, `value_after`,`attribute_id`)(SELECT NOW(), '",changed_by,"','",changed_by,"', C.id, 'contact status','','active','' FROM ",tableName1," T LEFT JOIN fg_cm_contact C ON C.import_id=T.row_id WHERE C.import_table='",tableName1,"')");
	PREPARE exec_qry FROM @logquery;
	EXECUTE exec_qry ;
	DEALLOCATE PREPARE exec_qry;

	SET my_var='';
	-- mapping table iteration
	OPEN dynamiccolumnCursor;
		dynamiccolumnCursorLoop: LOOP
			FETCH dynamiccolumnCursor INTO rowc,fieldname,colFg,attributetable,impTable,colTitle;
			IF record_not_found THEN
					SET record_not_found = 0;
					LEAVE dynamiccolumnCursorLoop;
			END IF;
			-- skip fg_cm_contact fields since its updated			
			IF(attributetable='fg_cm_contact') THEN
				ITERATE dynamiccolumnCursorLoop;
			END IF;
			-- add log entry for updated fields
			IF(colFg <>'is_subscriber' AND fieldname<>'') THEN
			SET @logquery= CONCAT("INSERT INTO fg_cm_change_log ( `date`, `changed_by`, `confirmed_by`,  `contact_id`,`kind`, `field`, `value_after`,`attribute_id`)(SELECT NOW(), '",changed_by,"','",changed_by,"', C.id, 'data','",colTitle,"',T.",fieldname,",cast('",colFg,"'as UNSIGNED) FROM ",tableName1," T LEFT JOIN fg_cm_contact C ON C.import_id=T.row_id WHERE C.import_table='",tableName1,"' AND T.",fieldname," IS NOT NULL AND T.",fieldname," !='' )");
				PREPARE exec_qry FROM @logquery;
				EXECUTE exec_qry ;
				DEALLOCATE PREPARE exec_qry; 
			END IF;
			-- Build query so that each table updated only once by keeping table name of previous iteration.
			IF(prevLoopTable <> attributetable) THEN 
			BEGIN
				-- if not first iteration
				IF (queryColumns <>'') THEN
					SET @attribQuery= CONCAT(queryColumns,') (SELECT C.id',queryValues,' FROM ',tableName1,' T LEFT JOIN fg_cm_contact C ON C.import_id=T.row_id WHERE C.import_table="',tableName1,'" AND T.is_removed="0") ');
					set my_var=CONCAT(my_var,@attribQuery,'==');
					PREPARE exec_qry FROM @attribQuery;
					EXECUTE exec_qry ;
					DEALLOCATE PREPARE exec_qry;
					SET @attribQuery='';
					SET queryColumns='';
					SET queryValues='';
				END IF;
				-- add entry in club and federation table
				SET tableName=SUBSTRING(attributetable,1,11);
				IF(colFg ='is_subscriber' AND fieldname = '') THEN
                                        SET queryColumns=CONCAT("INSERT INTO ",attributetable," (`contact_id`,`",colFg,"`");
                                        SET @defSubscri='';
                                        IF(tableName='master_club') THEN
                                            SET clubId=SUBSTRING(attributetable,13);
                                        ELSE
                                            SET queryColumns=CONCAT(queryColumns,",is_fed_member");
                                             SET clubId=SUBSTRING(attributetable,19);
                                        END IF;
										IF(p_club_id=clubId) THEN
											SET @logquery= CONCAT("SELECT default_contact_subscription INTO @defSubscri FROM fg_club WHERE id=",clubId);
											PREPARE exec_qry FROM @logquery;
											EXECUTE exec_qry ;
											DEALLOCATE PREPARE exec_qry; 
											SET queryValues= CONCAT(queryValues,",",@defSubscri);
										ELSE
                                            SET queryValues= CONCAT(queryValues,",'1'");
                                        END IF;
                                        IF(tableName!='master_club') THEN
                                                SET queryValues= CONCAT(queryValues,',T.`is_fed_member`');
                                        END IF;
                                        -- SET @logquery= CONCAT("INSERT INTO fg_cm_change_log ( `date`, `changed_by`, `confirmed_by`,  `contact_id`,`kind`, `field`, `value_after`,`attribute_id`)(SELECT NOW(), '",changed_by,"','",changed_by,"', C.id, 'data','",colTitle,"',",@defSubscri,",'' FROM ",tableName1," T LEFT JOIN fg_cm_contact C ON C.import_id=T.row_id WHERE C.import_table='",tableName1,"' )");
                                        -- PREPARE exec_qry FROM @logquery;
                                        -- EXECUTE exec_qry ;
                                        -- DEALLOCATE PREPARE exec_qry;

                                ELSE
                                    SET queryColumns=CONCAT("INSERT INTO ",attributetable," (`contact_id`,`",colFg,"`");
                                    SET queryValues= CONCAT(",T.",fieldname);
				END IF;
				IF(tableName != 'master_club') THEN 
					SET queryColumns= CONCAT(queryColumns,", `club_id`");
					SET queryValues= CONCAT( queryValues,",'",p_club_id,"'");
				END IF;
			END;
			ELSEIF(colFg <>'is_subscriber' AND fieldname != '') THEN 
			BEGIN
				SET queryColumns= CONCAT(queryColumns,", `",colFg,"`");
				SET queryValues= CONCAT( queryValues,",T.",fieldname);
			END;
                        END IF;
			SET prevLoopTable=attributetable;
		END LOOP dynamiccolumnCursorLoop;
	CLOSE dynamiccolumnCursor;
	END BLOCK_CATEGORY;

	-- insert last table set query
	IF queryColumns !='' THEN
		SET @attribQuery= CONCAT(queryColumns,') (SELECT C.id',queryValues,' FROM ',tableName1,' T LEFT JOIN fg_cm_contact C ON C.import_id=T.row_id WHERE C.import_table="',tableName1,'" AND T.is_removed="0") ');
		set my_var=CONCAT(my_var,@attribQuery,'==');

		PREPARE exec_qry FROM @attribQuery;
		EXECUTE exec_qry ;
		DEALLOCATE PREPARE exec_qry; 
	END IF;
    --  SELECT my_var;

	SET @same_query= CONCAT('INSERT INTO fg_cm_membership_log ( `club_id`,`contact_id`,`membership_id`,`date`,`kind`,`changed_by`, `value_after`) (SELECT "',p_club_id,'",C.id,T.membership_id,C.joining_date, "assigned contacts","',changed_by,'",contactName(C.id) FROM ',tableName1,' T LEFT JOIN fg_cm_contact C ON C.import_id=T.row_id AND C.import_table="',tableName1,'" WHERE C.import_id=T.row_id AND C.import_table="',tableName1,'" AND T.membership_id IS NOT NULL OR membership_id != "" )');
	PREPARE exec_qry FROM @same_query;
	EXECUTE exec_qry ;
	DEALLOCATE PREPARE exec_qry;
        
        SET @same_query= CONCAT('INSERT INTO fg_cm_membership_history (`contact_id`,`membership_club_id`,`membership_id`,`membership_type`,`joining_date`,`changed_by`) (SELECT C.id,',p_club_id,',T.membership_id,IF(T.`member_clubid` !="',p_club_id,'","federation","club"),C.joining_date, "',changed_by,'" FROM ',tableName1,' T LEFT JOIN fg_cm_contact C ON C.import_id=T.row_id AND C.import_table="',tableName1,'" WHERE C.import_id=T.row_id AND C.import_table="',tableName1,'" AND T.membership_id IS NOT NULL OR membership_id != "" )');
	PREPARE exec_qry FROM @same_query;
	EXECUTE exec_qry ;
	DEALLOCATE PREPARE exec_qry;

        
	DROP TABLE `dynamic_Columncursor`;
	-- SET @same_query= CONCAT("DROP TABLE ",tableName1);
	-- PREPARE exec_qry FROM @same_query;
	-- EXECUTE exec_qry ;
	-- DEALLOCATE PREPARE exec_qry;
	
	/* SET @same_query= CONCAT("DELETE FROM ",tableName2," WHERE imp_table='",tableName1,"'");
	PREPARE exec_qry FROM @same_query;
	EXECUTE exec_qry ;
	DEALLOCATE PREPARE exec_qry; */

	COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `importSubscribers` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`fairgate`@`localhost` PROCEDURE `importSubscribers`(IN `tableName1` TEXT, IN `tableName2` TEXT, IN `p_club_id` INT, IN `changed_by` INT, IN `own_table` TEXT)
BEGIN
	DECLARE record_not_found INTEGER DEFAULT 0;
        DECLARE queryColumns,queryValues,fieldname,colFg,attributetable,impTable,colTitle TEXT DEFAULT '';
        DECLARE rowc INTEGER;
        DECLARE my_var TEXT DEFAULT '';

	DECLARE CONTINUE HANDLER FOR
	NOT FOUND SET record_not_found = 1;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		ROLLBACK;
	END;
	
	START TRANSACTION;
   
    DROP TABLE IF EXISTS `dynamic_subscriber_columncursor`;
    SET @dynamicSQL=CONCAT('CREATE TEMPORARY TABLE dynamic_subscriber_columncursor as SELECT * FROM ',tableName2,' WHERE imp_table="',tableName1,'" ORDER BY fg_table ASC' );
    PREPARE exec_qry FROM @dynamicSQL;
    EXECUTE exec_qry ;
    DEALLOCATE PREPARE exec_qry;

	BLOCK1: BEGIN

	DECLARE dynamiccolumnCursor CURSOR FOR  SELECT * FROM `dynamic_subscriber_columncursor`;
	

	SET my_var='';


	SET @colFgList= CONCAT("SELECT GROUP_CONCAT(`col_fg` SEPARATOR '`,`' ) INTO @fgColList FROM `",tableName2,"` WHERE `imp_table` = '",tableName1,"'");
	PREPARE exec_qry FROM @colFgList;
	EXECUTE exec_qry ;
	DEALLOCATE PREPARE exec_qry;

	SET @colTempList= CONCAT("SELECT GROUP_CONCAT(`col_imp` SEPARATOR '`,`' ) INTO @tempColList FROM `",tableName2,"` WHERE `imp_table` = '",tableName1,"'");
	PREPARE exec_qry FROM @colTempList;
	EXECUTE exec_qry ;
	DEALLOCATE PREPARE exec_qry;

	SET @attribQuery= CONCAT("INSERT INTO `fg_cn_subscriber` (`club_id`,`created_at`,`import_table`,`import_id`,`",@fgColList,"`) (SELECT '",p_club_id,"',NOW(),'",tableName1,"',T.`row_id`,`",@tempColList,"` FROM `",tableName1,"` T WHERE T.`is_removed`='0') ");
	set my_var=CONCAT(my_var,@attribQuery,'==');
	PREPARE exec_qry FROM @attribQuery;
	EXECUTE exec_qry ;
	DEALLOCATE PREPARE exec_qry;

	-- mapping table iteration
	OPEN dynamiccolumnCursor;
		dynamiccolumnCursorLoop: LOOP
			FETCH dynamiccolumnCursor INTO rowc,fieldname,colFg,attributetable,impTable,colTitle;
			IF record_not_found THEN
					SET record_not_found = 0;
					LEAVE dynamiccolumnCursorLoop;
			END IF;
			-- skip fg_cm_contact fields since its updated			
			IF(attributetable='fg_cn_subscriber') THEN

				IF(colFg <>'' AND fieldname<>'') THEN
					SET @logquerySelect= CONCAT("INSERT INTO `fg_cn_subscriber_log` (`subscriber_id`,`club_id`,`date`,`kind`,`field`,`value_before`,`value_after`,`changed_by`) (SELECT cns.`id`,'",p_club_id,"', NOW(), 'data','",colFg,"','',T.`",fieldname,"`,'",changed_by,"' FROM `",tableName1,"` T LEFT JOIN `fg_cn_subscriber` cns ON cns.`import_id`=T.`row_id` WHERE cns.`import_table`='",tableName1,"' AND T.`",fieldname,"` IS NOT NULL AND T.`",fieldname,"` !='' AND cns.`import_id`=T.`row_id`); ");

					PREPARE exec_qry FROM @logquerySelect;
					EXECUTE exec_qry ;
					DEALLOCATE PREPARE exec_qry;
				END IF;
				
			END IF;

		END LOOP dynamiccolumnCursorLoop;
	CLOSE dynamiccolumnCursor;

	END BLOCK1;
        
	-- DROP TABLE `dynamic_subscriber_columncursor`;
	-- SET @same_query= CONCAT("DROP TABLE ",tableName1);
	-- PREPARE exec_qry FROM @same_query;
	-- EXECUTE exec_qry ;
	-- DEALLOCATE PREPARE exec_qry;
	
	/*SET @same_query= CONCAT("DELETE FROM ",tableName2," WHERE imp_table='",tableName1,"'");
	PREPARE exec_qry FROM @same_query;
	EXECUTE exec_qry ;
	DEALLOCATE PREPARE exec_qry; */

	COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `insertClubSystemValues` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `insertClubSystemValues`(IN club_ids TEXT)
BEGIN

	DECLARE clubId VARCHAR(255) DEFAULT "";
	DECLARE record_not_found INTEGER DEFAULT 0;	
-- 	Assign name for Mysql exception "General error: 1615 Prepared statement needs to be re-prepared"
	DECLARE mysql_prepare_exception CONDITION FOR 1615;
	DECLARE clubCursor CURSOR FOR  SELECT id FROM `fg_club` WHERE FIND_IN_SET(id, club_ids);
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;
	SET autocommit=0;
	SET SESSION tmp_table_size = 67108864;
	SET SESSION max_heap_table_size = 67108864;
	START TRANSACTION;
		OPEN clubCursor;
			clubCursorLoop: LOOP
				FETCH clubCursor INTO clubId;
				IF record_not_found THEN
					SET record_not_found = 0;
					LEAVE clubCursorLoop;
				END IF;	
				/*
				INSERT INTO `fg_cm_attribute_i18n` (id, `lang`, `fieldname_lang`, `fieldname_short_lang`) SELECT `id`, 'en', `fieldname`, `fieldname_short` FROM `fg_cm_attribute` WHERE is_system_field =1

INSERT INTO `fg_cm_attributeset_i18n` (`id`, `lang`, `title_lang`) SELECT `id`, 'en',`title` FROM `fg_cm_attributeset` WHERE club_id IN (SELECT id from fg_club WHERE id=1);
				*/
				 INSERT INTO `fg_club_languages` ( `club_id`, `short_name`, `system_language_code`, `is_default`, `is_active`) VALUES ( clubId, 'sq', 'de', 1, 1);
				 INSERT INTO `fg_club_languages` ( `club_id`, `short_name`, `system_language_code`, `is_default`, `is_active`) VALUES ( clubId, 'fr', 'en', 0, 1);
				INSERT INTO `fg_cm_club_attribute` (`attribute_id`, `club_id`) SELECT `attribute_id`, clubId  FROM fg_cm_club_attribute WHERE club_id = 1;				
				-- call createClubContactListTable(clubId);				
			END LOOP clubCursorLoop;
		CLOSE clubCursor;
    COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `insertContactTableAttributes` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `insertContactTableAttributes`(IN clubId INTEGER, contactId INTEGER)
BEGIN
	DECLARE cc_attribute_id, record_not_found, at_count INTEGER DEFAULT 0; 
	DECLARE cc_fieldtype TEXT DEFAULT "";
	DECLARE club_attribute_cursor CURSOR FOR SELECT ca.attribute_id, a.fieldtype FROM fg_cm_club_attribute AS ca LEFT JOIN fg_cm_attribute AS a ON ca.attribute_id = a.id WHERE ca.club_id = clubId;	
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;
    DECLARE EXIT HANDLER FOR SQLEXCEPTION, SQLWARNING
    BEGIN
        ROLLBACK;
    END;
	START TRANSACTION;

		SET @s = CONCAT('INSERT INTO `tablecontact',clubId, '` SET `contact_id` = ',contactId);
		OPEN club_attribute_cursor;
			loop_attribute: LOOP
				FETCH club_attribute_cursor INTO cc_attribute_id, cc_fieldtype;
					IF record_not_found THEN
						SET record_not_found = 0;
						LEAVE loop_attribute;
					END IF;
					SET at_count = at_count + 1;
					CASE cc_fieldtype
						WHEN 'int' THEN
							BEGIN
								SET @s = CONCAT(@s, ',`',cc_attribute_id ,'` = (select `fg_cm_attribute_value_int`.`value` AS `value` from `fg_cm_attribute_value_int` where (`fg_cm_attribute_value_int`.`contact_id` = ',contactId,') and (`fg_cm_attribute_value_int`.`attribute_id` = ',cc_attribute_id, '))');
							END;
						WHEN 'date' THEN
							BEGIN
								SET @s = CONCAT(@s, ',`',cc_attribute_id ,'` = (select `fg_cm_attribute_value_date`.`value` AS `value` from `fg_cm_attribute_value_date` where (`fg_cm_attribute_value_date`.`contact_id` = ',contactId,') and (`fg_cm_attribute_value_date`.`attribute_id` = ',cc_attribute_id, '))');
							END;
						WHEN 'text' THEN
							BEGIN
								SET @s = CONCAT(@s, ',`',cc_attribute_id ,'` = (select `fg_cm_attribute_value_text`.`value` AS `value` from `fg_cm_attribute_value_text` where (`fg_cm_attribute_value_text`.`contact_id` = ',contactId,') and (`fg_cm_attribute_value_text`.`attribute_id` = ',cc_attribute_id, '))');
							END;
					END CASE;
					
			END LOOP loop_attribute;	
		CLOSE club_attribute_cursor;
    SELECT @s;
		PREPARE stmt FROM @s;
		EXECUTE stmt;				
	COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `insertFgAdminNewsletterContactsToSpool` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `insertFgAdminNewsletterContactsToSpool`(IN newsletterId INT)
BEGIN
	DECLARE newsletter_receivers,newsletter_contacts_qry,qry1,qry4,salutation_text,default_user_culture TEXT DEFAULT "";
	DECLARE insert_query_string,qry2,qry3 MEDIUMTEXT DEFAULT "";
	DECLARE cur_send_date DATETIME;
	DECLARE row_fairgate_sponsor_contact_name,row_fairgate_sponsor_contact_email,row_fairgate_invoice_contact_name,row_fairgate_invoice_contact_email TEXT DEFAULT "";
	DECLARE receiver_organization,receiver_orgtype,receiver_email,clientfree_where_cond,receivertype_where_cond,clientFreeActiveClubs,cur_receiver_type TEXT DEFAULT "";
	DECLARE cur_salutation_type,cur_publish_type,row_title,row_state,row_contact_email,row_contact_name,row_fairgate_solution_contact_name,row_fairgate_solution_contact_email TEXT DEFAULT "";
	DECLARE app_system_att_email_id,app_system_att_first_name,app_system_att_last_name,app_system_att_company_name,row_club_id,receiver_club_id INTEGER DEFAULT 0;
	DECLARE record_not_found,pos,cur_club_id,cur_last_spool_admin_receiver_id,row_fairgate_solution_contact,sportsActivityId,nonSportsActivityId,rows_inserted_in_spool INTEGER DEFAULT 0;
	DECLARE cron_instance,max_cron_instance INTEGER DEFAULT 1;
	DECLARE is_subscribers_selected,is_clientfree_active,is_clientfree_inactive TINYINT(1) DEFAULT 0; 

	DECLARE mysql_prepare_exception CONDITION FOR 1615;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		ROLLBACK;
	END;
	SET autocommit=0;
	SET SESSION tmp_table_size = 67108864;
	SET SESSION max_heap_table_size = 67108864;
	START TRANSACTION;

	SET app_system_att_email_id=3;
	SET app_system_att_first_name=2;
	SET app_system_att_last_name=23;
	SET app_system_att_company_name=9;

	SET sportsActivityId = 2;
	SET nonSportsActivityId = 4;

	SET cron_instance=1;
	SET max_cron_instance=4;

	SET default_user_culture='de';
	BLOCK1: BEGIN
		DECLARE EXIT HANDLER FOR mysql_prepare_exception
		BEGIN
			ROLLBACK;
			UPDATE fg_cn_newsletter SET is_cron=0 WHERE id=newsletterId;
		END;
		SELECT `club_id`,`send_date`,`salutation_type`,`publish_type`,`last_spool_admin_receiver_id`,`receiver_type` INTO cur_club_id,cur_send_date,cur_salutation_type,cur_publish_type,cur_last_spool_admin_receiver_id,cur_receiver_type FROM `fg_cn_newsletter` WHERE `id`=newsletterId;
		SELECT GROUP_CONCAT(receiver_type SEPARATOR '","') INTO newsletter_receivers FROM fg_admin_newsletter_contacts WHERE newsletter_id=newsletterId AND receiver_type NOT IN ('CFA','CFI','S');
		SELECT (SELECT COUNT(*) FROM fg_admin_newsletter_contacts WHERE newsletter_id=newsletterId AND receiver_type='S'), (SELECT COUNT(*) FROM fg_admin_newsletter_contacts WHERE newsletter_id=newsletterId AND receiver_type='CFA'), (SELECT COUNT(*) FROM fg_admin_newsletter_contacts WHERE newsletter_id=newsletterId AND receiver_type='CFI'),getActiveFreeClients() FROM fg_admin_newsletter_contacts WHERE newsletter_id=newsletterId LIMIT 1 INTO is_subscribers_selected, is_clientfree_active, is_clientfree_inactive, clientFreeActiveClubs;

		IF ((newsletter_receivers IS NOT NULL) OR (is_clientfree_active = 1 OR is_clientfree_inactive = 1)) THEN 
			CASE
				WHEN (is_clientfree_active = 1 AND is_clientfree_inactive = 1) THEN
					IF (newsletter_receivers IS NOT NULL) THEN
						SET newsletter_receivers = CONCAT(newsletter_receivers, '","CF');
					ELSE
						SET newsletter_receivers = 'CF';
					END IF;
					SET clientfree_where_cond = '';
				WHEN (is_clientfree_active = 1 AND is_clientfree_inactive = 0) THEN
					IF (newsletter_receivers IS NOT NULL) THEN
						SET newsletter_receivers = CONCAT(newsletter_receivers, '","CF');
					ELSE
						SET newsletter_receivers = 'CF';
					END IF;
					SET clientfree_where_cond = CONCAT(' AND IF((c.state = "CF"), (c.id IN (',clientFreeActiveClubs,')),"1") ');
				WHEN (is_clientfree_active = 0 AND is_clientfree_inactive = 1) THEN
					IF (newsletter_receivers IS NOT NULL) THEN
						SET newsletter_receivers = CONCAT(newsletter_receivers, '","CF');
					ELSE
						SET newsletter_receivers = 'CF';
					END IF;
					SET clientfree_where_cond = CONCAT(' AND IF((c.state = "CF"), (c.id NOT IN (',clientFreeActiveClubs,')),"1") ');
				ELSE
					SET clientfree_where_cond = '';
			END CASE;
			CASE 
				WHEN (cur_receiver_type = 'SPORTS') THEN
					SET receivertype_where_cond = CONCAT(' AND c.assignment_activity = ',sportsActivityId);
				WHEN (cur_receiver_type = 'NONSPORTS') THEN
					SET receivertype_where_cond = CONCAT(' AND c.assignment_activity = ',nonSportsActivityId);
				ELSE
					SET receivertype_where_cond = '';
			END CASE;
			IF (newsletter_receivers IS NOT NULL) THEN
				SET newsletter_contacts_qry = CONCAT('CREATE TEMPORARY TABLE newsletter_contacts AS SELECT c.id,c.title,c.state,c.fairgate_solution_contact,m.email AS contact_email, CONCAT(m.last_name, " ", m.first_name) AS contact_name,
					(IF((SELECT CNT1.is_company FROM fg_cm_contact CNT1 WHERE CNT1.id=c.fairgate_solution_contact), (SELECT D1.value FROM fg_cm_attribute_value_text D1 WHERE D1.contact_id=c.fairgate_solution_contact AND D1.attribute_id=',app_system_att_company_name,'),
						(SELECT group_concat(B1.value ORDER BY B1.attribute_id DESC SEPARATOR " ") FROM fg_cm_attribute_value_text B1 WHERE B1.contact_id=c.fairgate_solution_contact AND attribute_id IN(',app_system_att_last_name,',',app_system_att_first_name,')))) as fairgate_solution_contact_name,
						(SELECT B4.value FROM fg_cm_attribute_value_text B4 WHERE B4.contact_id=c.fairgate_solution_contact AND attribute_id =', app_system_att_email_id,') as fairgate_solution_contact_email,
					(IF((SELECT CNT2.is_company FROM fg_cm_contact CNT2 WHERE CNT2.id=c.fairgate_sponsor_contact), (SELECT D2.value FROM fg_cm_attribute_value_text D2 WHERE D2.contact_id=c.fairgate_sponsor_contact AND D2.attribute_id=',app_system_att_company_name,'),
						(SELECT group_concat(B2.value ORDER BY B2.attribute_id DESC SEPARATOR " ") FROM fg_cm_attribute_value_text B2 WHERE B2.contact_id=c.fairgate_sponsor_contact AND attribute_id IN(',app_system_att_last_name,',',app_system_att_first_name,')))) as fairgate_sponsor_contact_name,
						(SELECT B5.value FROM fg_cm_attribute_value_text B5 WHERE B5.contact_id=c.fairgate_sponsor_contact AND attribute_id =', app_system_att_email_id,') as fairgate_sponsor_contact_email,
					(IF((SELECT CNT3.is_company FROM fg_cm_contact CNT3 WHERE CNT3.id=c.fairgate_invoice_contact), (SELECT D3.value FROM fg_cm_attribute_value_text D3 WHERE D3.contact_id=c.fairgate_invoice_contact AND D3.attribute_id=',app_system_att_company_name,'),
						(SELECT group_concat(B3.value ORDER BY B3.attribute_id DESC SEPARATOR " ") FROM fg_cm_attribute_value_text B3 WHERE B3.contact_id=c.fairgate_invoice_contact AND attribute_id IN(',app_system_att_last_name,',',app_system_att_first_name,')))) as fairgate_invoice_contact_name,
						(SELECT B6.value FROM fg_cm_attribute_value_text B6 WHERE B6.contact_id=c.fairgate_invoice_contact AND attribute_id =', app_system_att_email_id,') as fairgate_invoice_contact_email FROM fg_club c LEFT JOIN fg_am_club_main_contact m ON m.club_id=c.id 
					WHERE c.is_deleted = 0 AND c.is_fg_newsletter_subscriber = 1 AND IF(((state = "P") || (state = "F") || (state = "SF")),(m.email != "" AND m.email IS NOT NULL), ((fairgate_solution_contact != "" AND fairgate_solution_contact IS NOT NULL) OR (fairgate_sponsor_contact != "" AND fairgate_sponsor_contact IS NOT NULL) OR (fairgate_invoice_contact != "" AND fairgate_invoice_contact IS NOT NULL))) AND c.state IN ("',newsletter_receivers,'")',clientfree_where_cond,receivertype_where_cond);
				END IF;
		END IF;

		IF (newsletter_receivers IS NOT NULL AND is_subscribers_selected != 0) THEN
			SET newsletter_contacts_qry = CONCAT(newsletter_contacts_qry,' UNION (SELECT 0,0,"S",0,s.email, (CONCAT(s.last_name, " ", s.first_name)),0,0,0,0,0,0 FROM fg_admin_newsletter_subscribers s WHERE s.email != "" AND s.email IS NOT NULL)');
		ELSE

			IF (is_subscribers_selected != 0) THEN
				SET newsletter_contacts_qry = 'CREATE TEMPORARY TABLE newsletter_contacts AS SELECT 1,2,"S",3,s.email, (CONCAT(s.last_name, " ", s.first_name)),4,5,6,7,8,9 FROM fg_admin_newsletter_subscribers s WHERE s.email != "" AND s.email IS NOT NULL';	
			END IF;
		END IF;
		DROP TABLE IF EXISTS `newsletter_contacts`;
		IF (newsletter_contacts_qry IS NULL) THEN
			LEAVE BLOCK1; 
		END IF;
		SET @qry1 = newsletter_contacts_qry;
		PREPARE stmt1 FROM @qry1;
 		EXECUTE stmt1 ;
		DEALLOCATE PREPARE stmt1; 
		SET insert_query_string = '';
		BLOCK2: BEGIN
			DECLARE receiver_cursor CURSOR FOR SELECT * FROM newsletter_contacts;
			OPEN receiver_cursor;
				loop_receiver: LOOP
					FETCH receiver_cursor INTO row_club_id,row_title,row_state,row_fairgate_solution_contact,row_contact_email,row_contact_name,row_fairgate_solution_contact_name,row_fairgate_solution_contact_email,row_fairgate_sponsor_contact_name,row_fairgate_sponsor_contact_email,row_fairgate_invoice_contact_name,row_fairgate_invoice_contact_email;
					IF record_not_found THEN
						SET record_not_found = 0;
						LEAVE loop_receiver;
					END IF;

					IF (row_state = 'P' OR row_state = 'F' OR row_state = 'SF' OR row_state = 'S') THEN
						IF (row_contact_email != '') THEN
							SET receiver_organization = row_title;
							CASE
								WHEN (row_state = 'P') THEN
									SET receiver_orgtype = "Prospect";
								WHEN (row_state = 'F') THEN
									SET receiver_orgtype = "Federation client";
								WHEN (row_state = 'SF') THEN
									SET receiver_orgtype = "Sub-federation client";
								WHEN (row_state = 'S') THEN
									SET receiver_orgtype = "Subscriber";
									SET receiver_organization = '-';
									SET row_club_id = 1;
							END CASE;
							SET receiver_organization = REPLACE(receiver_organization,'"','\\"');
							SET insert_query_string = CONCAT(insert_query_string,'(',row_club_id,',',newsletterId,',"',cur_send_date,'","',row_contact_email,'","',receiver_organization,'","',receiver_orgtype,'","',row_contact_name,'"),');
						END IF;
					ELSE

						IF (row_state = 'C' OR row_state = 'CF') THEN
							SET row_title = REPLACE(row_title,'"','\\"');
							IF (row_fairgate_solution_contact_email IS NULL) THEN
								SET row_fairgate_solution_contact_email = '';
							END IF;
							IF (row_fairgate_sponsor_contact_email IS NULL) THEN
								SET row_fairgate_sponsor_contact_email = '';
							END IF;
							IF (row_fairgate_invoice_contact_email IS NULL) THEN
								SET row_fairgate_invoice_contact_email = '';
							END IF;
							IF (row_fairgate_solution_contact_email != '') THEN
								CASE
									WHEN (row_state = 'C') THEN
										SET receiver_orgtype = "C solution";
									WHEN (row_state = 'CF') THEN
										IF (FIND_IN_SET(row_club_id,clientFreeActiveClubs)) THEN
											SET receiver_orgtype = "CFA solution";
										ELSE
											SET receiver_orgtype = "CFI solution";
										END IF;
								END CASE;
								SET insert_query_string = CONCAT(insert_query_string,'(',row_club_id,',',newsletterId,',"',cur_send_date,'","',row_fairgate_solution_contact_email,'","',row_title,'","',receiver_orgtype,'","',row_fairgate_solution_contact_name,'"),');
							END IF;
							IF ((row_fairgate_sponsor_contact_email != '') AND (row_fairgate_sponsor_contact_email != row_fairgate_solution_contact_email)) THEN
								CASE
									WHEN (row_state = 'C') THEN
										SET receiver_orgtype = "C sponsor";
									WHEN (row_state = 'CF') THEN
										IF (FIND_IN_SET(row_club_id,clientFreeActiveClubs)) THEN
											SET receiver_orgtype = "CFA sponsor";
										ELSE
											SET receiver_orgtype = "CFI sponsor";
										END IF;
								END CASE;
								SET insert_query_string = CONCAT(insert_query_string,'(',row_club_id,',',newsletterId,',"',cur_send_date,'","',row_fairgate_sponsor_contact_email,'","',row_title,'","',receiver_orgtype,'","',row_fairgate_sponsor_contact_name,'"),');
							END IF;
							IF ((row_fairgate_invoice_contact_email != '') AND (row_fairgate_invoice_contact_email != row_fairgate_sponsor_contact_email) AND (row_fairgate_invoice_contact_email != row_fairgate_solution_contact_email)) THEN
								CASE
									WHEN (row_state = 'C') THEN
										SET receiver_orgtype = "C invoice";
									WHEN (row_state = 'CF') THEN
										IF (FIND_IN_SET(row_club_id,clientFreeActiveClubs)) THEN
											SET receiver_orgtype = "CFA invoice";
										ELSE
											SET receiver_orgtype = "CFI invoice";
										END IF;
								END CASE;
								SET insert_query_string = CONCAT(insert_query_string,'(',row_club_id,',',newsletterId,',"',cur_send_date,'","',row_fairgate_invoice_contact_email,'","',row_title,'","',receiver_orgtype,'","',row_fairgate_invoice_contact_name,'"),');
							END IF;
						END IF;
					END IF;
				END LOOP loop_receiver;
			CLOSE receiver_cursor;
		END BLOCK2;
		DROP TABLE IF EXISTS `newsletter_contacts`;

		IF (cur_last_spool_admin_receiver_id = 0) THEN
			DELETE FROM fg_admin_newsletter_receivers_log WHERE newsletter_id=newsletterId AND send_date=cur_send_date;
		END IF;

		IF (insert_query_string != '') THEN
			SET insert_query_string = TRIM(TRAILING ',' FROM insert_query_string);
			SET @qry2 = CONCAT('INSERT INTO fg_admin_newsletter_receivers_log(`club_id`,`newsletter_id`,`send_date`,`email`,`organization`,`org_type`,`contact_name`) VALUES ',insert_query_string);
			PREPARE stmt2 FROM @qry2; 
			EXECUTE stmt2;
			DEALLOCATE PREPARE stmt2; 
		END IF;

		DELETE FROM fg_admin_newsletter_receivers_log WHERE (newsletter_id=newsletterId AND send_date = cur_send_date AND email IN (SELECT email FROM fg_cn_newsletter_exclude_contacts WHERE newsletter_id=newsletterId));
		SET insert_query_string = '';
		BLOCK3: BEGIN
			DECLARE receiver_log_cursor CURSOR FOR SELECT `club_id`,`email`,`org_type` FROM (SELECT r.* FROM fg_admin_newsletter_receivers_log r WHERE r.newsletter_id = newsletterId AND r.send_date = cur_send_date ORDER BY FIELD(r.org_type, "C solution","C sponsor","C invoice","CFA solution","CFA sponsor","CFA invoice","CFI solution","CFI sponsor","CFI invoice","Federation client","Sub-federation client","Prospect","Subscriber")) AS test GROUP BY email;
			OPEN receiver_log_cursor;
				loop_receiver_log: LOOP
					FETCH receiver_log_cursor INTO receiver_club_id,receiver_email,receiver_orgtype;
					IF record_not_found THEN
						SET record_not_found = 0;
						LEAVE loop_receiver_log;
					END IF;
					IF (receiver_email != '') THEN
						SET receiver_orgtype = REPLACE(receiver_orgtype,'"','\\"');
						SET insert_query_string = CONCAT(insert_query_string,'(',receiver_club_id,',',newsletterId,',"',cur_send_date,'","',receiver_email,'","',receiver_orgtype,'",0),');
					END IF;
				END LOOP loop_receiver_log;
			CLOSE receiver_log_cursor;
		END BLOCK3;

		IF (cur_last_spool_admin_receiver_id = 0) THEN
			DELETE FROM fg_admin_newsletter_receivers WHERE newsletter_id=newsletterId AND send_date=cur_send_date;
		END IF;

		IF (insert_query_string != '') THEN
			SET insert_query_string = TRIM(TRAILING ',' FROM insert_query_string);
			SET @qry3 = CONCAT('INSERT INTO fg_admin_newsletter_receivers(`club_id`,`newsletter_id`,`send_date`,`email`,`org_type`,`is_sent`) VALUES ',insert_query_string);
			PREPARE stmt3 FROM @qry3; 
			EXECUTE stmt3;
			DEALLOCATE PREPARE stmt3; 
		END IF;

		SET salutation_text = '(CASE 
				WHEN (r.org_type = "C solution" || r.org_type = "CFA solution" || r.org_type = "CFI solution") THEN
                (
                 IF(
                    ((SELECT avt1.value FROM fg_club cl1 INNER JOIN fg_cm_contact AS c1 ON c1.id = cl1.fairgate_solution_contact INNER JOIN fg_cm_attribute_value_text AS avt1 ON c1.id = avt1.contact_id WHERE cl1.id = r.club_id AND avt1.attribute_id = 23) IS NOT NULL) && ((SELECT avt2.value FROM fg_club cl2 INNER JOIN fg_cm_contact AS c2 ON c2.id = cl2.fairgate_solution_contact INNER JOIN fg_cm_attribute_value_text AS avt2 ON c2.id = avt2.contact_id WHERE cl2.id = r.club_id AND avt2.attribute_id = 23) != ""),
                    (CASE WHEN ((SELECT avt3.value FROM fg_club cl3 INNER JOIN fg_cm_contact AS c3 ON c3.id = cl3.fairgate_solution_contact INNER JOIN fg_cm_attribute_value_text AS avt3 ON c3.id = avt3.contact_id WHERE cl3.id = r.club_id AND avt3.attribute_id = 72) = "male") THEN (SELECT CONCAT("Sehr geehrter Herr"," ",avt4.value) FROM fg_club cl4 INNER JOIN fg_cm_contact AS c4 ON c4.id = cl4.fairgate_solution_contact INNER JOIN fg_cm_attribute_value_text AS avt4 ON c4.id = avt4.contact_id WHERE cl4.id = r.club_id AND avt4.attribute_id = 23)
                          WHEN ((SELECT avt5.value FROM fg_club cl5 INNER JOIN fg_cm_contact AS c5 ON c5.id = cl5.fairgate_solution_contact INNER JOIN fg_cm_attribute_value_text AS avt5 ON c5.id = avt5.contact_id WHERE cl5.id = r.club_id AND avt5.attribute_id = 72) = "female") THEN (SELECT CONCAT("Sehr geehrte Frau"," ",avt6.value) FROM fg_club cl6 INNER JOIN fg_cm_contact AS c6 ON c6.id = cl6.fairgate_solution_contact INNER JOIN fg_cm_attribute_value_text AS avt6 ON c6.id = avt6.contact_id WHERE cl6.id = r.club_id AND avt6.attribute_id = 23)      
                          ELSE "Sehr geehrte Damen und Herren"    
                    END),
                    ("Sehr geehrte Damen und Herren")
                   )
                )
				WHEN (r.org_type = "C sponsor" || r.org_type = "CFA sponsor" || r.org_type = "CFI sponsor") THEN
                (
                 IF(
                    ((SELECT avt1.value FROM fg_club cl1 INNER JOIN fg_cm_contact AS c1 ON c1.id = cl1.fairgate_sponsor_contact INNER JOIN fg_cm_attribute_value_text AS avt1 ON c1.id = avt1.contact_id WHERE cl1.id = r.club_id AND avt1.attribute_id = 23) IS NOT NULL) && ((SELECT avt2.value FROM fg_club cl2 INNER JOIN fg_cm_contact AS c2 ON c2.id = cl2.fairgate_sponsor_contact INNER JOIN fg_cm_attribute_value_text AS avt2 ON c2.id = avt2.contact_id WHERE cl2.id = r.club_id AND avt2.attribute_id = 23) != ""),
                    (CASE WHEN ((SELECT avt3.value FROM fg_club cl3 INNER JOIN fg_cm_contact AS c3 ON c3.id = cl3.fairgate_sponsor_contact INNER JOIN fg_cm_attribute_value_text AS avt3 ON c3.id = avt3.contact_id WHERE cl3.id = r.club_id AND avt3.attribute_id = 72) = "male") THEN (SELECT CONCAT("Sehr geehrter Herr"," ",avt4.value) FROM fg_club cl4 INNER JOIN fg_cm_contact AS c4 ON c4.id = cl4.fairgate_sponsor_contact INNER JOIN fg_cm_attribute_value_text AS avt4 ON c4.id = avt4.contact_id WHERE cl4.id = r.club_id AND avt4.attribute_id = 23)
                          WHEN ((SELECT avt5.value FROM fg_club cl5 INNER JOIN fg_cm_contact AS c5 ON c5.id = cl5.fairgate_sponsor_contact INNER JOIN fg_cm_attribute_value_text AS avt5 ON c5.id = avt5.contact_id WHERE cl5.id = r.club_id AND avt5.attribute_id = 72) = "female") THEN (SELECT CONCAT("Sehr geehrte Frau"," ",avt6.value) FROM fg_club cl6 INNER JOIN fg_cm_contact AS c6 ON c6.id = cl6.fairgate_sponsor_contact INNER JOIN fg_cm_attribute_value_text AS avt6 ON c6.id = avt6.contact_id WHERE cl6.id = r.club_id AND avt6.attribute_id = 23)      
                          ELSE "Sehr geehrte Damen und Herren"    
                    END),
                    ("Sehr geehrte Damen und Herren")
                   )
                )
				WHEN (r.org_type = "C invoice" || r.org_type = "CFA invoice" || r.org_type = "CFI invoice") THEN
                (
                 IF(
                    ((SELECT avt1.value FROM fg_club cl1 INNER JOIN fg_cm_contact AS c1 ON c1.id = cl1.fairgate_invoice_contact INNER JOIN fg_cm_attribute_value_text AS avt1 ON c1.id = avt1.contact_id WHERE cl1.id = r.club_id AND avt1.attribute_id = 23) IS NOT NULL) && ((SELECT avt2.value FROM fg_club cl2 INNER JOIN fg_cm_contact AS c2 ON c2.id = cl2.fairgate_invoice_contact INNER JOIN fg_cm_attribute_value_text AS avt2 ON c2.id = avt2.contact_id WHERE cl2.id = r.club_id AND avt2.attribute_id = 23) != ""),
                    (CASE WHEN ((SELECT avt3.value FROM fg_club cl3 INNER JOIN fg_cm_contact AS c3 ON c3.id = cl3.fairgate_invoice_contact INNER JOIN fg_cm_attribute_value_text AS avt3 ON c3.id = avt3.contact_id WHERE cl3.id = r.club_id AND avt3.attribute_id = 72) = "male") THEN (SELECT CONCAT("Sehr geehrter Herr"," ",avt4.value) FROM fg_club cl4 INNER JOIN fg_cm_contact AS c4 ON c4.id = cl4.fairgate_invoice_contact INNER JOIN fg_cm_attribute_value_text AS avt4 ON c4.id = avt4.contact_id WHERE cl4.id = r.club_id AND avt4.attribute_id = 23)
                          WHEN ((SELECT avt5.value FROM fg_club cl5 INNER JOIN fg_cm_contact AS c5 ON c5.id = cl5.fairgate_invoice_contact INNER JOIN fg_cm_attribute_value_text AS avt5 ON c5.id = avt5.contact_id WHERE cl5.id = r.club_id AND avt5.attribute_id = 72) = "female") THEN (SELECT CONCAT("Sehr geehrte Frau"," ",avt6.value) FROM fg_club cl6 INNER JOIN fg_cm_contact AS c6 ON c6.id = cl6.fairgate_invoice_contact INNER JOIN fg_cm_attribute_value_text AS avt6 ON c6.id = avt6.contact_id WHERE cl6.id = r.club_id AND avt6.attribute_id = 23)      
                          ELSE "Sehr geehrte Damen und Herren"    
                    END),
                    ("Sehr geehrte Damen und Herren")
                   )
                )
				WHEN (r.org_type = "Subscriber") THEN
			   (
				IF(
                    ((SELECT s1.last_name FROM fg_admin_newsletter_subscribers s1 WHERE s1.email = r.email ORDER BY s1.id DESC LIMIT 1) IS NOT NULL) && ((SELECT s2.last_name FROM fg_admin_newsletter_subscribers s2 WHERE s2.email = r.email ORDER BY s2.id DESC LIMIT 1) != ""),
                    (CASE WHEN ((SELECT s3.gender FROM fg_admin_newsletter_subscribers s3 WHERE s3.email = r.email ORDER BY s3.id DESC LIMIT 1) = "male") THEN (SELECT CONCAT("Sehr geehrter Herr"," ",s4.last_name) FROM fg_admin_newsletter_subscribers s4 WHERE s4.email = r.email ORDER BY s4.id DESC LIMIT 1)
                          WHEN ((SELECT s5.gender FROM fg_admin_newsletter_subscribers s5 WHERE s5.email = r.email ORDER BY s5.id DESC LIMIT 1) = "female") THEN (SELECT CONCAT("Sehr geehrte Frau"," ",s6.last_name) FROM fg_admin_newsletter_subscribers s6 WHERE s6.email = r.email ORDER BY s6.id DESC LIMIT 1)      
                          ELSE "Sehr geehrte Damen und Herren"    
                    END),
                    ("Sehr geehrte Damen und Herren")
                   )
			   ) 
				ELSE
                (
                 IF(
                    ((SELECT mc1.last_name FROM fg_am_club_main_contact mc1 WHERE mc1.club_id = r.club_id) IS NOT NULL) && ((SELECT mc2.last_name FROM fg_am_club_main_contact mc2 WHERE mc2.club_id = r.club_id) != ""), 
                    (CASE WHEN ((SELECT mc3.gender FROM fg_am_club_main_contact AS mc3 WHERE mc3.club_id = r.club_id) = "M") THEN (SELECT CONCAT("Sehr geehrter Herr"," ",mc4.last_name) FROM fg_am_club_main_contact AS mc4 WHERE mc4.club_id = r.club_id)
                          WHEN ((SELECT mc5.gender FROM fg_am_club_main_contact AS mc5 WHERE mc5.club_id = r.club_id) = "F") THEN (SELECT CONCAT("Sehr geehrte Frau"," ",mc6.last_name) FROM fg_am_club_main_contact AS mc6 WHERE mc6.club_id = r.club_id)   
                          ELSE "Sehr geehrte Damen und Herren"
                    END),
                    ("Sehr geehrte Damen und Herren")
                   )
                )
			END)';

		SET @qry4 = CONCAT('INSERT INTO fg_mail_message(`newsletter_id`,`admin_receiver_id`,`email`,`email_flag`,`salutation`,`cron_instance`,`user_culture`)(SELECT "',newsletterId,'",r.id,r.email,r.org_type,',salutation_text,',((r.id%',max_cron_instance,')+1),"',default_user_culture,'" FROM fg_admin_newsletter_receivers r WHERE r.newsletter_id=',newsletterId,' AND r.send_date="',cur_send_date,'")'); 
		PREPARE stmt4 FROM @qry4; 
		EXECUTE stmt4;
		DEALLOCATE PREPARE stmt4;

		SELECT COUNT(*) INTO rows_inserted_in_spool FROM fg_mail_message WHERE newsletter_id=newsletterId;
		CASE
			WHEN (rows_inserted_in_spool < 1000) THEN
				UPDATE fg_mail_message SET priority=1 WHERE newsletter_id=newsletterId;
			WHEN (rows_inserted_in_spool < 2000) THEN
				UPDATE fg_mail_message SET priority=2 WHERE newsletter_id=newsletterId;
			WHEN (rows_inserted_in_spool < 5000) THEN
				UPDATE fg_mail_message SET priority=3 WHERE newsletter_id=newsletterId;
			WHEN (rows_inserted_in_spool < 10000) THEN
				UPDATE fg_mail_message SET priority=4 WHERE newsletter_id=newsletterId;
			ELSE
				UPDATE fg_mail_message SET priority=5 WHERE newsletter_id=newsletterId;
		END CASE;

 		UPDATE fg_cn_newsletter SET last_spool_admin_receiver_id=-1,is_cron=0 WHERE id=newsletterId;
	END BLOCK1;
    COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `insertIntoClubContactTable` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `insertIntoClubContactTable`(IN clubId INTEGER, contactId LONGTEXT)
BEGIN
	DECLARE cc_attribute_id, record_not_found, at_count INTEGER DEFAULT 0; 
	DECLARE cc_fieldtype TEXT DEFAULT "";
	DECLARE club_attribute_cursor CURSOR FOR SELECT ca.attribute_id, a.fieldtype FROM fg_cm_club_attribute AS ca LEFT JOIN fg_cm_attribute AS a ON ca.attribute_id = a.id WHERE ca.club_id = clubId;	
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;
    DECLARE EXIT HANDLER FOR SQLEXCEPTION, SQLWARNING
    BEGIN
        ROLLBACK;
    END;
	START TRANSACTION;

		SET @s = CONCAT('INSERT INTO `tablecontact',clubId, '` SELECT fg_cm_contact.id ');
		OPEN club_attribute_cursor;
			loop_attribute: LOOP
				FETCH club_attribute_cursor INTO cc_attribute_id, cc_fieldtype;
					IF record_not_found THEN
						SET record_not_found = 0;
						LEAVE loop_attribute;
					END IF;
					SET at_count = at_count + 1;
					CASE cc_fieldtype
						WHEN 'int' THEN
							BEGIN
								SET @s = CONCAT(@s, ',(select `fg_cm_attribute_value_int`.`value` AS `value` from `fg_cm_attribute_value_int` where (`fg_cm_attribute_value_int`.`contact_id` = fg_cm_contact.id) and (`fg_cm_attribute_value_int`.`attribute_id` = ',cc_attribute_id, '))');
							END;
						WHEN 'date' THEN
							BEGIN
								SET @s = CONCAT(@s, ',(select `fg_cm_attribute_value_date`.`value` AS `value` from `fg_cm_attribute_value_date` where (`fg_cm_attribute_value_date`.`contact_id` = fg_cm_contact.id) and (`fg_cm_attribute_value_date`.`attribute_id` = ',cc_attribute_id, '))');
							END;
						WHEN 'text' THEN
							BEGIN
								SET @s = CONCAT(@s, ',(select `fg_cm_attribute_value_text`.`value` AS `value` from `fg_cm_attribute_value_text` where (`fg_cm_attribute_value_text`.`contact_id` = fg_cm_contact.id) and (`fg_cm_attribute_value_text`.`attribute_id` = ',cc_attribute_id, '))');
							END;
					END CASE;
					
			END LOOP loop_attribute;	
		CLOSE club_attribute_cursor;
    SET @s = CONCAT(@s,' FROM fg_cm_contact WHERE fg_cm_contact.id IN(', contactId, ')');   
    PREPARE stmt FROM @s;
		EXECUTE stmt;				
	COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `insertLogForRestoredData` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `insertLogForRestoredData`()
BEGIN
	
	DECLARE record_not_found, contactId INTEGER DEFAULT 0;
	DECLARE attributeData TEXT DEFAULT "";

	
	DECLARE field_cursor CURSOR FOR SELECT `contact_id`, `71891` FROM `tablecontact1111` WHERE `71891` IS NOT NULL AND `71891`<>'';

	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;

	SET autocommit = 0;
	START TRANSACTION;

	OPEN field_cursor;
	loop_field: LOOP
		FETCH field_cursor INTO contactId, attributeData;

		IF record_not_found THEN
			SET record_not_found = 0;
			LEAVE loop_field;
		END IF;

		IF attributeData IS NULL THEN
			SET attributeData = "";
		END IF;

		
		INSERT INTO `fg_cm_change_log` (`contact_id`,`date`,`kind`,`field`,`value_before`,`value_after`,`changed_by`,`is_confirmed`,`confirmed_by`,`historical_id`,`is_historical`) VALUES (contactId,'2013-12-27 12:24:25','data','Notizen',NULL,attributeData,'1',NULL,'1',NULL,'0');

	END LOOP loop_field;
	CLOSE field_cursor;

	COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `insertNewsletterContactsToSpoolv4` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`fairgate`@`%` PROCEDURE `insertNewsletterContactsToSpoolv4`(IN `newsletterId` INT, IN `manualContactsQry` MEDIUMTEXT, IN `nonMandatoryQry` MEDIUMTEXT, IN `clubDefaultSystemLang` VARCHAR(2))
BEGIN
	DECLARE curSubscriberSelection VARCHAR(2);
	DECLARE curSendDate DATETIME;
	DECLARE curSalutation, curSalutationType, curNewsletterType, curPublishType, curLanguageSelection, langQry, languagesStr TEXT DEFAULT "";
	DECLARE qry1, qry2 MEDIUMTEXT DEFAULT "";
	DECLARE curClubId, curLastSpoolContactId, curIncludeFormerMembers, curRecepientList INTEGER DEFAULT 0;
	DECLARE recordNotFound, pos, rowsInsertedInSpool, islangCheck INTEGER DEFAULT 0;
-- 	Assign name for Mysql exception "General error: 1615 Prepared statement needs to be re-prepared"
	DECLARE mysqlPrepareException CONDITION FOR 1615;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET recordNotFound = 1;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		ROLLBACK;
	END;
	SET autocommit = 0;
	SET SESSION tmp_table_size = 67108864;
	SET SESSION max_heap_table_size = 67108864;
	START TRANSACTION;
	BLOCK1: BEGIN
		DECLARE EXIT HANDLER FOR mysqlPrepareException
		BEGIN
			ROLLBACK;
			UPDATE fg_cn_newsletter SET is_cron=0 WHERE id=newsletterId;
		END;
		SELECT `club_id`,`send_date`,`salutation_type`,`salutation`,`newsletter_type`,`publish_type`,`language_selection`,`last_spool_contact_id`,`is_subscriber_selection`,`include_former_members`,`recepient_list`  
		INTO curClubId,curSendDate,curSalutationType,curSalutation,curNewsletterType,curPublishType,curLanguageSelection,curLastSpoolContactId,curSubscriberSelection,curIncludeFormerMembers,curRecepientList FROM `fg_cn_newsletter` WHERE `id`=newsletterId;

		IF (curLanguageSelection = 'SELECTED') THEN
			SELECT CONCAT("'",GROUP_CONCAT(`language_code` SEPARATOR "','"),"'") INTO languagesStr FROM `fg_cn_newsletter_publish_lang` WHERE `newsletter_id`=newsletterId;
		END IF;

		IF (languagesStr IS NOT NULL AND languagesStr != '') THEN 
			SET langQry = CONCAT("WHERE (t.`lang` IN (",languagesStr,"))");
			SET islangCheck = 1;
		END IF;
-- 		BEFORE INSERTING TO fg_mail_message(spool) TABLE DELETE ENTRIES FROM fg_cn_newsletter_receiver_log TABLE FOR THIS newsletter_id
		IF (curLastSpoolContactId = 0) THEN
			DELETE FROM fg_cn_newsletter_receiver_log WHERE newsletter_id=newsletterId;
		END IF;

		IF (curPublishType = 'SUBSCRIPTION') THEN 
--                      INSERT TO fg_cn_newsletter_receiver_log TABLE WITH NON MANDATORY FILTER CRITERIA AND FORMER FEDERATION MEMBER IF SELECTED
                        IF (nonMandatoryQry != '' AND nonMandatoryQry IS NOT NULL) THEN
                                SET @qry1 = CONCAT("INSERT INTO `fg_cn_newsletter_receiver_log` (`contact_id`, `corres_lang`, `club_id`, `newsletter_id`, `email`, `salutation`,`email_field_ids`,`linked_contact_ids`) SELECT t.`contactId`,t.`lang`,t.`clubid`,t.`newsletterId`,t.`email`,t.`salutation`,t.`emailFieldId`,t.`linkedContactid` FROM (", nonMandatoryQry, ") AS t ",langQry," ON DUPLICATE KEY UPDATE `fg_cn_newsletter_receiver_log`.`contact_id` = CONCAT(`fg_cn_newsletter_receiver_log`.`contact_id`, IF(`fg_cn_newsletter_receiver_log`.`contact_id` != '', ',', ''), VALUES(contact_id)), `email_field_ids` = CONCAT(`email_field_ids`, IF(`email_field_ids` != '', ',', ''), VALUES(email_field_ids)), `linked_contact_ids` = CONCAT(`linked_contact_ids`, IF(`linked_contact_ids` != '', ',', ''), VALUES(linked_contact_ids))");
                                PREPARE stmt1 FROM @qry1;
                                EXECUTE stmt1 ;
                                DEALLOCATE PREPARE stmt1; 
                        END IF;
                        IF (curSubscriberSelection = '1') THEN
                                INSERT INTO `fg_cn_newsletter_receiver_log` (`subscriber_id`, `corres_lang`, `club_id`, `newsletter_id`, `email`, `salutation`,`email_field_ids`)  
                                SELECT `id`, clubDefaultSystemLang, `club_id`, newsletterId, `email`, IF((curSalutationType = 'INDIVIDUAL'), subscriberSalutationText(id, curClubId, clubDefaultSystemLang), curSalutation), "E-Mail" 
                                FROM `fg_cn_subscriber` WHERE `club_id`=curClubId 
                                ON DUPLICATE KEY UPDATE `fg_cn_newsletter_receiver_log`.`email` = VALUES(email);
                        END IF;
		ELSE
--          		INSERT TO fg_cn_newsletter_receiver_log TABLE WITH UPDATED MANDATORY RECEIVER LIST
                        IF (curRecepientList != '' AND curRecepientList IS NOT NULL) THEN 
                                INSERT INTO `fg_cn_newsletter_receiver_log` (`contact_id`, `corres_lang`, `club_id`, `newsletter_id`, `email`, `salutation`,`email_field_ids`,`linked_contact_ids`) 
                                SELECT `contact_id`, `corres_lang`, curClubId, newsletterId, `email`, IF((curSalutationType = 'INDIVIDUAL'),`salutation`, curSalutation),`email_field_id`,`linked_contact_id` 
                                                        FROM `fg_cn_recepients_mandatory` WHERE (`recepient_list_id` = curRecepientList AND IF((islangCheck = 1), FIND_IN_SET(`corres_lang`,(SELECT CONCAT(GROUP_CONCAT(`language_code` SEPARATOR ",")) FROM `fg_cn_newsletter_publish_lang` WHERE `newsletter_id`= newsletterId)),1))
                                                        ON DUPLICATE KEY UPDATE `fg_cn_newsletter_receiver_log`.`contact_id` = CONCAT(`fg_cn_newsletter_receiver_log`.`contact_id`, IF(`fg_cn_newsletter_receiver_log`.`contact_id` != '', ',', ''), VALUES(contact_id)),
                                `email_field_ids` = CONCAT(`email_field_ids`, IF(`email_field_ids` != '', ',', ''), VALUES(email_field_ids)),
                                `linked_contact_ids` = CONCAT(`linked_contact_ids`, IF(`linked_contact_ids` != '', ',', ''), VALUES(linked_contact_ids));
                        END IF;
--                      INSERT TO fg_cn_newsletter_receiver_log TABLE WITH ADDITIONAL MANUAL CONTACTS main/substitute emails
                        IF (manualContactsQry != '' AND manualContactsQry IS NOT NULL) THEN
                                SET @qry2 = CONCAT("INSERT INTO `fg_cn_newsletter_receiver_log` (`contact_id`, `corres_lang`, `club_id`, `newsletter_id`, `email`, `salutation`,`email_field_ids`,`linked_contact_ids`) SELECT t.`contactId`,t.`lang`,t.`clubid`,t.`newsletterId`,t.`email`,t.`salutation`,t.`emailFieldId`,t.`linkedContactid` FROM (", manualContactsQry, ") AS t ",langQry," ON DUPLICATE KEY UPDATE `fg_cn_newsletter_receiver_log`.`contact_id` = CONCAT(`fg_cn_newsletter_receiver_log`.`contact_id`, IF(`fg_cn_newsletter_receiver_log`.`contact_id` != '', ',', ''), VALUES(contact_id)), `email_field_ids` = CONCAT(`email_field_ids`, IF(`email_field_ids` != '', ',', ''), VALUES(email_field_ids)), `linked_contact_ids` = CONCAT(`linked_contact_ids`, IF(`linked_contact_ids` != '', ',', ''), VALUES(linked_contact_ids))");
                                PREPARE stmt2 FROM @qry2;
                                EXECUTE stmt2 ;
                                DEALLOCATE PREPARE stmt2; 
                        END IF;
		END IF;
-- 		IF ANY EXCLUDED EMAILS ARE THERE FOR THIS NEWSLETTER DELETE THEM FROM fg_cn_newsletter_receiver_log TABLE
                DELETE a FROM `fg_cn_newsletter_receiver_log` a JOIN `fg_cn_newsletter_exclude_contacts` b ON a.`newsletter_id` = b.`newsletter_id` where a.newsletter_id=newsletterId AND a.email=b.email AND a.salutation=b.salutation;

--              INSERT TO fg_mail_message WITH UNIQUE VALUES
                INSERT INTO `fg_mail_message` (`newsletter_id`, `email`, `cron_instance`, `receiver_log_id`) 
                (SELECT newsletterId, `email`, IF(((`fg_cn_newsletter_receiver_log`.`id` MOD 4) = 0),4,(`fg_cn_newsletter_receiver_log`.`id` MOD 4)),`fg_cn_newsletter_receiver_log`.`id` FROM `fg_cn_newsletter_receiver_log` 
                WHERE `newsletter_id`=newsletterId AND `is_sent` = 0);

-- 		TO PRIORITIZE NEWSLETTER
                SELECT COUNT(*) INTO rowsInsertedInSpool FROM fg_mail_message WHERE newsletter_id=newsletterId;
                CASE
--                      IF NO RECEIVER LOG ENTRY INSERTED TO SPOOL THEN SET NEWSLETTER STATUS TO DRAFT
                        WHEN (rowsInsertedInSpool = 0) THEN
                                UPDATE fg_cn_newsletter SET `status` = 'draft' WHERE id =newsletterId;
                        WHEN (rowsInsertedInSpool < 1000) THEN
                                UPDATE fg_mail_message SET priority=1 WHERE newsletter_id=newsletterId;
                        WHEN (rowsInsertedInSpool < 2000) THEN
                                UPDATE fg_mail_message SET priority=2 WHERE newsletter_id=newsletterId;
                        WHEN (rowsInsertedInSpool < 5000) THEN
                                UPDATE fg_mail_message SET priority=3 WHERE newsletter_id=newsletterId;
                        WHEN (rowsInsertedInSpool < 10000) THEN
                                UPDATE fg_mail_message SET priority=4 WHERE newsletter_id=newsletterId;
                        ELSE
                                UPDATE fg_mail_message SET priority=5 WHERE newsletter_id=newsletterId;
                END CASE;

-- 		AFTER ALL THE ENTRIES HAVE BEEN INSERTED IN SPOOL SET last_spool_contact_id=-1 AND is_cron=0 FOR THIS NEWSLETTER
                UPDATE fg_cn_newsletter SET last_spool_contact_id = -1, is_cron = 0 WHERE id=newsletterId;
	END BLOCK1;
    COMMIT; 
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `migrateActivity` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `migrateActivity`(OUT migrated_record TEXT, OUT sql_err TEXT)
BEGIN

DECLARE total_count, mig_id, mig_club_id INTEGER DEFAULT 0;
DECLARE error_line, prosp_name, mig_prospect_name, mig_activity_date, mig_type, mig_activity, mig_next_action_date, mig_next_action_type,
migrated_record, sql_err TEXT DEFAULT "";

DECLARE activity_cursor CURSOR FOR
SELECT `id`, TRIM(TRIM(BOTH '\r' FROM `prospect_name`)), TRIM(TRIM(BOTH '\r' FROM `activity_date`)), TRIM(TRIM(BOTH '\r' FROM `type`)),
TRIM(TRIM(BOTH '\r' FROM `activity`)), TRIM(TRIM(BOTH '\r' FROM `next_action_date`)), TRIM(TRIM(BOTH '\r' FROM `next_action_type`))
FROM `fg_migration_activities` WHERE `is_migrated` = 0 ORDER BY `id` LIMIT 0, 1000;

DECLARE EXIT HANDLER FOR NOT FOUND
BEGIN
    ROLLBACK;
    IF total_count = 0 THEN
        SET migrated_record = CONCAT("No records found for migration.");
    ELSE
        SET migrated_record = CONCAT("Total ", total_count," record(s) successfully migrated.");
    END IF;
    SELECT migrated_record;
END;

DECLARE EXIT HANDLER FOR SQLEXCEPTION, SQLWARNING
BEGIN
    ROLLBACK;
    SET migrated_record = CONCAT("Total ", total_count," record(s) successfully migrated.");
    SET sql_err = CONCAT("We had to rollback because of error in id ", error_line," of table fg_migration_activities. Please correct the data and proceed.");
    SELECT migrated_record, sql_err;
END;

BLOCK1: BEGIN

OPEN activity_cursor;

activity_loop: LOOP

START TRANSACTION;

FETCH activity_cursor INTO mig_id, mig_prospect_name, mig_activity_date, mig_type, mig_activity, mig_next_action_date, mig_next_action_type;

SET error_line = mig_id;

SET mig_club_id = (SELECT `id` FROM `fg_club` WHERE `title` = mig_prospect_name AND `is_deleted` = 0 LIMIT 1);

IF mig_club_id IS NOT NULL AND mig_club_id != '' THEN

    SET mig_activity_date = (SELECT STR_TO_DATE(mig_activity_date,'%d.%m.%Y %H:%i:%s'));
    IF mig_type = 1 THEN
        SET mig_type = (SELECT 'T');
    ELSEIF mig_type = 2 THEN
        SET mig_type = (SELECT 'E');
    ELSEIF mig_type = 3 THEN
        SET mig_type = (SELECT 'P');
    END IF;

    IF mig_next_action_date IS NOT NULL AND mig_next_action_date != '' THEN
        IF mig_next_action_type IS NOT NULL AND mig_next_action_type != '' THEN
            SET mig_next_action_date = (SELECT STR_TO_DATE(mig_next_action_date,'%d.%m.%Y %H:%i:%s'));
            IF mig_next_action_type = 1 THEN
                SET mig_next_action_type = (SELECT 'T');
            ELSEIF mig_next_action_type = 2 THEN
                SET mig_next_action_type = (SELECT 'E');
            ELSEIF mig_next_action_type = 3 THEN
                SET mig_next_action_type = (SELECT 'P');
            END IF;
        ELSE
            SET mig_next_action_date = (SELECT NULL);
            SET mig_next_action_type = (SELECT NULL);
        END IF;
    ELSE
        SET mig_next_action_date = (SELECT NULL);
        SET mig_next_action_type = (SELECT NULL);
    END IF;

    INSERT INTO `fg_am_activities` (`activity_date`, `activity_type`, `activity`, `next_action_date`, `next_action_type`, `contact_id`, `club_id`)
            VALUES (mig_activity_date, mig_type, mig_activity, mig_next_action_date, mig_next_action_type, 1, mig_club_id);

    SET total_count = total_count + 1;

END IF;

UPDATE `fg_migration_activities` SET `is_migrated` = 1 WHERE `id` = mig_id;

END LOOP activity_loop;

CLOSE activity_cursor;

END BLOCK1;

COMMIT;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `MigrateContact25000Data` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `MigrateContact25000Data`(IN clubId INT, OUT migrated_record TEXT, OUT sql_err TEXT)
BEGIN

DECLARE record_not_found, Con_Id, val_member_id, value_attribute_id, value_contact_id, total_count INTEGER DEFAULT 0;
DECLARE date_now DATETIME;
DECLARE error_line, Con_FirstName, Con_LastName, Con_Salutation, Con_Gender, Con_Email, Con_Phone, Con_Street, Con_City, 
Con_Zipcode, Con_PhoneH, Con_PhoneP, value_salutation, value_anredetext, value_gender, value_rand, value_salt, value_password, Format_LastLogin TEXT DEFAULT "";

DECLARE contact_cursor CURSOR FOR 
SELECT `id`, `FirstName`, `LastName`, `Salutation`, `Gender`, `Email`, `Phone`, `Street`, `City`, `Zipcode`, `PhoneH`, `PhoneP` 
FROM `fg_migration_contacts_25000_data` WHERE `is_migrated` = 0 ORDER BY `id` LIMIT 0, 1000;

DECLARE EXIT HANDLER FOR NOT FOUND
BEGIN
    ROLLBACK;
    IF total_count = 0 THEN
        SET migrated_record = CONCAT("No records found for migration.");
    ELSE
        SET migrated_record = CONCAT("Total ", total_count," record(s) successfully migrated.");
    END IF;
    SELECT migrated_record;
END;

DECLARE EXIT HANDLER FOR SQLEXCEPTION, SQLWARNING
BEGIN
    ROLLBACK;
    SET migrated_record = CONCAT("Total ", total_count," record(s) successfully migrated.<br />");
    SET sql_err = CONCAT("We had to rollback because of error in id ", error_line," of table fg_migration_contacts_25000_data. Please correct the data and proceed.");
    SELECT migrated_record, sql_err;
END;

SET date_now = NOW();

OPEN contact_cursor;

contact_loop: LOOP

FETCH contact_cursor INTO Con_Id, Con_FirstName, Con_LastName, Con_Salutation, Con_Gender, Con_Email, Con_Phone, Con_Street, Con_City, 
Con_Zipcode, Con_PhoneH, Con_PhoneP;

START TRANSACTION; 

SET error_line = Con_Id;

SET val_member_id = (SELECT MAX(`member_id`) + 1 FROM `fg_cm_contact` WHERE `club_id` = clubId);


INSERT INTO `fg_cm_contact` (`club_id`, `is_member`, `language_code`, `last_updated`, `member_id`, `created_at`) 
VALUES (clubId, 1, 'de', date_now, val_member_id, date_now);
SET value_contact_id = (SELECT LAST_INSERT_ID());


INSERT INTO `fg_cm_change_log` (`contact_id`, `date`, `field`, `value_after`, `changed_by`, `confirmed_by`) 
VALUES (value_contact_id, date_now, '', 'Member', '1', '1');


IF Con_FirstName IS NOT NULL AND Con_FirstName != '' THEN
    SET value_attribute_id = (SELECT attr.`id` FROM `fg_cm_attribute` AS attr 
    LEFT JOIN fg_cm_club_attribute AS club_attr ON attr.`id` = club_attr.`attribute_id` 
    WHERE club_attr.`club_id` = clubId AND attr.`fieldname` = 'Vorname' ORDER BY attr.`id` ASC LIMIT 1);

    IF value_attribute_id IS NOT NULL AND  value_attribute_id != '' THEN
        INSERT INTO `fg_cm_attribute_value_text` (`attribute_id`, `contact_id`, `value`) 
        VALUES (value_attribute_id, value_contact_id, Con_FirstName);

        INSERT INTO `fg_cm_change_log` (`contact_id`, `date`, `field`, `value_after`, `changed_by`, `confirmed_by`) 
        VALUES (value_contact_id, date_now, 'Vorname', Con_FirstName, '1', '1');
    END IF;
END IF;


IF Con_LastName IS NOT NULL AND Con_LastName != '' THEN
    SET value_attribute_id = (SELECT attr.`id` FROM `fg_cm_attribute` AS attr 
    LEFT JOIN fg_cm_club_attribute AS club_attr ON attr.`id` = club_attr.`attribute_id` 
    WHERE club_attr.`club_id` = clubId AND attr.`fieldname` = 'Nachname' ORDER BY attr.`id` ASC LIMIT 1);

    IF value_attribute_id IS NOT NULL AND  value_attribute_id != '' THEN
        INSERT INTO `fg_cm_attribute_value_text` (`attribute_id`, `contact_id`, `value`) 
        VALUES (value_attribute_id, value_contact_id, Con_LastName);

        INSERT INTO `fg_cm_change_log` (`contact_id`, `date`, `field`, `value_after`, `changed_by`, `confirmed_by`) 
        VALUES (value_contact_id, date_now, 'Nachname', Con_LastName, '1', '1');
    END IF;
END IF;


IF Con_Salutation IS NOT NULL AND Con_Salutation != '' THEN
    SET value_attribute_id = (SELECT attr.`id` FROM `fg_cm_attribute` AS attr 
    LEFT JOIN fg_cm_club_attribute AS club_attr ON attr.`id` = club_attr.`attribute_id` 
    WHERE club_attr.`club_id` = clubId AND attr.`fieldname` = 'Anrede' AND attr.`is_system_field` = 1 ORDER BY attr.`id` ASC LIMIT 1);
    IF value_attribute_id IS NOT NULL AND  value_attribute_id != '' THEN
        CASE
            WHEN Con_Salutation = 1 THEN
                SET value_salutation = 'Formal';
            WHEN Con_Salutation = 2 THEN
                SET value_salutation = 'Informal';
            ELSE
                SET value_salutation = '';
        END CASE;

        INSERT INTO `fg_cm_attribute_value_text` (`attribute_id`, `contact_id`, `value`) 
        VALUES (value_attribute_id, value_contact_id, value_salutation);

        INSERT INTO `fg_cm_change_log` (`contact_id`, `date`, `field`, `value_after`, `changed_by`, `confirmed_by`) 
        VALUES (value_contact_id, date_now, 'Anrede', value_salutation, '1', '1');
    END IF;
END IF;


IF Con_Gender IS NOT NULL AND Con_Gender != '' THEN
    SET value_attribute_id = (SELECT attr.`id` FROM `fg_cm_attribute` AS attr 
    LEFT JOIN fg_cm_club_attribute AS club_attr ON attr.`id` = club_attr.`attribute_id` 
    WHERE club_attr.`club_id` = clubId AND attr.`fieldname` = 'Geschlecht' ORDER BY attr.`id` ASC LIMIT 1);
    CASE
        WHEN Con_Gender = 1 THEN
            SET value_gender = 'male';
        WHEN Con_Gender = 2 THEN
            SET value_gender = 'female';
        ELSE
            SET value_gender = '';
    END CASE;
    IF value_attribute_id IS NOT NULL AND  value_attribute_id != '' AND  value_gender != '' THEN
        INSERT INTO `fg_cm_attribute_value_text` (`attribute_id`, `contact_id`, `value`) 
        VALUES (value_attribute_id, value_contact_id, value_gender);

        INSERT INTO `fg_cm_change_log` (`contact_id`, `date`, `field`, `value_after`, `changed_by`, `confirmed_by`) 
        VALUES (value_contact_id, date_now, 'Geschlecht', value_gender, '1', '1');
    END IF;
END IF;


IF Con_Email IS NOT NULL AND Con_Email != '' THEN
    SET value_attribute_id = (SELECT attr.`id` FROM `fg_cm_attribute` AS attr 
    LEFT JOIN fg_cm_club_attribute AS club_attr ON attr.`id` = club_attr.`attribute_id` 
    WHERE club_attr.`club_id` = clubId AND attr.`fieldname` = 'Primäre E-Mail' ORDER BY attr.`id` ASC LIMIT 1);

    IF value_attribute_id IS NOT NULL AND  value_attribute_id != '' THEN
        INSERT INTO `fg_cm_attribute_value_text` (`attribute_id`, `contact_id`, `value`) 
        VALUES (value_attribute_id, value_contact_id, Con_Email);

        INSERT INTO `fg_cm_change_log` (`contact_id`, `date`, `field`, `value_after`, `changed_by`, `confirmed_by`) 
        VALUES (value_contact_id, date_now, 'Primäre E-Mail', Con_Email, '1', '1');
    END IF;
END IF;


IF Con_Phone IS NOT NULL AND Con_Phone != '' THEN
    SET value_attribute_id = (SELECT attr.`id` FROM `fg_cm_attribute` AS attr 
    LEFT JOIN fg_cm_club_attribute AS club_attr ON attr.`id` = club_attr.`attribute_id` 
    WHERE club_attr.`club_id` = clubId AND attr.`fieldname` = 'Mobile' ORDER BY attr.`id` ASC LIMIT 1);

    IF value_attribute_id IS NOT NULL AND  value_attribute_id != '' THEN
        INSERT INTO `fg_cm_attribute_value_text` (`attribute_id`, `contact_id`, `value`) 
        VALUES (value_attribute_id, value_contact_id, Con_Phone);

        INSERT INTO `fg_cm_change_log` (`contact_id`, `date`, `field`, `value_after`, `changed_by`, `confirmed_by`) 
        VALUES (value_contact_id, date_now, 'Mobile', Con_Phone, '1', '1');
    END IF;
END IF;


IF Con_Street IS NOT NULL AND Con_Street != '' THEN
    SET value_attribute_id = (SELECT attr.`id` FROM `fg_cm_attribute` AS attr 
    LEFT JOIN fg_cm_club_attribute AS club_attr ON attr.`id` = club_attr.`attribute_id` 
    WHERE club_attr.`club_id` = clubId AND attr.`fieldname` = 'Strasse' ORDER BY attr.`id` ASC LIMIT 1);

    IF value_attribute_id IS NOT NULL AND  value_attribute_id != '' THEN
        INSERT INTO `fg_cm_attribute_value_text` (`attribute_id`, `contact_id`, `value`) 
        VALUES (value_attribute_id, value_contact_id, Con_Street);

        INSERT INTO `fg_cm_change_log` (`contact_id`, `date`, `field`, `value_after`, `changed_by`, `confirmed_by`) 
        VALUES (value_contact_id, date_now, 'Strasse', Con_Street, '1', '1');
    END IF;
END IF;


IF Con_City IS NOT NULL AND Con_City != '' THEN
    SET value_attribute_id = (SELECT attr.`id` FROM `fg_cm_attribute` AS attr 
    LEFT JOIN fg_cm_club_attribute AS club_attr ON attr.`id` = club_attr.`attribute_id` 
    WHERE club_attr.`club_id` = clubId AND attr.`fieldname` = 'Ort' ORDER BY attr.`id` ASC LIMIT 1);

    IF value_attribute_id IS NOT NULL AND  value_attribute_id != '' THEN
        INSERT INTO `fg_cm_attribute_value_text` (`attribute_id`, `contact_id`, `value`) 
        VALUES (value_attribute_id, value_contact_id, Con_City);

        INSERT INTO `fg_cm_change_log` (`contact_id`, `date`, `field`, `value_after`, `changed_by`, `confirmed_by`) 
        VALUES (value_contact_id, date_now, 'Ort', Con_City, '1', '1');
    END IF;
END IF;


IF Con_Zipcode IS NOT NULL AND Con_Zipcode != '' THEN
    SET value_attribute_id = (SELECT attr.`id` FROM `fg_cm_attribute` AS attr 
    LEFT JOIN fg_cm_club_attribute AS club_attr ON attr.`id` = club_attr.`attribute_id` 
    WHERE club_attr.`club_id` = clubId AND attr.`fieldname` = 'PLZ' ORDER BY attr.`id` ASC LIMIT 1);

    IF value_attribute_id IS NOT NULL AND  value_attribute_id != '' THEN
        INSERT INTO `fg_cm_attribute_value_text` (`attribute_id`, `contact_id`, `value`) 
        VALUES (value_attribute_id, value_contact_id, Con_Zipcode);

        INSERT INTO `fg_cm_change_log` (`contact_id`, `date`, `field`, `value_after`, `changed_by`, `confirmed_by`) 
        VALUES (value_contact_id, date_now, 'PLZ', Con_Zipcode, '1', '1');
    END IF;
END IF;


IF Con_PhoneH IS NOT NULL AND Con_PhoneH != '' THEN
    SET value_attribute_id = (SELECT attr.`id` FROM `fg_cm_attribute` AS attr 
    LEFT JOIN fg_cm_club_attribute AS club_attr ON attr.`id` = club_attr.`attribute_id` 
    WHERE club_attr.`club_id` = clubId AND attr.`fieldname` = 'Telefon P' ORDER BY attr.`id` ASC LIMIT 1);

    IF value_attribute_id IS NOT NULL AND  value_attribute_id != '' THEN
        INSERT INTO `fg_cm_attribute_value_text` (`attribute_id`, `contact_id`, `value`) 
        VALUES (value_attribute_id, value_contact_id, Con_PhoneH);

        INSERT INTO `fg_cm_change_log` (`contact_id`, `date`, `field`, `value_after`, `changed_by`, `confirmed_by`) 
        VALUES (value_contact_id, date_now, 'Telefon P', Con_PhoneH, '1', '1');
    END IF;
END IF;


IF Con_PhoneP IS NOT NULL AND Con_PhoneP != '' THEN
    SET value_attribute_id = (SELECT attr.`id` FROM `fg_cm_attribute` AS attr 
    LEFT JOIN fg_cm_club_attribute AS club_attr ON attr.`id` = club_attr.`attribute_id` 
    WHERE club_attr.`club_id` = clubId AND attr.`fieldname` = 'Telefon G' ORDER BY attr.`id` ASC LIMIT 1);

    IF value_attribute_id IS NOT NULL AND  value_attribute_id != '' THEN
        INSERT INTO `fg_cm_attribute_value_text` (`attribute_id`, `contact_id`, `value`) 
        VALUES (value_attribute_id, value_contact_id, Con_PhoneP);

        INSERT INTO `fg_cm_change_log` (`contact_id`, `date`, `field`, `value_after`, `changed_by`, `confirmed_by`) 
        VALUES (value_contact_id, date_now, 'Telefon G', Con_PhoneP, '1', '1');
    END IF;
END IF;


IF Con_Email IS NOT NULL AND Con_Email != '' THEN
    SET value_rand = (SELECT SUBSTRING(MD5(RAND()) FROM 1 FOR 6));
    SET value_salt = (SELECT MD5(value_rand));
    SET value_password = (SELECT SHA1(value_salt));
    IF Con_LastName IS NULL OR  Con_LastName = '' THEN
        SET Con_LastName = '';
    END IF;
    IF Con_FirstName IS NULL OR  Con_FirstName = '' THEN
        SET Con_FirstName = '';
    END IF;
    IF Format_LastLogin IS NULL OR  Format_LastLogin = '' THEN
        SET Format_LastLogin = NULL;
    END IF;

    INSERT INTO `sf_guard_user` (`first_name`, `last_name`, `username`, `email_address`, `salt`, `password`, `last_login`, `created_at`, 
    `updated_at`, `contact_id`) VALUES (Con_LastName, Con_FirstName, Con_Email, Con_Email, value_salt, value_password, Format_LastLogin, date_now, date_now, value_contact_id);
END IF;

UPDATE `fg_migration_contacts_25000_data` SET `is_migrated` = 1 WHERE `id` = Con_Id;

SET total_count = total_count + 1;

COMMIT;

END LOOP contact_loop;

CLOSE contact_cursor;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `MigrateContactNotes` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `MigrateContactNotes`()
BEGIN

DECLARE mg_notes_id, mg_contact_id, mg_notes_date, mg_notes_note, mg_created_by TEXT DEFAULT "";
DECLARE record_not_found INTEGER DEFAULT 0; 
DECLARE notes_id INTEGER DEFAULT 0; 
DECLARE CheckExists INTEGER DEFAULT 0; 
DECLARE exec_qry TEXT;
DECLARE logquery TEXT DEFAULT '';
DECLARE mg_notes_cursor CURSOR FOR 
SELECT TRIM(TRIM(BOTH '\r' FROM`no`)),TRIM(TRIM(BOTH '\r' FROM`Id`)),TRIM(TRIM(BOTH '\r' FROM `Date`)),TRIM(TRIM(BOTH '\r' FROM `Note`)),
TRIM(TRIM(BOTH '\r' FROM `created_by`)) FROM `cm_contact_notes`;


DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;

OPEN mg_notes_cursor;

	mg_notes_loop: LOOP

		FETCH mg_notes_cursor INTO notes_id,mg_contact_id, mg_notes_date, mg_notes_note, mg_created_by;
		IF record_not_found THEN
				SET record_not_found = 0;
				LEAVE mg_notes_loop;
			END IF;
		START TRANSACTION;
		
		SELECT count(*) INTO CheckExists from fg_cm_contact WHERE id = mg_contact_id AND club_id = 920;
		IF (CheckExists > 0) THEN 
			
			INSERT INTO `fg_cm_notes` (`id`,`contact_id`,`date`,`note`,`created_by`)
			VALUES('', mg_contact_id, mg_notes_date, mg_notes_note, mg_created_by);

			SET @logquery = CONCAT("INSERT INTO fg_cm_change_log (`date`, `changed_by`, `confirmed_by`, `contact_id`,`kind`, `value_after`) VALUES ('",mg_notes_date,"', ",mg_created_by,",",mg_created_by,",",mg_contact_id,", 'notes', '",mg_notes_note,"');");
			PREPARE exec_qry FROM @logquery;
			EXECUTE exec_qry ;
			DEALLOCATE PREPARE exec_qry;
			
			UPDATE `cm_contact_notes` SET `is_updated` = 1 WHERE `id` =notes_id;
		
		END IF; 
		
		COMMIT;

	END LOOP mg_notes_loop;

CLOSE mg_notes_cursor;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `migrateDataToInvAddrStep1` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `migrateDataToInvAddrStep1`()
BEGIN

DECLARE record_not_found, total_count, attr_cont_id, attr_club_id, attr_strasse_cnt, attr_ort_cnt, attr_kanton_cnt
, attr_plz_cnt, attr_land_cnt, attr_postfach_cnt INTEGER DEFAULT 0;
DECLARE attr_strasse, attr_ort, attr_kanton, attr_plz, attr_land, attr_postfach TEXT DEFAULT "";

DECLARE attr_strasse_id INTEGER DEFAULT 47;
DECLARE attr_ort_id INTEGER DEFAULT 77;
DECLARE attr_kanton_id INTEGER DEFAULT 78;
DECLARE attr_plz_id INTEGER DEFAULT 79;
DECLARE attr_land_id INTEGER DEFAULT 106;
DECLARE attr_postfach_id INTEGER DEFAULT 71785;

DECLARE contact_cursor CURSOR FOR
SELECT cont.`id`, cont.`club_id` FROM `fg_cm_contact` cont INNER JOIN `fg_club` club ON club.`id` = cont.`club_id`
WHERE cont.`is_permanent_delete` = 0 AND cont.`club_id` != 1 AND club.`is_deleted` = 0 AND (club.`state` = 'C' OR club.`state` = 'CF' OR club.`state` = 'D')
ORDER BY cont.`club_id` LIMIT 150000, 50000;

DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
    SELECT CONCAT('Error in contact', attr_cont_id);
    ROLLBACK;
END;

START TRANSACTION;

BLOCK1: BEGIN
    OPEN contact_cursor;
        contact_id_one: LOOP
            FETCH contact_cursor INTO attr_cont_id, attr_club_id;
            IF record_not_found THEN
                SET record_not_found = 0;
                LEAVE contact_id_one;
            END IF;

            SET attr_strasse_cnt = (SELECT COUNT(`id`) FROM  `fg_cm_attribute_value_text` WHERE `contact_id` = attr_cont_id AND `attribute_id` = attr_strasse_id LIMIT 1);
            IF attr_strasse_cnt = 1 THEN
                SET attr_strasse = (SELECT `value` FROM  `fg_cm_attribute_value_text` WHERE `contact_id` = attr_cont_id AND `attribute_id` = attr_strasse_id LIMIT 1);
            ELSE
                SET attr_strasse = (SELECT 'no_value');
            END IF;

            SET attr_ort_cnt = (SELECT COUNT(`id`) FROM  `fg_cm_attribute_value_text` WHERE `contact_id` = attr_cont_id AND `attribute_id` = attr_ort_id LIMIT 1);
            IF attr_ort_cnt = 1 THEN
                SET attr_ort = (SELECT `value` FROM  `fg_cm_attribute_value_text` WHERE `contact_id` = attr_cont_id AND `attribute_id` = attr_ort_id LIMIT 1);
            ELSE
                SET attr_ort = (SELECT 'no_value');
            END IF;

            SET attr_kanton_cnt = (SELECT COUNT(`id`) FROM  `fg_cm_attribute_value_text` WHERE `contact_id` = attr_cont_id AND `attribute_id` = attr_kanton_id LIMIT 1);
            IF attr_kanton_cnt = 1 THEN
                SET attr_kanton = (SELECT `value` FROM  `fg_cm_attribute_value_text` WHERE `contact_id` = attr_cont_id AND `attribute_id` = attr_kanton_id LIMIT 1);
            ELSE
                SET attr_kanton = (SELECT 'no_value');
            END IF;

            SET attr_plz_cnt = (SELECT COUNT(`id`) FROM  `fg_cm_attribute_value_text` WHERE `contact_id` = attr_cont_id AND `attribute_id` = attr_plz_id LIMIT 1);
            IF attr_plz_cnt = 1 THEN
                SET attr_plz = (SELECT `value` FROM  `fg_cm_attribute_value_text` WHERE `contact_id` = attr_cont_id AND `attribute_id` = attr_plz_id LIMIT 1);
            ELSE
                SET attr_plz = (SELECT 'no_value');
            END IF;

            SET attr_land_cnt = (SELECT COUNT(`id`) FROM  `fg_cm_attribute_value_text` WHERE `contact_id` = attr_cont_id AND `attribute_id` = attr_land_id LIMIT 1);
            IF attr_land_cnt = 1 THEN
                SET attr_land = (SELECT `value` FROM  `fg_cm_attribute_value_text` WHERE `contact_id` = attr_cont_id AND `attribute_id` = attr_land_id LIMIT 1);
            ELSE
                SET attr_land = (SELECT 'no_value');
            END IF;

            SET attr_postfach_cnt = (SELECT COUNT(`id`) FROM  `fg_cm_attribute_value_text` WHERE `contact_id` = attr_cont_id AND `attribute_id` = attr_postfach_id LIMIT 1);
            IF attr_postfach_cnt = 1 THEN
                SET attr_postfach = (SELECT `value` FROM  `fg_cm_attribute_value_text` WHERE `contact_id` = attr_cont_id AND `attribute_id` = attr_postfach_id LIMIT 1);
            ELSE
                SET attr_postfach = (SELECT 'no_value');
            END IF;

            INSERT INTO `fg_migration_inv_address` (`contact_id`, `club_id`, `strasse`, `ort`, `kanton`, `plz`, `land`, `postfach`)
            VALUES (attr_cont_id, attr_club_id, attr_strasse, attr_ort, attr_kanton, attr_plz, attr_land, attr_postfach);

            SET total_count = total_count + 1;
        END LOOP contact_id_one;
    CLOSE contact_cursor;
END BLOCK1;

SELECT attr_cont_id, attr_club_id, attr_strasse, attr_ort, attr_kanton, attr_plz, attr_land, attr_postfach;

COMMIT;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `migrateDataToInvAddrStep2` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `migrateDataToInvAddrStep2`()
BEGIN

DECLARE record_not_found, total_count, attr_id, attr_cont_id, attr_club_id INTEGER DEFAULT 0;
DECLARE attr_strasse, attr_ort, attr_kanton, attr_plz, attr_land, attr_postfach, insert_query, exec_qry TEXT DEFAULT "";

DECLARE attr_strasse_id INTEGER DEFAULT 71873;
DECLARE attr_plz_id INTEGER DEFAULT 71874;
DECLARE attr_ort_id INTEGER DEFAULT 71875;
DECLARE attr_kanton_id INTEGER DEFAULT 71876;
DECLARE attr_land_id INTEGER DEFAULT 71877;
DECLARE attr_postfach_id INTEGER DEFAULT 71878;


DECLARE contact_cursor CURSOR FOR
SELECT `id`, `contact_id`, `club_id`, `strasse`, `ort`, `kanton`, `plz`, `land`, `postfach`  FROM `fg_migration_inv_address` WHERE `is_migrated` = 0 LIMIT 0, 50000;

DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN

    SELECT CONCAT('Error in contact - ', attr_cont_id);
    ROLLBACK;
END;

START TRANSACTION;

BLOCK1: BEGIN
    OPEN contact_cursor;
        contact_id_one: LOOP
            FETCH contact_cursor INTO attr_id, attr_cont_id, attr_club_id, attr_strasse, attr_ort, attr_kanton, attr_plz, attr_land, attr_postfach;
            IF record_not_found THEN
                SET record_not_found = 0;
                LEAVE contact_id_one;
            END IF;

            IF attr_cont_id IS NOT NULL AND attr_cont_id != '' THEN
                IF attr_strasse != 'no_value' THEN
                    INSERT INTO `fg_cm_attribute_value_text` (`attribute_id`, `contact_id`, `value`) 
                    VALUES (attr_strasse_id, attr_cont_id, REPLACE(attr_strasse, "'", "''"));

                    IF attr_club_id IS NOT NULL AND attr_club_id != '' THEN
                        SET @insert_query = CONCAT("UPDATE `tablecontact", attr_club_id, "` SET `", attr_strasse_id, "` = '", REPLACE(attr_strasse, "'", "''"), "' WHERE `contact_id` = ", attr_cont_id);
                        PREPARE exec_qry FROM @insert_query;
                        EXECUTE exec_qry ;
                        DEALLOCATE PREPARE exec_qry;
                    END IF;
                END IF;

                IF attr_plz != 'no_value' THEN
                    INSERT INTO `fg_cm_attribute_value_text` (`attribute_id`, `contact_id`, `value`) 
                    VALUES (attr_plz_id, attr_cont_id, REPLACE(attr_plz, "'", "''"));

                    IF attr_club_id IS NOT NULL AND attr_club_id != '' THEN
                        SET @insert_query = CONCAT("UPDATE `tablecontact", attr_club_id, "` SET `", attr_plz_id, "` = '", REPLACE(attr_plz, "'", "''"), "' WHERE `contact_id` = ", attr_cont_id);
                        PREPARE exec_qry FROM @insert_query;
                        EXECUTE exec_qry ;
                        DEALLOCATE PREPARE exec_qry;
                    END IF;
                END IF;

                IF attr_ort != 'no_value' THEN
                    INSERT INTO `fg_cm_attribute_value_text` (`attribute_id`, `contact_id`, `value`) 
                    VALUES (attr_ort_id, attr_cont_id, REPLACE(attr_ort, "'", "''"));

                    IF attr_club_id IS NOT NULL AND attr_club_id != '' THEN
                        SET @insert_query = CONCAT("UPDATE `tablecontact", attr_club_id, "` SET `", attr_ort_id, "` = '", REPLACE(attr_ort, "'", "''"), "' WHERE `contact_id` = ", attr_cont_id);
                        PREPARE exec_qry FROM @insert_query;
                        EXECUTE exec_qry ;
                        DEALLOCATE PREPARE exec_qry;
                    END IF;
                END IF;

                IF attr_kanton != 'no_value' THEN
                    INSERT INTO `fg_cm_attribute_value_text` (`attribute_id`, `contact_id`, `value`) 
                    VALUES (attr_kanton_id, attr_cont_id, REPLACE(attr_kanton, "'", "''"));

                    IF attr_club_id IS NOT NULL AND attr_club_id != '' THEN
                        SET @insert_query = CONCAT("UPDATE `tablecontact", attr_club_id, "` SET `", attr_kanton_id, "` = '", REPLACE(attr_kanton, "'", "''"), "' WHERE `contact_id` = ", attr_cont_id);
                        PREPARE exec_qry FROM @insert_query;
                        EXECUTE exec_qry ;
                        DEALLOCATE PREPARE exec_qry;
                    END IF;
                END IF;

                IF attr_land != 'no_value' THEN
                    INSERT INTO `fg_cm_attribute_value_text` (`attribute_id`, `contact_id`, `value`) 
                    VALUES (attr_land_id, attr_cont_id, REPLACE(attr_land, "'", "''"));

                    IF attr_club_id IS NOT NULL AND attr_club_id != '' THEN
                        SET @insert_query = CONCAT("UPDATE `tablecontact", attr_club_id, "` SET `", attr_land_id, "` = '", REPLACE(attr_land, "'", "''"), "' WHERE `contact_id` = ", attr_cont_id);
                        PREPARE exec_qry FROM @insert_query;
                        EXECUTE exec_qry ;
                        DEALLOCATE PREPARE exec_qry;
                    END IF;
                END IF;

                IF attr_postfach != 'no_value' THEN
                    INSERT INTO `fg_cm_attribute_value_text` (`attribute_id`, `contact_id`, `value`) 
                    VALUES (attr_postfach_id, attr_cont_id, REPLACE(attr_postfach, "'", "''"));

                    IF attr_club_id IS NOT NULL AND attr_club_id != '' THEN
                        SET @insert_query = CONCAT("UPDATE `tablecontact", attr_club_id, "` SET `", attr_postfach_id, "` = '", REPLACE(attr_postfach, "'", "''"), "' WHERE `contact_id` = ", attr_cont_id);
                        PREPARE exec_qry FROM @insert_query;
                        EXECUTE exec_qry ;
                        DEALLOCATE PREPARE exec_qry;
                    END IF;
                END IF;
            END IF;

            SET total_count = total_count + 1;
            UPDATE `fg_migration_inv_address` SET `is_migrated` = 1 WHERE `id` = attr_id;
        END LOOP contact_id_one;
    CLOSE contact_cursor;
END BLOCK1;

SELECT CONCAT('Total ', total_count, ' records updated.');

COMMIT;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `MigratePcToCompany` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `MigratePcToCompany`(IN clubId INT, OUT migrated_record TEXT, OUT sql_err TEXT)
BEGIN

    DECLARE value_contact_id, record_not_found INTEGER DEFAULT 0;
    DECLARE date_now DATETIME DEFAULT NOW();
    DECLARE value_attr TEXT DEFAULT "";

    DECLARE contact_cursor CURSOR FOR 
    SELECT `id` FROM `fg_cm_contact` WHERE `club_id` = clubId AND `is_company` = 0 AND `is_draft` = 0 AND `is_deleted` = 0 AND `is_permanent_delete` = 0 ;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;

    DECLARE EXIT HANDLER FOR SQLEXCEPTION, SQLWARNING
    BEGIN
        ROLLBACK;

        SET sql_err = CONCAT("Sql Error");

        SELECT sql_err;
    END;

    BLOCK1: BEGIN
        OPEN contact_cursor;
            contact_loop: LOOP
                FETCH contact_cursor INTO value_contact_id;
                IF record_not_found THEN
                    SET record_not_found = 0;
                    LEAVE contact_loop;
                END IF;

                BLOCK2: BEGIN
                    DECLARE attr_cursor CURSOR FOR
                    SELECT attr_val.`value` FROM `fg_cm_attribute_value_text` AS attr_val 
                    LEFT JOIN `fg_cm_attribute` AS attr ON attr_val.`attribute_id` = attr.`id` 
                    WHERE attr_val.`contact_id` = value_contact_id AND attr_val.`attribute_id` = 2 
                    ORDER BY attr_val.`id` ASC LIMIT 1;
                    OPEN attr_cursor;
                        attr_loop: LOOP
                            FETCH attr_cursor INTO value_attr;
                            IF record_not_found THEN
                                SET record_not_found = 0;
                                LEAVE attr_loop;
                            END IF;

                            START TRANSACTION;
                                INSERT INTO `fg_cm_attribute_value_text` (`attribute_id`, `contact_id`, `value`) 
                                VALUES (9, value_contact_id, value_attr);

                                INSERT INTO `fg_cm_change_log` (`contact_id`, `date`, `field`, `value_after`, `changed_by`, `confirmed_by`) 
                                VALUES (value_contact_id, date_now, 'Firma', value_attr, '1', '1');
                            COMMIT;
                        END LOOP attr_loop;
                    CLOSE attr_cursor;
                END BLOCK2;

                START TRANSACTION;

                    
                    UPDATE `fg_cm_contact` SET `last_updated` = date_now, `is_company` = 1, `has_main_contact_address` = 1 WHERE `id` = value_contact_id;

                    
                    
                    

                COMMIT;
            END LOOP contact_loop;
        CLOSE contact_cursor;
    END BLOCK1;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `MigratePcToSubscriber` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `MigratePcToSubscriber`(IN clubId INT, OUT migrated_record TEXT, OUT sql_err TEXT)
BEGIN

    DECLARE total_count, value_contact_id, value_user_id, value_linked_contact_id INTEGER DEFAULT 0;
    DECLARE date_now DATETIME DEFAULT NOW();
    DECLARE error_line TEXT DEFAULT "";

    DECLARE contact_cursor CURSOR FOR 
    SELECT `id` FROM `fg_cm_contact` WHERE `club_id` = clubId AND `id` IN (187837,187839,187841,187842,187846,187847,187848,187851,187852,187858,187863,187865,187867,187868,187869,187870,187871,187873,187874,187877,187878,187882,187883,187884,187885,187886,187887,187888,187889,187893,187894,187895,187897,187898,187899,187902,187903,187904,187906,187909,187911,187912,187914,187915,187917,187920,187921,187922,187924,187925,187926,187928,187929,187930,187931,187933,187934,187935,187936,187937,187938,187939,187940,187941,187944,187945,187946,187947,187948,187949,187951,187952,187953,187954,187956,187957,187960,187961,187962,187964,187965,187966,187970,187971,187975,187976,187977,187978,187979,187980,187982,187983,187985,187986,187987,187988,187990,187991,187992,187993,187994,187997,187998,188003,188004,188005,188006,188007,188008,188009,188010,188011,188012,188013,188014,188015,188016,188018,188019,188020,188021,188022,188023,188024,188025,188028,188029,188030,188031,188033,188034,188036,188037,188038,188040,188041,188042,188043,188044,188049,188050,188051,188052,188053,188054,188056,188057,188058,188059,188061,188062,188063,188064,188065,188066,188068,188069,188070,188073,188074,188077,188078,188079,188081,188082,188083,188084,188085,188086,188087,188089,188090,188092,188093,188094,188096,188097,188098,188099,188100,188101,188102,188103,188104,188105,188107,188108,188109,188110,188111,188113,188115,188118,188119,188120,188121,188122,188124,188125,188127,188128,188130,188131,188132,188133,188134,188136,188137,188138,188139,188140,188141,188142,188144,188147,188148,188150,188152,188153,188155,188156,188157,188159,188161,188163,188164,188165,188166,188167,188169,188172,188173,188174,188176,188177,188179,188180,188182,188183,188187,188188,188190,188192,188193,188194,188195,188196,188199,188200,188201,188202,188203,188205,188206,188208,188209,188211,188213,188214,188215,188218,188219,188220,188224,188228,188229,188231,188232,188233,188234,188235,188236,188237,188239,188240,188241,188243,188245,188246,188247,188249,188250,188251,188252,188253,188255,188256,188261,188264,188265,188266,188267,188268,188269,188270,188273,188274,188275,188276,188277,188278,188282,188283,188287,188288,188289,188291,188292,188293,188295,188300,188301,188302,188303,188304,188305,188306,188307,188308,188309,188310,188311,188312,188314,188316,188317,188318,188319,188320,188321,188322,188324,188326,188328,188330,188331,188332,188333,188334,188335,188338,188339,188340,188341,188342,188344,188345,188346,188347,188351,188352,188353,188355,188357,188361,188362,188364,188365,188367,188368,188370,188371,188373,188375,188376,188377,188412,188413,188414,188415,189456,189458,189459,189460,189461,189462,189464,189466,189467,189469,189470,189471,189472,189473,189474,189475,189476,189477,189478,189479,189480,189481,189482,189483,189484,189485,189487,189488,189490,189491,189494,189495,189496,189497,189498,189499,189500,189501,189507,189511,189527,189528,189531,189537,189549,189567,189956,189959,189963,189970,189971,189975,189978,189992,189993,189994,189995,189996,189997,189998,189999,190000,190001,190002,190003,190004,190005,190006,190007,190008,190009,190010,190011,190012,190013,190014,190015,190016,190017,190018,190019,190020,190021,190022,190023,190024,190025,190026,190028,190029,190030,190031,190032,190033,190034,190036,190037,190038,190039,190040,190041,190042,190094,190101,190102,190103,190107,190108,190115,190116,190120,190126,190130,190134,190136,190137,190140,190141,190142,190143,190147,190151,190158,190159,190168,190169,190170,190171,202179,202567,188378,188379,188381,188382,188383,188385,188386,188387,188389,188390,188391,188393,188396,188397,188398,188400,188401,188402,188403,188404,188405,188406,188407,188408,188409,188411,188416,188417,188418,188419,188420,188421,188423,188424,188425,188426,188430,188432,188433,188434,188435,188436,188437,188438,188439,188440,188441,188443,188444,188445,188446,188448,188449,188450,188451,188452,188453,188454,188455,188456,188457,188459,188460,188461,188462,188464,188465,188466,188468,188469,188470,188471,188472,188473,188474,188475,188476,188477,188479,188480,188481,188483,188484,188485,188486,188487,188488,188489,188490,188491,188492,188495,188496,188498,188499,188500,188502,188503,188505,188506,188507,188509,188510,188511,188512,188514,188515,188516,188517,188519,188520,188521,188522,188523,188524,188525,188528,188529,188530,188531,188532,188534,188535,188536,188537,188538,188539,188540,188542,188543,188544,188545,188547,188549,188550,188551,188552,188553,188554,188555,188556,188557,188560,188561,188562,188563,188564,188565,188566,188567,188569,188570,188571,188572,188573,188574,188575,188576,188577,188578,188580,188581,188582,188583,188585,188587,188588,188589,188590,188592,188593,188595,188596,188597,188598,188599,188600,188601,188604,188606,188607,188609,188610,188611,188613,188614,188615,188617,188618,188619,188622,188623,188624,188625,188626,188627,188628,188630,188631,188633,188634,188635,188637,188638,188639,188640,188641,188642,188643,188644,188645,188646,188647,188648,188649,188650,188652,188653,188654,188655,188656,188657,188658,188660,188661,188662,188663,188664,188665,188667,188668,188669,188670,188671,188672,188674,188676,188677,188678,188680,188681,188682,188684,188685,188686,188687,188688,188689,188690,188691,188692,188694,188695,188696,188697,188698,188699,188701,188702,188703,188704,188705,188706,188707,188708,188709,188710,188711,188712,188713,188714,188715,188716,188717,188718,188720,188721,188722,188723,188724,188725,188726,188727,188728,188729,188730,188732,188733,188734,188736,188739,188740,188741,188743,188744,188745,188746,188750,188753,188755,188758,188760,188761,188762,188763,188764,188765,188766,188767,188768,188769,188770,188771,188772,188775,188776,188777,188778,188779,188780,188781,188782,188783,188784,188785,188787,188788,188789,188790,188791,188792,188794,188796,188797,188798,188799,188800,188801,188802,188803,188805,188807,188808,188809,188810,188811,188812,188813,188814,188815,188816,188817,188818,188819,188820,188821,188822,188823,188825,188827,188828,188830,188831,188832,188833,188834,188836,188837,188838,188839,188840,188841,188843,188846,188847,188848,188849,188850,188851,188853,188854,188855,188856,188858,188859,188860,188861,188862,188863,188864,188865,188866,188867,188868,188869,188870,188872,188873,188874,188875,188877,188878,188879,188880,188882,188888,188890,188891,188894,188895,188896,188897,188898,188899,188900,188904,188906,188907,188908,188910,188912,188913,188914,188915,188916,188917,188918,189010,189015,189016,189584,189587,189595,189606,189608,189612,189614,189625,189626,189633,189636,189652,189655,189657,189663,189670,189674,189679,189683,189684,189689,189695,189711,189712,189717,189727,189734,189736,189748,189753,189765,189770,189960,189974,189981,189985,189988,189991,190043,190044,190045,190046,190047,190048,190049,190050,190051,190052,190053,190054,190055,190056,190057,190059,190060,190061,190062,190063,190064,190065,190066,190093,190105,190122,190155,190163,190164,190166,190167,204587,188366,188887,188920,188922,188923,188924,188925,188927,188929,188931,188932,188933,188934,188936,188937,188938,188939,188940,188942,188944,188945,188946,188949,188950,188951,188952,188953,188954,188955,188956,188958,188959,188960,188961,188962,188963,188964,188965,188966,188967,188968,188969,188970,188971,188972,188973,188974,188978,188980,188981,188982,188983,188985,188986,188989,188992,188994,188995,188996,188997,188998,188999,189000,189001,189002,189003,189004,189005,189006,189007,189008,189017,189018,189020,189021,189022,189023,189024,189025,189026,189028,189031,189032,189033,189034,189035,189037,189039,189040,189041,189042,189043,189044,189045,189046,189049,189050,189051,189052,189053,189055,189056,189057,189058,189060,189061,189062,189063,189064,189065,189068,189069,189070,189071,189072,189073,189074,189075,189076,189077,189078,189079,189080,189081,189082,189084,189086,189087,189088,189089,189090,189092,189093,189094,189097,189098,189099,189102,189106,189108,189109,189110,189112,189113,189114,189116,189117,189118,189120,189121,189122,189123,189124,189125,189126,189127,189128,189129,189130,189132,189135,189136,189137,189138,189139,189142,189143,189144,189145,189146,189149,189150,189151,189152,189153,189154,189155,189158,189159,189160,189161,189162,189163,189165,189166,189167,189168,189169,189170,189171,189172,189173,189174,189175,189176,189177,189179,189181,189183,189184,189187,189188,189189,189190,189191,189192,189193,189194,189195,189196,189198,189199,189200,189201,189202,189205,189207,189208,189209,189210,189211,189212,189213,189214,189216,189218,189219,189220,189221,189222,189223,189224,189225,189226,189227,189228,189229,189230,189232,189233,189234,189235,189237,189238,189239,189240,189241,189242,189246,189247,189248,189249,189250,189251,189252,189253,189255,189256,189257,189258,189259,189260,189263,189264,189266,189267,189269,189270,189271,189272,189273,189274,189275,189277,189279,189280,189281,189282,189283,189284,189285,189286,189287,189289,189291,189292,189293,189294,189295,189297,189298,189299,189300,189301,189302,189303,189304,189306,189307,189309,189311,189313,189315,189316,189318,189320,189322,189323,189325,189328,189329,189330,189331,189332,189335,189336,189338,189339,189340,189341,189342,189344,189345,189346,189347,189351,189352,189353,189354,189355,189356,189358,189359,189360,189361,189363,189366,189367,189368,189369,189370,189371,189372,189374,189375,189377,189379,189380,189382,189384,189385,189386,189387,189388,189389,189390,189391,189392,189393,189394,189396,189397,189398,189399,189400,189401,189403,189404,189405,189406,189409,189410,189412,189413,189415,189416,189417,189418,189420,189421,189422,189423,189424,189425,189426,189427,189428,189429,189430,189431,189432,189434,189435,189436,189437,189438,189439,189440,189442,189443,189444,189445,189448,189449,189450,189451,189452,189776,189781,189788,189790,189800,189802,189804,189805,189812,189818,189819,189821,189825,189831,189833,189834,189837,189839,189842,189847,189849,189856,189871,189873,189885,189886,189903,189907,189912,189914,189921,189922,189923,189936,189941,189954,189957,189984,190067,190068,190069,190070,190071,190072,190073,190074,190075,190076,190077,190078,190080,190081,190083,190084,190085,190086,190087,190088,190089,190091,190104,190117,190118,190121,190124,190128,190133,190135,190157,190162,190165,196596,196600);

    DECLARE EXIT HANDLER FOR NOT FOUND
    BEGIN

        ROLLBACK;

        IF total_count = 0 THEN
            SET migrated_record = CONCAT("No records found for migration.");
        ELSE
            SET migrated_record = CONCAT("Total ", total_count," record(s) successfully migrated.");
        END IF;

        SELECT migrated_record;
    END;

    OPEN contact_cursor;

        contact_loop: LOOP

            FETCH contact_cursor INTO value_contact_id;

            START TRANSACTION; 

                SET error_line = value_contact_id;

                
                UPDATE `fg_cm_contact` SET `last_updated` = date_now, `is_company` = 0, `is_member` = 0, `is_sponsor` = 0, `is_draft` = 1, `is_newsletter_subscriber` = 1 WHERE `id` = value_contact_id;

                
                INSERT INTO `fg_cm_change_log` (`contact_id`, `date`, `kind`, `value_before`, `value_after`, `changed_by`, `confirmed_by`) 
                VALUES (value_contact_id, date_now, 'contact status', 'Active', 'Subscriber (Contact administration)', '1', '1');

                
                SET value_user_id = (SELECT `id` FROM  `sf_guard_user` WHERE `contact_id` = value_contact_id ORDER BY `id` ASC LIMIT 1);
                IF value_user_id IS NOT NULL AND  value_user_id != '' THEN
                    
                    DELETE FROM `sf_guard_user_group` WHERE `user_id` = value_user_id;
                    DELETE FROM `sf_guard_remember_key` WHERE `user_id` = value_user_id;
                END IF;
                
                DELETE FROM `sf_guard_user` WHERE `contact_id` = value_contact_id;
                
                DELETE FROM `fg_security_admin` WHERE `contact_id` = value_contact_id;

                
                DELETE FROM `fg_rm_role_contact` WHERE `contact_id` = value_contact_id;
                
                DELETE FROM `fg_rm_role_manual_contacts` WHERE `contact_id` = value_contact_id;

                
                DELETE FROM `fg_cm_linkedcontact` WHERE `contact_id` = value_contact_id;
                SET value_linked_contact_id = (SELECT `id` FROM  `fg_cm_linkedcontact` WHERE `linked_contact_id` = value_contact_id ORDER BY `id` ASC LIMIT 1);
                IF value_linked_contact_id IS NOT NULL AND  value_linked_contact_id != '' THEN
                    DELETE FROM `fg_cm_linkedcontact` WHERE `id` = value_linked_contact_id;
                END IF;

                
                DELETE FROM `fg_sm_bookings` WHERE `contact_id` = value_contact_id;
                
                DELETE FROM `fg_sm_booking_contacts` WHERE `contact_id` = value_contact_id;

                SET total_count = total_count + 1;

            COMMIT;

        END LOOP contact_loop;

    CLOSE contact_cursor;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `MigrateProfileDocuments` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `MigrateProfileDocuments`(IN p_club_id INT, OUT p_message TEXT)
BEGIN

DECLARE record_not_found, qry_count, tmp1, tmp2, tmp3, value_contact_id, author_contact_id, value_file_update_id INTEGER DEFAULT 0;

DECLARE mg_document_id, mg_user_id, mg_document_date, mg_document_name, mg_url_part1, mg_url_part2, mg_document_author_id, local_path, server_path, 
v_filename, error_line, Format_document_date TEXT DEFAULT "";

DECLARE mg_document_cursor CURSOR FOR 
SELECT `id`,TRIM(TRIM(BOTH '\r' FROM`UserID`)),TRIM(TRIM(BOTH '\r' FROM `Date`)),TRIM(TRIM(BOTH '\r' FROM `Name`)),
TRIM(TRIM(BOTH '\r' FROM `URL_Part1`)),TRIM(TRIM(BOTH '\r' FROM `URL_Part2`)),TRIM(TRIM(BOTH '\r' FROM `Author_ID`)) 
FROM `fg_migration_new_documents` WHERE `club_id` = p_club_id AND `is_migrated` = 0 ORDER BY `id`;


DECLARE EXIT HANDLER FOR NOT FOUND

BEGIN

ROLLBACK;


SET p_message = CONCAT('Total ', qry_count , ' record(s) migrated from fg_migration_new_documents.');
CALL MigrationLogEntries(p_club_id, p_message);

IF qry_count = 0 THEN
SET p_message = CONCAT("No records found for migration.");
ELSE
SET p_message = CONCAT('Total ', qry_count , ' record(s) migrated from fg_migration_new_documents.');
END IF;

SELECT p_message;

END;


DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
ROLLBACK;


SET p_message = CONCAT("We had to rollback because of error in id ",error_line," of table fg_migration_new_documents. Please correct the data and proceed.");
CALL MigrationLogEntries(p_club_id, p_message);

SELECT p_message;

END; 

OPEN mg_document_cursor;


SELECT COUNT(`id`) INTO qry_count FROM `fg_migration_new_documents` where `club_id`= p_club_id AND `is_migrated` = 0;
SET  p_message = CONCAT('We are trying to migrate ', qry_count , ' records from fg_migration_new_documents');
CALL MigrationLogEntries(p_club_id, p_message);

mg_document_loop: LOOP

FETCH mg_document_cursor INTO mg_document_id, mg_user_id, mg_document_date, mg_document_name, mg_url_part1, mg_url_part2, mg_document_author_id;

START TRANSACTION; 

SET value_contact_id = (SELECT id FROM fg_cm_contact WHERE `member_id` = mg_user_id AND `club_id` = p_club_id);

IF value_contact_id IS NULL OR value_contact_id = '' THEN
SET value_contact_id = 1;
END IF;

SET author_contact_id = (SELECT id FROM fg_cm_contact WHERE `member_id` = mg_document_author_id AND `club_id` = p_club_id);

IF author_contact_id IS NULL OR author_contact_id = '' THEN
SET author_contact_id = 1;
END IF;

SET error_line = mg_document_id;

SET Format_document_date = (SELECT STR_TO_DATE(mg_document_date,'%d.%m.%Y %H:%i:%s'));

INSERT INTO `fg_cm_documents` (`title`,`contact_id`,`created_by`, `date`)
VALUES(mg_document_name, value_contact_id, author_contact_id, Format_document_date);

SET value_file_update_id = (SELECT LAST_INSERT_ID());

SET tmp1 = LOCATE('Image', mg_url_part2);
SET tmp2 = LOCATE('File', mg_url_part2);
SET tmp3 = LOCATE('Flash', mg_url_part2);
IF tmp1 > 0 THEN
SET v_filename = SUBSTRING(mg_url_part2, 8);
ELSEIF tmp2 > 0 THEN
SET v_filename = SUBSTRING(mg_url_part2, 7);
ELSEIF tmp3 >0 THEN
SET v_filename = SUBSTRING(mg_url_part2, 8);
ELSE
SET v_filename = NULL;
END IF;

IF v_filename IS NOT NULL THEN

SET local_path = CONCAT(mg_url_part1,mg_url_part2);
SET server_path = CONCAT('/', p_club_id, '/contact_documents/', v_filename);

INSERT INTO `fg_migration_files`(`club_id`,`local_path`,`server_path`, `file_name`, `source`, `file_update_id`, `is_migrated`)
VALUES(p_club_id, local_path, server_path, v_filename, 'profile_documents', value_file_update_id, 0);

END IF;

UPDATE `fg_migration_new_documents` SET `is_migrated` = 1 WHERE `id` = mg_document_id;

COMMIT;

END LOOP mg_document_loop;

CLOSE mg_document_cursor;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `MigrationLogEntries` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `MigrationLogEntries`(current_club_id INT, logmessage TEXT)
BEGIN
	DECLARE time_now DATETIME DEFAULT NOW();
	
	INSERT INTO `fg_migration_log` (`id`, `club_id`, `message`, `date`) VALUES (NULL, current_club_id, logmessage , time_now);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `moveContactsToSubscribers` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `moveContactsToSubscribers`(IN tablename TEXT,IN currentuser INT,IN clubid INT,IN system_att_first_name VARCHAR(50),IN system_att_last_name VARCHAR(50),IN system_att_company_name VARCHAR(50),IN system_att_dob  VARCHAR(50),IN team_terminology VARCHAR(50),IN date_today DATETIME,IN str_todate DATETIME,IN simple_date DATETIME,IN present_time INT)
BEGIN
    
    DECLARE loop_iteration_var,count_userid,count_user,user_contact_id,count_security,count_security1,role_log_id,count_con,contactid1,contactid2,contactid3 INTEGER;
    DECLARE gpcount,user_id_new,contact_cursor_is_member,contact_ids_cursor_contact_id,is_postal_address_val,comp_def_contact_new INTEGER DEFAULT "";
    DECLARE contact_cursor_contact_id,is_company1,is_company2,is_company3,is_company4,contact_id1,club_id1,contact_id_user,funid,user_contact_idy,count_securityn INTEGER;
    DECLARE cursor_linked_contact_id,group_id_new,role_id_new,is_executive_board_val,rcid,team_roster_category_id,contactid4,contactidn, is_companyn,contact_cursor_is_sponsor,outReturnCode,is_membern  INTEGER;
    DECLARE category_title_new,value_before_new,group_type_new,group_type1 TEXT;
    DECLARE sf_guard_user_var,usergroup_name,group_name1,group_name,group_name2,group_name3,group_title_new,role_title, succ_mess, sql_err TEXT DEFAULT "";
    DECLARE role_type,function_title,comp_def_contact_fun_new TEXT DEFAULT "";
    DECLARE group_name_var,contactname,contactname1,contactname2,default_contactname,company_name1, fst_nme,lst_nme,fst_nme1,lst_nme1,fst_nme2,lst_nme2,fst_nme3,lst_nme3 VARCHAR(50);
    DECLARE first_name1,last_name1,def_contact_name,company_name,first_name,last_name,company_name2,first_name2,last_name2, company_namen,contactnamen,lst_nmen,fst_nmen,value_after_change,value_before_active VARCHAR(50);
    DECLARE first_namen VARCHAR(50) DEFAULT NULL;
    DECLARE last_namen VARCHAR(50) DEFAULT NULL;
    DECLARE record_not_found INTEGER DEFAULT 0;
    DECLARE loop2query2 TEXT;DECLARE exec_qry,exec_qry1 TEXT;
	DECLARE insertqry, logstr1,logstr2,logstr3,logstr4,logstr5,logstr6,logstr7,logstr8,logstr9 TEXT;
	DECLARE pre_query, exec_sel_qry, dynamicSQL TEXT;
    DECLARE contactidscursor CURSOR FOR 
    SELECT `contact_id` FROM `archivecontactsto` WHERE `club_id`= clubid AND `author`=currentuser AND `archived_date`=date_today;
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		ROLLBACK;
	END;
	START TRANSACTION;
	SET @insertqry = "INSERT INTO `fg_cm_change_log` (`contact_id`, `date`, `kind`, `field`,`value_before`, `value_after`,`changed_by`, `confirmed_by` ) VALUES";
    BLOCK1: BEGIN
        OPEN contactidscursor;
            contact_ids_one: LOOP
                FETCH contactidscursor INTO contact_ids_cursor_contact_id;
                IF record_not_found THEN
                    SET record_not_found = 0;
                    LEAVE contact_ids_one;
                END IF;
                SELECT `is_company`, `is_postal_address` INTO is_companyn, is_postal_address_val FROM `fg_cm_contact` WHERE `id` = contact_ids_cursor_contact_id;
                BLOCK2: BEGIN
                    DECLARE contactcursor CURSOR FOR
                    SELECT `is_member`, `id`, `is_sponsor` FROM `fg_cm_contact` WHERE `id`= contact_ids_cursor_contact_id;
                    OPEN contactcursor;
                        loop_contact: LOOP
                            FETCH contactcursor INTO contact_cursor_is_member, contact_cursor_contact_id, contact_cursor_is_sponsor;
                            IF record_not_found THEN
                                SET record_not_found = 0;
                                 LEAVE loop_contact;
                            END IF;

                            
                            IF(contact_cursor_contact_id = contact_ids_cursor_contact_id)THEN

                                SET logstr1 = CONCAT("(",contact_cursor_contact_id,",","'",date_today,"'",",","'",'contact status',"'",",","'",'-',"'",",","'",'Active',"'",",","'",'Subscriber',"'",",",currentuser,",",currentuser,")");								
                                SET @insertqry = CONCAT(@insertqry,logstr1,',');
                                IF(contact_cursor_is_member = 1)THEN

                                    SET logstr2 = CONCAT("(",contact_cursor_contact_id,",","'",date_today,"'",",","'",'contact type',"'",",","'",'',"'",",","'",'Member',"'",",","'",'',"'",",",currentuser,",",currentuser,")");
                                    SET @insertqry = CONCAT(@insertqry,logstr2,',');									  
                                END IF;
                                IF(contact_cursor_is_sponsor = 1)THEN

                                    SET logstr8 = CONCAT("(",contact_cursor_contact_id,",","'",date_today,"'",",","'",'contact type',"'",",","'",'',"'",",","'",'Sponsor',"'",",","'",'',"'",",",currentuser,",",currentuser,")");
                                    SET @insertqry = CONCAT(@insertqry,logstr8,',');									  
                                END IF;					
                            END IF;
                          IF(contact_cursor_is_member =1) THEN  
                             SET @logstr9 = CONCAT("UPDATE `fg_cm_contact` SET  `is_draft`= '1', `is_member` = '0', `is_sponsor` = '0',`is_seperate_invoice` = '0' ,`leaving_date`='",date_today,"'  WHERE `id`= ",contact_ids_cursor_contact_id);
			  ELSE
			    SET @logstr9 = CONCAT("UPDATE `fg_cm_contact` SET  `is_draft`= '1', `is_member` = '0', `is_sponsor` = '0',`is_seperate_invoice` = '0'   WHERE `id`= ",contact_ids_cursor_contact_id);
			  END IF;
			  
                        PREPARE exec_qry1 FROM @logstr9;
			EXECUTE exec_qry1;
			DEALLOCATE PREPARE exec_qry1;
		       END LOOP loop_contact;
                    CLOSE contactcursor;
                END BLOCK2;
 				SET @dynamicSQL=CONCAT('SELECT `contact_id`',',`',system_att_company_name,'`,`',system_att_first_name,'`,`',system_att_last_name,'` INTO @contactidn, @company_namen,@first_namen,@last_namen FROM `tablecontact',clubid,'`',' WHERE `contact_id` = ',contact_ids_cursor_contact_id);
				PREPARE exec_sel_qry FROM @dynamicSQL;
				EXECUTE exec_sel_qry ;	
				SET contactidn = @contactidn;
				SET company_namen = @company_namen;
				SET first_namen = @first_namen;
				SET last_namen = @last_namen;
				DEALLOCATE PREPARE exec_sel_qry;
                IF(is_companyn=1)THEN
                    SET contactnamen = company_namen;
                ELSE    
                    CASE
                        WHEN last_namen != '' THEN 
                             SET lst_nmen =    CONCAT(last_namen," "); 
                        ELSE      
                             SET lst_nmen =    '';
                    END CASE;  
                    CASE
                        WHEN first_namen != '' THEN 
                             SET fst_nmen =    CONCAT(first_namen," "); 
                        ELSE      
                             SET fst_nmen =    '';
                    END CASE;
                    SET contactnamen = CONCAT(lst_nmen,fst_nmen); 
                END IF;
                IF(is_postal_address_val = 1)THEN
                    UPDATE `fg_cm_contact` SET `is_postal_address`= '0' WHERE `id`= contact_ids_cursor_contact_id;
                    SET loop_iteration_var = 0;
                    BLOCK3: BEGIN  

                        DECLARE linkedcontactcursor CURSOR FOR    
                            SELECT fgcmlc.`linked_contact_id` 
                            FROM `fg_cm_linkedcontact` AS fgcmlc 
                            LEFT JOIN `fg_cm_relation` AS fgcr ON fgcmlc.`relation_id` = fgcr.`id`
                            LEFT JOIN `fg_cm_contact` AS fgc ON fgcmlc.`contact_id` = fgc.`id`
                            WHERE fgcmlc.`contact_id` = contact_ids_cursor_contact_id AND fgc.`club_id` = clubid AND fgcmlc.`type` = 'household'; 

                        OPEN linkedcontactcursor;
                            looplinkedcontact: LOOP
                                FETCH linkedcontactcursor INTO cursor_linked_contact_id;

                                IF record_not_found THEN
                                    SET record_not_found = 0;
                                    LEAVE looplinkedcontact;
                                END IF;
                                SET loop_iteration_var = loop_iteration_var +1 ;
                                UPDATE `fg_cm_contact` SET `is_postal_address`= '0' WHERE `id`= cursor_linked_contact_id AND `is_seperate_invoice` =1;

                                SELECT COUNT(`id`) INTO count_con FROM `fg_cm_contact` WHERE `id` = cursor_linked_contact_id AND `is_postal_address`=1; 
                                IF(count_con=0)THEN
                                    IF(loop_iteration_var=1)THEN
                                        UPDATE `fg_cm_contact` SET `is_postal_address`= '1' WHERE `id`= cursor_linked_contact_id;
                                    END IF;
                                ELSEIF(count_con>1)THEN
                                    UPDATE `fg_cm_contact` SET `is_postal_address`= '0' WHERE `id`= cursor_linked_contact_id;
                                    IF(loop_iteration_var=1)THEN
                                        UPDATE `fg_cm_contact` SET `is_postal_address`= '1' WHERE `id`= cursor_linked_contact_id;
                                    END IF;
                                END IF;
                            END LOOP looplinkedcontact;
                        CLOSE linkedcontactcursor;

                    END BLOCK3;
                END IF;
				
                SET user_id_new = (SELECT `id` FROM `sf_guard_user` WHERE `contact_id` = contact_ids_cursor_contact_id);
                BLOCK4: BEGIN 
                    DECLARE sfguard_userrights_cursor CURSOR FOR
                    SELECT  gg.`id`, gg.`type`, r.`id`
                        FROM sf_guard_user AS gu
                        JOIN sf_guard_user_group AS gug ON gug.`user_id` = gu.`id`
                        LEFT JOIN sf_guard_group AS gg ON gg.`id` = gug.`group_id`
                        LEFT JOIN fg_security_admin AS fsa ON ( gug.`group_id` = fsa.`group_id` AND gu.`contact_id` = fsa.`contact_id`)
                        LEFT JOIN fg_rm_role AS r ON fsa.`role_id` = r.`id`
                        WHERE gu.`contact_id` =contact_ids_cursor_contact_id;
                    OPEN sfguard_userrights_cursor;
                       loop_sfguard_userrights: LOOP 
                           FETCH sfguard_userrights_cursor INTO group_id_new,group_type_new,role_id_new;    
                           IF record_not_found THEN
                               SET record_not_found = 0;
                               LEAVE loop_sfguard_userrights;
                           END IF;
                           CASE
                                WHEN group_type_new = 'team' OR group_type_new = 'workgroup' THEN
                                
                                SELECT COUNT(`id`) INTO count_security FROM `fg_security_admin` WHERE `contact_id`= contact_ids_cursor_contact_id AND `group_id` = group_id_new AND `role_id` = role_id_new;
                                IF(count_security>0)THEN
                                    SELECT COUNT(gu.`id`) INTO sf_guard_user_var
                                        FROM sf_guard_user AS gu
                                        JOIN sf_guard_user_group AS gug ON gug.`user_id` = gu.`id`
                                        LEFT JOIN sf_guard_group AS gg ON gg.`id` = gug.`group_id`
                                        LEFT JOIN fg_security_admin AS fsa ON ( gug.`group_id` = fsa.`group_id` AND gu.`contact_id` = fsa.`contact_id` )
                                        LEFT JOIN fg_rm_role AS r ON fsa.`role_id` = r.`id`
                                        WHERE gu.`contact_id` = contact_ids_cursor_contact_id AND fsa.`group_id`  = group_id_new AND fsa.`role_id` = role_id_new;                             
                                    SET group_title_new = (SELECT  gg.`name`
                                        FROM sf_guard_user AS gu
                                        JOIN sf_guard_user_group AS gug ON gug.`user_id` = gu.`id`
                                        LEFT JOIN sf_guard_group AS gg ON gg.`id` = gug.`group_id`
                                        LEFT JOIN fg_security_admin AS fsa ON ( gug.`group_id` = fsa.`group_id` AND gu.`contact_id` = fsa.`contact_id` )
                                        LEFT JOIN fg_rm_role AS r ON fsa.`role_id` = r.`id`
                                        WHERE gu.`contact_id` = contact_ids_cursor_contact_id AND fsa.`group_id`  = group_id_new AND fsa.`role_id` = role_id_new);                             
                                    SET role_title = (SELECT  r.`title`
                                        FROM sf_guard_user AS gu
                                        JOIN sf_guard_user_group AS gug ON gug.`user_id` = gu.`id`
                                        LEFT JOIN sf_guard_group AS gg ON gg.`id` = gug.`group_id`
                                        LEFT JOIN fg_security_admin AS fsa ON ( gug.`group_id` = fsa.`group_id` AND gu.`contact_id` = fsa.`contact_id` )
                                        LEFT JOIN fg_rm_role AS r ON fsa.`role_id` = r.`id`
                                        WHERE gu.`contact_id` = contact_ids_cursor_contact_id AND fsa.`group_id`  = group_id_new AND fsa.`role_id` = role_id_new);                             

                                    IF sf_guard_user_var IS NOT NULL THEN
                                            SET group_name_var = CONCAT(group_title_new,"( ",role_title,")");
                                    END IF;
                                

                                    SET logstr3 = CONCAT("(",contact_ids_cursor_contact_id,",","'",date_today,"'",",","'",'user rights',"'",",","'",'-',"'",",",QUOTE(group_name_var),",","'",'-',"'",",",currentuser,",",currentuser,")");
                                    SET @insertqry = CONCAT(@insertqry,logstr3,',');									
                                    SET usergroup_name = (SELECT `name` FROM `sf_guard_group` WHERE `id` = group_id_new);
                                    SELECT `id`,`is_company`, 
                                        (SELECT `value` FROM `fg_cm_attribute_value_text` WHERE fg_cm_attribute_value_text.`contact_id` = fg_cm_contact.`id` AND fg_cm_attribute_value_text.`attribute_id` = system_att_company_name),
                                        (SELECT `value` FROM `fg_cm_attribute_value_text` WHERE fg_cm_attribute_value_text.`contact_id` = fg_cm_contact.`id` AND fg_cm_attribute_value_text.`attribute_id` =  system_att_first_name), 
                                        (SELECT `value` FROM `fg_cm_attribute_value_text` WHERE fg_cm_attribute_value_text.`contact_id` = fg_cm_contact.`id` AND fg_cm_attribute_value_text.`attribute_id` =  system_att_last_name)  
                                        INTO contactid1, is_company4, company_name,first_name,last_name  FROM `fg_cm_contact` WHERE `id` = contact_ids_cursor_contact_id;
                                    IF(is_company4=1)THEN
                                        SET contactname1 = company_name;
                                    ELSE    
                                        CASE
                                            WHEN last_name != '' THEN
                                                 SET lst_nme =    CONCAT(last_name," ");
                                            ELSE
                                                 SET lst_nme =    '';
                                        END CASE;
                                        CASE
                                            WHEN first_name != '' THEN
                                                 SET fst_nme =    CONCAT(first_name," ");
                                            ELSE
                                                 SET fst_nme =    '';
                                        END CASE;
                                        SET contactname1 = CONCAT(lst_nme,fst_nme);
                                    END IF;
                                    INSERT INTO `fg_rm_role_log` (`date`, `role_id`, `kind`,`field`, `value_before`, `value_after`,`changed_by`, `historical_id`, `is_historical`, `contactlog_id`,`booking_id` ) VALUES (str_todate, role_id_new, 'user rights', group_name, contactname1, '-', currentuser, NULL, 0, NULL, NULL);
                                    SET role_log_id = last_insert_id();
                                    SELECT `is_executive_board` INTO is_executive_board_val FROM `fg_rm_role` WHERE `id`= role_id_new;
                                    IF(is_executive_board_val=1)THEN
                                        INSERT INTO `fg_club_log` (`club_id`, `date`, `field`, `kind`,`value_before`, `value_after`,`changed_by`,`role_log_id` ) VALUES (clubid, str_todate,group_name , 'user rights', contactname1,NULL,currentuser ,role_log_id);
                                    END IF;
                                    DELETE FROM `fg_security_admin` WHERE `contact_id`= contact_ids_cursor_contact_id AND `group_id`= group_id_new AND `role_id` = role_id_new;
                                END IF;


                                SELECT COUNT(`id`) INTO gpcount FROM `fg_security_admin` WHERE `group_id` = group_id_new AND `contact_id` = contact_ids_cursor_contact_id;
                                IF(gpcount <= 0)THEN
                                   
                                    SELECT `name`,`type` INTO group_name1, group_type1 FROM `sf_guard_group` WHERE `id` = group_id_new;
                                    SELECT `contact_id` INTO contact_id1 FROM `sf_guard_user` WHERE `id` = user_id_new;   
                                    SELECT `club_id` INTO club_id1 FROM `fg_cm_contact` WHERE `id` = contact_id1; 
                                    IF(club_id1 = clubid)THEN
                                        INSERT INTO `fg_cm_change_log` (`contact_id`, `date`, `kind`, `field`,`value_before`, `value_after`,`changed_by`, `confirmed_by`,`is_confirmed` ) VALUES (contact_id1, date_today, 'user rights', '', group_name1,'',currentuser,NULL,NULL);
                                    END IF;
                                    DELETE FROM `sf_guard_user_group` WHERE `group_id` = group_id_new AND `user_id` = user_id_new;
                                END IF;
                                
                           ELSE
                               
                               SELECT COUNT(u.`contact_id`), u.`contact_id`, gg.`name` INTO count_user, contact_id_user, group_name2 
                                   FROM `sf_guard_user_group` AS ug
                                   LEFT JOIN `sf_guard_user` AS u ON u.`id` = ug.`user_id`
                                   LEFT JOIN `sf_guard_group` AS gg ON ug.`group_id` = gg.`id`
                                   WHERE ug.`user_id` = user_id_new AND `group_id` =group_id_new;

                                   IF(count_user>0)THEN

                                        SET logstr4 = CONCAT("(",contact_id_user,",","'",date_today,"'",",","'",'user rights',"'",",","'",'-',"'",",","'",group_name2,"'",",","'",'-',"'",",",currentuser,",",currentuser,")");
                                        SET @insertqry = CONCAT(@insertqry,logstr4,',');										
                                   END IF;
                                   SELECT COUNT(`user_id`) INTO count_userid FROM `sf_guard_user_group` WHERE `group_id`= group_id_new AND `user_id`= user_id_new;

                                   IF(count_userid >0)THEN
                                       SELECT contact_id INTO user_contact_id FROM `sf_guard_user` WHERE `id`= user_id_new;
                                       SELECT  `id`,`is_company`, 
                                           (SELECT `value` FROM `fg_cm_attribute_value_text` WHERE fg_cm_attribute_value_text.`contact_id` = fg_cm_contact.`id` AND fg_cm_attribute_value_text.`attribute_id` = system_att_company_name),
                                           (SELECT `value` FROM `fg_cm_attribute_value_text` WHERE fg_cm_attribute_value_text.`contact_id` = fg_cm_contact.`id` AND fg_cm_attribute_value_text.`attribute_id` = system_att_first_name),
                                           (SELECT `value` FROM `fg_cm_attribute_value_text` WHERE fg_cm_attribute_value_text.`contact_id` = fg_cm_contact.`id` AND fg_cm_attribute_value_text.`attribute_id` = system_att_last_name)
                                       INTO contactid3, is_company2,company_name2,first_name2,last_name2 FROM `fg_cm_contact` WHERE id = user_contact_id;

                                       IF(is_company2=1)THEN
                                                SET contactname2 = company_name2;
                                       ELSE    
                                           CASE
                                               WHEN last_name2 != '' THEN 
                                                   SET lst_nme2 =    CONCAT(last_name2," "); 
                                               ELSE      
                                                   SET lst_nme2 =    '';
                                           END CASE;  
                                           CASE
                                               WHEN first_name2 != '' THEN 
                                                   SET fst_nme2 =    CONCAT(first_name2," "); 
                                               ELSE      
                                                   SET fst_nme2 =    '';
                                           END CASE;
                                           SET contactname2 = CONCAT(lst_nme2,fst_nme2); 
                                       END IF;                                       
                                       SELECT `name` INTO group_name3 FROM `sf_guard_group` WHERE `id`= group_id_new;
                                       INSERT INTO `fg_club_log` (`club_id`, `date`, `kind`, `field`,`value_before`, `value_after`,`changed_by` ) VALUES (clubid, str_todate, 'user rights', group_name3, contactname2,'-',currentuser);
                                       DELETE FROM `sf_guard_user_group` WHERE `group_id` = group_id_new AND `user_id` = user_id_new  ;
                                   END IF;
                           END CASE;
                       END LOOP loop_sfguard_userrights;
                    CLOSE sfguard_userrights_cursor;      
                END BLOCK4;
                BLOCK5: BEGIN
                    DECLARE fgrmrolecontact_cursor CURSOR FOR
                    SELECT rc.`id`, rcat.`title`, r.`id`, r.`type`, r.`title`,rf.`id`, rf.`title` FROM `fg_rm_role_contact` AS rc
                        LEFT JOIN fg_rm_category_role_function AS crf ON rc.`fg_rm_crf_id` = crf.`id`
                        INNER JOIN fg_rm_category AS rcat ON crf.`category_id` = rcat.`id`
                        INNER JOIN fg_rm_role AS r ON crf.`role_id` = r.`id`
                        LEFT JOIN fg_rm_function AS rf ON crf.`function_id` = rf.`id`
                        WHERE rc.`contact_id` = contact_ids_cursor_contact_id;
                    OPEN fgrmrolecontact_cursor;
                        loop_fgrmrolecontact: LOOP 
                            FETCH fgrmrolecontact_cursor INTO rcid, category_title_new, role_id_new, role_type, role_title, funid, function_title;    
                            IF record_not_found THEN
                                SET record_not_found = 0;
                                LEAVE loop_fgrmrolecontact;
                            END IF;
                            IF(function_title != '')THEN
                                SET value_before_new = CONCAT(function_title,"( ",role_title,")");
                            ELSE
                                SET value_before_new = role_title ;
                            END IF;
                            IF(category_title_new = 'Team')THEN
                                SET category_title_new = team_terminology;
                            END IF;

                            SET logstr5 = CONCAT("(",contact_ids_cursor_contact_id,",","'",date_today,"'",",","'",'assignment',"'",",",QUOTE(category_title_new),",",QUOTE(value_before_new),",","'",'-',"'",",",currentuser,",",currentuser,")");							
                            SET @insertqry = CONCAT(@insertqry,logstr5,',');							
                            INSERT INTO `fg_rm_role_log` (`date`, `role_id`, `kind`,`field`, `value_before`, `value_after`,`changed_by`, `historical_id`, `is_historical`, `contactlog_id`,`booking_id` ) VALUES (date_today, role_id_new, 'assigned contacts', function_title, contactnamen, '', currentuser, NULL, 0, NULL, NULL);
                            IF(funid != '')THEN
                                INSERT INTO `fg_rm_function_log` (`date`, `role_id`, `kind`,`function_id`,`field`, `value_before`, `value_after`,`changed_by`) VALUES (date_today, role_id_new, 'assigned contacts', funid, function_title, contactnamen, '', currentuser);
                            END IF;
                            DELETE FROM `fg_rm_role_contact` WHERE `id`= rcid;
                            BLOCK6: BEGIN
                                DECLARE fg_team_roster_category_cursor CURSOR FOR
                                SELECT id FROM `fg_team_roster_category` WHERE `category_type` =  'TEAM' AND `club_id` = club_id AND `team_id` = role_id_new ORDER BY `sort_order`; 
                                    OPEN fg_team_roster_category_cursor;
                                        loop_fg_team_roster_category: LOOP 
                                        FETCH fg_team_roster_category_cursor INTO team_roster_category_id;
                                            IF record_not_found THEN
                                                SET record_not_found = 0;
                                                LEAVE loop_fg_team_roster_category;
                                            END IF;
                                            DELETE FROM `fg_team_roster_category_contacts` WHERE `roster_id`= team_roster_category_id AND `contact_id` = contact_ids_cursor_contact_id;
                                        END LOOP loop_fg_team_roster_category;
                                    CLOSE fg_team_roster_category_cursor;
                            END BLOCK6; 
                        END LOOP loop_fgrmrolecontact;
                    CLOSE fgrmrolecontact_cursor;
                END BLOCK5;
                DELETE FROM `fg_cm_linkedcontact` WHERE `contact_id` = contact_ids_cursor_contact_id OR `linked_contact_id` = contact_ids_cursor_contact_id;

                SELECT `comp_def_contact`,`comp_def_contact_fun` INTO comp_def_contact_new, comp_def_contact_fun_new FROM `fg_cm_contact` WHERE `id` = contact_ids_cursor_contact_id;
                IF(comp_def_contact_new IS NOT NULL AND comp_def_contact_new !='' )THEN
                    UPDATE `fg_cm_contact` SET `comp_def_contact` = NULL, `comp_def_contact_fun` = NULL,`last_updated` = simple_date WHERE `id` = contact_ids_cursor_contact_id;
                    SELECT `id`,`is_company` ,
                        (SELECT `value` FROM `fg_cm_attribute_value_text` WHERE fg_cm_attribute_value_text.`contact_id` = fg_cm_contact.`id` AND fg_cm_attribute_value_text.`attribute_id` = system_att_company_name),
                        (SELECT `value` FROM `fg_cm_attribute_value_text` WHERE fg_cm_attribute_value_text.`contact_id` = fg_cm_contact.`id` AND fg_cm_attribute_value_text.`attribute_id` = system_att_first_name),
                        (SELECT `value` FROM `fg_cm_attribute_value_text` WHERE fg_cm_attribute_value_text.`contact_id` = fg_cm_contact.`id` AND fg_cm_attribute_value_text.`attribute_id` = system_att_last_name)
                        INTO contactid4,is_company3,company_name,first_name,last_name
                        FROM `fg_cm_contact` WHERE id = comp_def_contact_new;

                        IF(is_company3=1)THEN
                            SET default_contactname = company_name;
                        ELSE    
                            CASE
                                WHEN last_name != '' THEN 
                                    SET lst_nme3 =    CONCAT(last_name," "); 
                                ELSE      
                                    SET lst_nme3 =    '';
                            END CASE;  
                            CASE
                                WHEN first_name != '' THEN 
                                    SET fst_nme3 =    CONCAT(first_name," "); 
                                ELSE      
                                    SET fst_nme3 =    '';
                            END CASE;
                            SET default_contactname = CONCAT(lst_nme3,fst_nme3); 
                        END IF;
                        IF(comp_def_contact_new IS NOT NULL AND comp_def_contact_new !='' AND comp_def_contact_fun_new !='' AND comp_def_contact_fun_new IS NOT NULL)THEN
                            SET def_contact_name = CONCAT(default_contactname,"( ",comp_def_contact_fun_new,")");
                        END IF;


                            SET logstr6 = CONCAT("(",contact_ids_cursor_contact_id,",","'",simple_date,"'",",","'",'linked contacts',"'",",","'",'Main contact',"'",",",QUOTE(def_contact_name),",","'",'-',"'",",",currentuser,",",'NULL',")");							
                            SET @insertqry = CONCAT(@insertqry,logstr6,',');																	
                            SET logstr7 = CONCAT("(",comp_def_contact_new,",","'",simple_date,"'",",","'",'linked contacts',"'",",","'",'Main contact of company',"'",",",QUOTE(contactnamen),",","'",'-',"'",",",currentuser,",",'NULL',")");							
                            SET @insertqry = CONCAT(@insertqry,logstr7,',');
						
                END IF;								
            END LOOP contact_ids_one;		
            SET @insertqry = CONCAT(@insertqry,'##');
            SET @pre_query  = REPLACE(@insertqry,',##','');
            PREPARE exec_qry FROM @pre_query;
            EXECUTE exec_qry;
            DEALLOCATE PREPARE exec_qry;

            DELETE FROM `archivecontactsto` WHERE `contact_id`= contact_ids_cursor_contact_id AND `archived_date`=date_today;
        CLOSE contactidscursor;
    END BLOCK1;
    INSERT INTO `fg_cache` (`tabletitle`, `club_id`, `updated_at`) VALUES ('common',clubid,present_time);
COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `moveContactsToSubscribers_sub` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `moveContactsToSubscribers_sub`(IN tablename TEXT,IN currentuser INT,IN clubid INT,IN system_att_first_name VARCHAR(50),IN system_att_last_name VARCHAR(50),IN system_att_company_name VARCHAR(50),IN system_att_dob  VARCHAR(50),IN team_terminology VARCHAR(50),IN date_today DATETIME,IN str_todate DATETIME,IN simple_date DATETIME,IN present_time INT)
BEGIN
    
    DECLARE loop_iteration_var,count_userid,count_user,user_contact_id,count_security,count_security1,role_log_id,count_con,contactid1,contactid2,contactid3 INTEGER;
    DECLARE gpcount,user_id_new,contact_cursor_is_member,contact_ids_cursor_contact_id,is_postal_address_val,comp_def_contact_new INTEGER DEFAULT "";
    DECLARE contact_cursor_contact_id,is_company1,is_company2,is_company3,is_company4,contact_id1,club_id1,contact_id_user,funid,user_contact_idy,count_securityn INTEGER;
    DECLARE cursor_linked_contact_id,group_id_new,role_id_new,is_executive_board_val,rcid,team_roster_category_id,contactid4,contactidn, is_companyn,contact_cursor_is_sponsor,outReturnCode  INTEGER;
    DECLARE category_title_new,value_before_new,group_type_new,group_type1 TEXT;
    DECLARE sf_guard_user_var,usergroup_name,group_name1,group_name,group_name2,group_name3,group_title_new,role_title, succ_mess, sql_err TEXT DEFAULT "";
    DECLARE role_type,function_title,comp_def_contact_fun_new TEXT DEFAULT "";
    DECLARE group_name_var,contactname,contactname1,contactname2,default_contactname,company_name1, fst_nme,lst_nme,fst_nme1,lst_nme1,fst_nme2,lst_nme2,fst_nme3,lst_nme3 VARCHAR(50);
    DECLARE first_name1,last_name1,def_contact_name,company_name,first_name,last_name,company_name2,first_name2,last_name2, company_namen,contactnamen,lst_nmen,fst_nmen,value_after_change,value_before_active VARCHAR(50);
    DECLARE first_namen VARCHAR(50) DEFAULT NULL;
    DECLARE last_namen VARCHAR(50) DEFAULT NULL;
    DECLARE record_not_found INTEGER DEFAULT 0;
    DECLARE loop2query2 TEXT;DECLARE exec_qry TEXT;
	DECLARE insertqry, logstr1,logstr2,logstr3,logstr4,logstr5,logstr6,logstr7,logstr8 TEXT;
	DECLARE pre_query, exec_sel_qry, dynamicSQL TEXT;
    DECLARE contactidscursor CURSOR FOR 
    SELECT `contact_id` FROM `archivecontactsto` WHERE `club_id`= clubid AND `author`=currentuser AND `archived_date`=date_today;
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;    
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		ROLLBACK;
	END;
	START TRANSACTION;
	SET @insertqry = "INSERT INTO `fg_cm_change_log` (`contact_id`, `date`, `kind`, `field`,`value_before`, `value_after`,`changed_by`, `confirmed_by` ) VALUES";
    BLOCK1: BEGIN
        OPEN contactidscursor;
            contact_ids_one: LOOP
                FETCH contactidscursor INTO contact_ids_cursor_contact_id;
                IF record_not_found THEN
                    SET record_not_found = 0;
                    LEAVE contact_ids_one;
                END IF;
                SELECT `is_company`, `is_postal_address` INTO is_companyn, is_postal_address_val FROM `fg_cm_contact` WHERE `id` = contact_ids_cursor_contact_id;
                BLOCK2: BEGIN
                    DECLARE contactcursor CURSOR FOR
                    SELECT `is_member`, `id`, `is_sponsor` FROM `fg_cm_contact` WHERE `id`= contact_ids_cursor_contact_id;
                    OPEN contactcursor;
                        loop_contact: LOOP
                            FETCH contactcursor INTO contact_cursor_is_member, contact_cursor_contact_id, contact_cursor_is_sponsor;
                            IF record_not_found THEN
                                SET record_not_found = 0;
                                 LEAVE loop_contact;
                            END IF;

                            
                            IF(contact_cursor_contact_id = contact_ids_cursor_contact_id)THEN



                                IF(contact_cursor_is_member = 1)THEN

                                    SET logstr2 = CONCAT("(",contact_cursor_contact_id,",","'",date_today,"'",",","'",'contact type',"'",",","'",'',"'",",","'",'Member',"'",",","'",'',"'",",",currentuser,",",currentuser,")");
                                    SET @insertqry = CONCAT(@insertqry,logstr2,',');									  
                                END IF;
                                IF(contact_cursor_is_sponsor = 1)THEN

                                    SET logstr8 = CONCAT("(",contact_cursor_contact_id,",","'",date_today,"'",",","'",'contact type',"'",",","'",'',"'",",","'",'Sponsor',"'",",","'",'',"'",",",currentuser,",",currentuser,")");
                                    SET @insertqry = CONCAT(@insertqry,logstr8,',');									  
                                END IF;					
                            END IF;
                            
                          UPDATE `fg_cm_contact` SET  `is_draft`= '1', `is_member` = '0', `is_sponsor` = '0',`is_seperate_invoice` = '0' WHERE `id`= contact_ids_cursor_contact_id;
                        END LOOP loop_contact;
                    CLOSE contactcursor;
                END BLOCK2;
 				SET @dynamicSQL=CONCAT('SELECT `contact_id`',',`',system_att_company_name,'`,`',system_att_first_name,'`,`',system_att_last_name,'` INTO @contactidn, @company_namen,@first_namen,@last_namen FROM `tablecontact',clubid,'`',' WHERE `contact_id` = ',contact_ids_cursor_contact_id);
				PREPARE exec_sel_qry FROM @dynamicSQL;
				EXECUTE exec_sel_qry ;	
				SET contactidn = @contactidn;
				SET company_namen = @company_namen;
				SET first_namen = @first_namen;
				SET last_namen = @last_namen;
				DEALLOCATE PREPARE exec_sel_qry;
                IF(is_companyn=1)THEN
                    SET contactnamen = company_namen;
                ELSE    
                    CASE
                        WHEN last_namen != '' THEN 
                             SET lst_nmen =    CONCAT(last_namen," "); 
                        ELSE      
                             SET lst_nmen =    '';
                    END CASE;  
                    CASE
                        WHEN first_namen != '' THEN 
                             SET fst_nmen =    CONCAT(first_namen," "); 
                        ELSE      
                             SET fst_nmen =    '';
                    END CASE;
                    SET contactnamen = CONCAT(lst_nmen,fst_nmen); 
                END IF;
                IF(is_postal_address_val = 1)THEN
                    UPDATE `fg_cm_contact` SET `is_postal_address`= '0' WHERE `id`= contact_ids_cursor_contact_id;
                    SET loop_iteration_var = 0;
                    BLOCK3: BEGIN  

                        DECLARE linkedcontactcursor CURSOR FOR    
                            SELECT fgcmlc.`linked_contact_id` 
                            FROM `fg_cm_linkedcontact` AS fgcmlc 
                            LEFT JOIN `fg_cm_relation` AS fgcr ON fgcmlc.`relation_id` = fgcr.`id`
                            LEFT JOIN `fg_cm_contact` AS fgc ON fgcmlc.`contact_id` = fgc.`id`
                            WHERE fgcmlc.`contact_id` = contact_ids_cursor_contact_id AND fgc.`club_id` = clubid AND fgcmlc.`type` = 'household'; 

                        OPEN linkedcontactcursor;
                            looplinkedcontact: LOOP
                                FETCH linkedcontactcursor INTO cursor_linked_contact_id;

                                IF record_not_found THEN
                                    SET record_not_found = 0;
                                    LEAVE looplinkedcontact;
                                END IF;
                                SET loop_iteration_var = loop_iteration_var +1 ;
                                UPDATE `fg_cm_contact` SET `is_postal_address`= '0' WHERE `id`= cursor_linked_contact_id AND `is_seperate_invoice` =1;

                                SELECT COUNT(`id`) INTO count_con FROM `fg_cm_contact` WHERE `id` = cursor_linked_contact_id AND `is_postal_address`=1; 
                                IF(count_con=0)THEN
                                    IF(loop_iteration_var=1)THEN
                                        UPDATE `fg_cm_contact` SET `is_postal_address`= '1' WHERE `id`= cursor_linked_contact_id;
                                    END IF;
                                ELSEIF(count_con>1)THEN
                                    UPDATE `fg_cm_contact` SET `is_postal_address`= '0' WHERE `id`= cursor_linked_contact_id;
                                    IF(loop_iteration_var=1)THEN
                                        UPDATE `fg_cm_contact` SET `is_postal_address`= '1' WHERE `id`= cursor_linked_contact_id;
                                    END IF;
                                END IF;
                            END LOOP looplinkedcontact;
                        CLOSE linkedcontactcursor;

                    END BLOCK3;
                END IF;
				
                SET user_id_new = (SELECT `id` FROM `sf_guard_user` WHERE `contact_id` = contact_ids_cursor_contact_id);
                BLOCK4: BEGIN 
                    DECLARE sfguard_userrights_cursor CURSOR FOR
                    SELECT  gg.`id`, gg.`type`, r.`id`
                        FROM sf_guard_user AS gu
                        JOIN sf_guard_user_group AS gug ON gug.`user_id` = gu.`id`
                        LEFT JOIN sf_guard_group AS gg ON gg.`id` = gug.`group_id`
                        LEFT JOIN fg_security_admin AS fsa ON ( gug.`group_id` = fsa.`group_id` AND gu.`contact_id` = fsa.`contact_id`)
                        LEFT JOIN fg_rm_role AS r ON fsa.`role_id` = r.`id`
                        WHERE gu.`contact_id` =contact_ids_cursor_contact_id;
                    OPEN sfguard_userrights_cursor;
                       loop_sfguard_userrights: LOOP 
                           FETCH sfguard_userrights_cursor INTO group_id_new,group_type_new,role_id_new;    
                           IF record_not_found THEN
                               SET record_not_found = 0;
                               LEAVE loop_sfguard_userrights;
                           END IF;
                           CASE
                                WHEN group_type_new = 'team' OR group_type_new = 'workgroup' THEN
                                
                                SELECT COUNT(`id`) INTO count_security FROM `fg_security_admin` WHERE `contact_id`= contact_ids_cursor_contact_id AND `group_id` = group_id_new AND `role_id` = role_id_new;
                                IF(count_security>0)THEN
                                    SELECT COUNT(gu.`id`) INTO sf_guard_user_var
                                        FROM sf_guard_user AS gu
                                        JOIN sf_guard_user_group AS gug ON gug.`user_id` = gu.`id`
                                        LEFT JOIN sf_guard_group AS gg ON gg.`id` = gug.`group_id`
                                        LEFT JOIN fg_security_admin AS fsa ON ( gug.`group_id` = fsa.`group_id` AND gu.`contact_id` = fsa.`contact_id` )
                                        LEFT JOIN fg_rm_role AS r ON fsa.`role_id` = r.`id`
                                        WHERE gu.`contact_id` = contact_ids_cursor_contact_id AND fsa.`group_id`  = group_id_new AND fsa.`role_id` = role_id_new;                             
                                    SET group_title_new = (SELECT  gg.`name`
                                        FROM sf_guard_user AS gu
                                        JOIN sf_guard_user_group AS gug ON gug.`user_id` = gu.`id`
                                        LEFT JOIN sf_guard_group AS gg ON gg.`id` = gug.`group_id`
                                        LEFT JOIN fg_security_admin AS fsa ON ( gug.`group_id` = fsa.`group_id` AND gu.`contact_id` = fsa.`contact_id` )
                                        LEFT JOIN fg_rm_role AS r ON fsa.`role_id` = r.`id`
                                        WHERE gu.`contact_id` = contact_ids_cursor_contact_id AND fsa.`group_id`  = group_id_new AND fsa.`role_id` = role_id_new);                             
                                    SET role_title = (SELECT  r.`title`
                                        FROM sf_guard_user AS gu
                                        JOIN sf_guard_user_group AS gug ON gug.`user_id` = gu.`id`
                                        LEFT JOIN sf_guard_group AS gg ON gg.`id` = gug.`group_id`
                                        LEFT JOIN fg_security_admin AS fsa ON ( gug.`group_id` = fsa.`group_id` AND gu.`contact_id` = fsa.`contact_id` )
                                        LEFT JOIN fg_rm_role AS r ON fsa.`role_id` = r.`id`
                                        WHERE gu.`contact_id` = contact_ids_cursor_contact_id AND fsa.`group_id`  = group_id_new AND fsa.`role_id` = role_id_new);                             

                                    IF sf_guard_user_var IS NOT NULL THEN
                                            SET group_name_var = CONCAT(group_title_new,"( ",role_title,")");
                                    END IF;
                                

                                    SET logstr3 = CONCAT("(",contact_ids_cursor_contact_id,",","'",date_today,"'",",","'",'user rights',"'",",","'",'-',"'",",",QUOTE(group_name_var),",","'",'-',"'",",",currentuser,",",currentuser,")");
                                    SET @insertqry = CONCAT(@insertqry,logstr3,',');									
                                    SET usergroup_name = (SELECT `name` FROM `sf_guard_group` WHERE `id` = group_id_new);
                                    SELECT `id`,`is_company`, 
                                        (SELECT `value` FROM `fg_cm_attribute_value_text` WHERE fg_cm_attribute_value_text.`contact_id` = fg_cm_contact.`id` AND fg_cm_attribute_value_text.`attribute_id` = system_att_company_name),
                                        (SELECT `value` FROM `fg_cm_attribute_value_text` WHERE fg_cm_attribute_value_text.`contact_id` = fg_cm_contact.`id` AND fg_cm_attribute_value_text.`attribute_id` =  system_att_first_name), 
                                        (SELECT `value` FROM `fg_cm_attribute_value_text` WHERE fg_cm_attribute_value_text.`contact_id` = fg_cm_contact.`id` AND fg_cm_attribute_value_text.`attribute_id` =  system_att_last_name)  
                                        INTO contactid1, is_company4, company_name,first_name,last_name  FROM `fg_cm_contact` WHERE `id` = contact_ids_cursor_contact_id;
                                    IF(is_company4=1)THEN
                                        SET contactname1 = company_name;
                                    ELSE    
                                        CASE
                                            WHEN last_name != '' THEN
                                                 SET lst_nme =    CONCAT(last_name," ");
                                            ELSE
                                                 SET lst_nme =    '';
                                        END CASE;
                                        CASE
                                            WHEN first_name != '' THEN
                                                 SET fst_nme =    CONCAT(first_name," ");
                                            ELSE
                                                 SET fst_nme =    '';
                                        END CASE;
                                        SET contactname1 = CONCAT(lst_nme,fst_nme);
                                    END IF;
                                    INSERT INTO `fg_rm_role_log` (`date`, `role_id`, `kind`,`field`, `value_before`, `value_after`,`changed_by`, `historical_id`, `is_historical`, `contactlog_id`,`booking_id` ) VALUES (str_todate, role_id_new, 'user rights', group_name, contactname1, '-', currentuser, NULL, 0, NULL, NULL);
                                    SET role_log_id = last_insert_id();
                                    SELECT `is_executive_board` INTO is_executive_board_val FROM `fg_rm_role` WHERE `id`= role_id_new;
                                    IF(is_executive_board_val=1)THEN
                                        INSERT INTO `fg_club_log` (`club_id`, `date`, `field`, `kind`,`value_before`, `value_after`,`changed_by`,`role_log_id` ) VALUES (clubid, str_todate,group_name , 'user rights', contactname1,NULL,currentuser ,role_log_id);
                                    END IF;
                                    DELETE FROM `fg_security_admin` WHERE `contact_id`= contact_ids_cursor_contact_id AND `group_id`= group_id_new AND `role_id` = role_id_new;
                                END IF;


                                SELECT COUNT(`id`) INTO gpcount FROM `fg_security_admin` WHERE `group_id` = group_id_new AND `contact_id` = contact_ids_cursor_contact_id;
                                IF(gpcount <= 0)THEN
                                   
                                    SELECT `name`,`type` INTO group_name1, group_type1 FROM `sf_guard_group` WHERE `id` = group_id_new;
                                    SELECT `contact_id` INTO contact_id1 FROM `sf_guard_user` WHERE `id` = user_id_new;   
                                    SELECT `club_id` INTO club_id1 FROM `fg_cm_contact` WHERE `id` = contact_id1; 



                                    DELETE FROM `sf_guard_user_group` WHERE `group_id` = group_id_new  AND `user_id` = user_id_new;
                                END IF;
                                
                           ELSE
                               
                               SELECT COUNT(u.`contact_id`), u.`contact_id`, gg.`name` INTO count_user, contact_id_user, group_name2 
                                   FROM `sf_guard_user_group` AS ug
                                   LEFT JOIN `sf_guard_user` AS u ON u.`id` = ug.`user_id`
                                   LEFT JOIN `sf_guard_group` AS gg ON ug.`group_id` = gg.`id`
                                   WHERE ug.`user_id` = user_id_new AND `group_id` =group_id_new;

                                   IF(count_user>0)THEN

                                        SET logstr4 = CONCAT("(",contact_id_user,",","'",date_today,"'",",","'",'user rights',"'",",","'",'-',"'",",","'",group_name2,"'",",","'",'-',"'",",",currentuser,",",currentuser,")");
                                        SET @insertqry = CONCAT(@insertqry,logstr4,',');										
                                   END IF;
                                   SELECT COUNT(`user_id`) INTO count_userid FROM `sf_guard_user_group` WHERE `group_id`= group_id_new AND `user_id`= user_id_new;

                                   IF(count_userid >0)THEN
                                       SELECT contact_id INTO user_contact_id FROM `sf_guard_user` WHERE `id`= user_id_new;
                                       SELECT  `id`,`is_company`, 
                                           (SELECT `value` FROM `fg_cm_attribute_value_text` WHERE fg_cm_attribute_value_text.`contact_id` = fg_cm_contact.`id` AND fg_cm_attribute_value_text.`attribute_id` = system_att_company_name),
                                           (SELECT `value` FROM `fg_cm_attribute_value_text` WHERE fg_cm_attribute_value_text.`contact_id` = fg_cm_contact.`id` AND fg_cm_attribute_value_text.`attribute_id` = system_att_first_name),
                                           (SELECT `value` FROM `fg_cm_attribute_value_text` WHERE fg_cm_attribute_value_text.`contact_id` = fg_cm_contact.`id` AND fg_cm_attribute_value_text.`attribute_id` = system_att_last_name)
                                       INTO contactid3, is_company2,company_name2,first_name2,last_name2 FROM `fg_cm_contact` WHERE id = user_contact_id;

                                       IF(is_company2=1)THEN
                                                SET contactname2 = company_name2;
                                       ELSE    
                                           CASE
                                               WHEN last_name2 != '' THEN 
                                                   SET lst_nme2 =    CONCAT(last_name2," "); 
                                               ELSE      
                                                   SET lst_nme2 =    '';
                                           END CASE;  
                                           CASE
                                               WHEN first_name2 != '' THEN 
                                                   SET fst_nme2 =    CONCAT(first_name2," "); 
                                               ELSE      
                                                   SET fst_nme2 =    '';
                                           END CASE;
                                           SET contactname2 = CONCAT(lst_nme2,fst_nme2); 
                                       END IF;                                       
                                       SELECT `name` INTO group_name3 FROM `sf_guard_group` WHERE `id`= group_id_new;
                                       INSERT INTO `fg_club_log` (`club_id`, `date`, `kind`, `field`,`value_before`, `value_after`,`changed_by` ) VALUES (clubid, str_todate, 'user rights', group_name3, contactname2,'-',currentuser);
                                       DELETE FROM `sf_guard_user_group` WHERE `group_id` = group_id_new AND `user_id` = user_id_new  ;
                                   END IF;
                           END CASE;
                       END LOOP loop_sfguard_userrights;
                    CLOSE sfguard_userrights_cursor;      
                END BLOCK4;
                BLOCK5: BEGIN
                    DECLARE fgrmrolecontact_cursor CURSOR FOR
                    SELECT rc.`id`, rcat.`title`, r.`id`, r.`type`, r.`title`,rf.`id`, rf.`title` FROM `fg_rm_role_contact` AS rc
                        LEFT JOIN fg_rm_category_role_function AS crf ON rc.`fg_rm_crf_id` = crf.`id`
                        INNER JOIN fg_rm_category AS rcat ON crf.`category_id` = rcat.`id`
                        INNER JOIN fg_rm_role AS r ON crf.`role_id` = r.`id`
                        LEFT JOIN fg_rm_function AS rf ON crf.`function_id` = rf.`id`
                        WHERE rc.`contact_id` = contact_ids_cursor_contact_id;
                    OPEN fgrmrolecontact_cursor;
                        loop_fgrmrolecontact: LOOP 
                            FETCH fgrmrolecontact_cursor INTO rcid, category_title_new, role_id_new, role_type, role_title, funid, function_title;    
                            IF record_not_found THEN
                                SET record_not_found = 0;
                                LEAVE loop_fgrmrolecontact;
                            END IF;
                            IF(function_title != '')THEN
                                SET value_before_new = CONCAT(function_title,"( ",role_title,")");
                            ELSE
                                SET value_before_new = role_title ;
                            END IF;
                            IF(category_title_new = 'Team')THEN
                                SET category_title_new = team_terminology;
                            END IF;

                            SET logstr5 = CONCAT("(",contact_ids_cursor_contact_id,",","'",date_today,"'",",","'",'assignment',"'",",",QUOTE(category_title_new),",",QUOTE(value_before_new),",","'",'-',"'",",",currentuser,",",currentuser,")");							
                            SET @insertqry = CONCAT(@insertqry,logstr5,',');							
                            INSERT INTO `fg_rm_role_log` (`date`, `role_id`, `kind`,`field`, `value_before`, `value_after`,`changed_by`, `historical_id`, `is_historical`, `contactlog_id`,`booking_id` ) VALUES (date_today, role_id_new, 'assigned contacts', function_title, contactnamen, '', currentuser, NULL, 0, NULL, NULL);
                            IF(funid != '')THEN
                                INSERT INTO `fg_rm_function_log` (`date`, `role_id`, `kind`,`function_id`,`field`, `value_before`, `value_after`,`changed_by`) VALUES (date_today, role_id_new, 'assigned contacts', funid, function_title, contactnamen, '', currentuser);
                            END IF;
                            DELETE FROM `fg_rm_role_contact` WHERE `id`= rcid;
                            BLOCK6: BEGIN
                                DECLARE fg_team_roster_category_cursor CURSOR FOR
                                SELECT id FROM `fg_team_roster_category` WHERE `category_type` =  'TEAM' AND `club_id` = club_id AND `team_id` = role_id_new ORDER BY `sort_order`; 
                                    OPEN fg_team_roster_category_cursor;
                                        loop_fg_team_roster_category: LOOP 
                                        FETCH fg_team_roster_category_cursor INTO team_roster_category_id;
                                            IF record_not_found THEN
                                                SET record_not_found = 0;
                                                LEAVE loop_fg_team_roster_category;
                                            END IF;
                                            DELETE FROM `fg_team_roster_category_contacts` WHERE `roster_id`= team_roster_category_id AND `contact_id` = contact_ids_cursor_contact_id;
                                        END LOOP loop_fg_team_roster_category;
                                    CLOSE fg_team_roster_category_cursor;
                            END BLOCK6; 
                        END LOOP loop_fgrmrolecontact;
                    CLOSE fgrmrolecontact_cursor;
                END BLOCK5;
                DELETE FROM `fg_cm_linkedcontact` WHERE `contact_id` = contact_ids_cursor_contact_id OR `linked_contact_id` = contact_ids_cursor_contact_id;

                SELECT `comp_def_contact`,`comp_def_contact_fun` INTO comp_def_contact_new, comp_def_contact_fun_new FROM `fg_cm_contact` WHERE `id` = contact_ids_cursor_contact_id;
                IF(comp_def_contact_new IS NOT NULL AND comp_def_contact_new !='' )THEN
                    UPDATE `fg_cm_contact` SET `comp_def_contact` = NULL, `comp_def_contact_fun` = NULL,`last_updated` = simple_date WHERE `id` = contact_ids_cursor_contact_id;
                    SELECT `id`,`is_company` ,
                        (SELECT `value` FROM `fg_cm_attribute_value_text` WHERE fg_cm_attribute_value_text.`contact_id` = fg_cm_contact.`id` AND fg_cm_attribute_value_text.`attribute_id` = system_att_company_name),
                        (SELECT `value` FROM `fg_cm_attribute_value_text` WHERE fg_cm_attribute_value_text.`contact_id` = fg_cm_contact.`id` AND fg_cm_attribute_value_text.`attribute_id` = system_att_first_name),
                        (SELECT `value` FROM `fg_cm_attribute_value_text` WHERE fg_cm_attribute_value_text.`contact_id` = fg_cm_contact.`id` AND fg_cm_attribute_value_text.`attribute_id` = system_att_last_name)
                        INTO contactid4,is_company3,company_name,first_name,last_name
                        FROM `fg_cm_contact` WHERE id = comp_def_contact_new;

                        IF(is_company3=1)THEN
                            SET default_contactname = company_name;
                        ELSE    
                            CASE
                                WHEN last_name != '' THEN 
                                    SET lst_nme3 =    CONCAT(last_name," "); 
                                ELSE      
                                    SET lst_nme3 =    '';
                            END CASE;  
                            CASE
                                WHEN first_name != '' THEN 
                                    SET fst_nme3 =    CONCAT(first_name," "); 
                                ELSE      
                                    SET fst_nme3 =    '';
                            END CASE;
                            SET default_contactname = CONCAT(lst_nme3,fst_nme3); 
                        END IF;
                        IF(comp_def_contact_new IS NOT NULL AND comp_def_contact_new !='' AND comp_def_contact_fun_new !='' AND comp_def_contact_fun_new IS NOT NULL)THEN
                            SET def_contact_name = CONCAT(default_contactname,"( ",comp_def_contact_fun_new,")");
                        END IF;


                            SET logstr6 = CONCAT("(",contact_ids_cursor_contact_id,",","'",simple_date,"'",",","'",'linked contacts',"'",",","'",'Main contact',"'",",",QUOTE(def_contact_name),",","'",'-',"'",",",currentuser,",",'NULL',")");							
                            SET @insertqry = CONCAT(@insertqry,logstr6,',');																	
                            SET logstr7 = CONCAT("(",comp_def_contact_new,",","'",simple_date,"'",",","'",'linked contacts',"'",",","'",'Main contact of company',"'",",",QUOTE(contactnamen),",","'",'-',"'",",",currentuser,",",'NULL',")");							
                            SET @insertqry = CONCAT(@insertqry,logstr7,',');
						
                END IF;								
            END LOOP contact_ids_one;		
            SET @insertqry = CONCAT(@insertqry,'##');
            SET @pre_query  = REPLACE(@insertqry,',##','');
            PREPARE exec_qry FROM @pre_query;
            EXECUTE exec_qry;
            DEALLOCATE PREPARE exec_qry;

            DELETE FROM `archivecontactsto` WHERE `contact_id`= contact_ids_cursor_contact_id AND `archived_date`=date_today;
        CLOSE contactidscursor;
    END BLOCK1;
    INSERT INTO `fg_cache` (`tabletitle`, `club_id`, `updated_at`) VALUES ('common',clubid,present_time);
COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `moveDocuments` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `moveDocuments`(IN system_att_first_name VARCHAR(50),IN system_att_last_name VARCHAR(50),IN system_att_company_name VARCHAR(50))
BEGIN
    
    DECLARE contact_id_doc,created_by_doc,file_size_doc,doc_club_id,gen_cat_id,new_document_id,doc_ver_id,contactid1,is_company4,contact_permanent_delete INTEGER;
    DECLARE title_doc, file_doc, company_name,first_name,last_name,contactname1,lst_nme,fst_nme TEXT;
    DECLARE date_doc DATETIME DEFAULT null; 
    DECLARE record_not_found INTEGER DEFAULT 0;
    DECLARE cmdocuments_cursor CURSOR FOR 
        SELECT fgcmd.`contact_id`,fgcmd.`title`,fgcmd.`created_by`,fgcmd.`date`,fgcmd.`file`,fgcmd.`file_size`,fgc.`club_id`,fgc.`is_permanent_delete` FROM `fg_cm_documents` fgcmd
            LEFT JOIN `fg_cm_contact` AS fgc ON fgcmd.`contact_id` = fgc.`id` ORDER BY fgcmd.`id`;
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;
    OPEN cmdocuments_cursor;
    cms_documents_loop: LOOP
                FETCH cmdocuments_cursor INTO contact_id_doc, title_doc, created_by_doc, date_doc, file_doc, file_size_doc,doc_club_id,contact_permanent_delete;
                IF record_not_found THEN
                    SET record_not_found = 0;
                    LEAVE cms_documents_loop;
                END IF;
                IF (contact_permanent_delete = 0)THEN
                
                    SET gen_cat_id = (SELECT fddc.`id` FROM `fg_dm_document_category` fddc WHERE fddc.`document_type` = 'CONTACT' AND fddc.`club_id` = doc_club_id AND fddc.`title`='General' LIMIT 1);
                    IF(gen_cat_id IS NULL)THEN
                        INSERT INTO `fg_dm_document_category` (`title`,`document_type`,`club_id`) VALUES ('General','CONTACT',doc_club_id);
                        SET gen_cat_id = last_insert_id(); 
                    END IF;
                    SELECT `id`,`is_company`, 
                        (SELECT `value` FROM `fg_cm_attribute_value_text` WHERE fg_cm_attribute_value_text.`contact_id` = fg_cm_contact.`id` AND fg_cm_attribute_value_text.`attribute_id` = system_att_company_name),
                        (SELECT `value` FROM `fg_cm_attribute_value_text` WHERE fg_cm_attribute_value_text.`contact_id` = fg_cm_contact.`id` AND fg_cm_attribute_value_text.`attribute_id` =  system_att_first_name), 
                        (SELECT `value` FROM `fg_cm_attribute_value_text` WHERE fg_cm_attribute_value_text.`contact_id` = fg_cm_contact.`id` AND fg_cm_attribute_value_text.`attribute_id` =  system_att_last_name)  
                        INTO contactid1, is_company4, company_name,first_name,last_name  FROM `fg_cm_contact` WHERE `id` = created_by_doc;
                    IF(is_company4=1)THEN
                        SET contactname1 = company_name;
                    ELSE    
                        CASE
                            WHEN last_name != '' THEN 
                                 SET lst_nme =    CONCAT(last_name," "); 
                            ELSE      
                                 SET lst_nme =    '';
                        END CASE;  
                        CASE
                            WHEN first_name != '' THEN 
                                 SET fst_nme =    CONCAT(first_name," "); 
                            ELSE      
                                 SET fst_nme =    '';
                        END CASE;
                        SET contactname1 = CONCAT(lst_nme,fst_nme); 
                    END IF;
                    INSERT INTO `fg_dm_documents` (`club_id`, `category_id`, `name`,`description`, `author`, `current_revison`, `filter_id`, `document_type`, `visible_for`, `is_visible_to_contact`, `is_frontend`) 
                                            VALUES (doc_club_id, gen_cat_id, title_doc, NULL, contactname1, NULL, NULL,'CONTACT', 'none', 0, 0);
                    SET new_document_id = last_insert_id();
                    INSERT INTO `fg_dm_version` (`document_id`,`file`, `created_at`, `modified_by`, `sort_order`,  `size`) VALUES (new_document_id, file_doc, date_doc, created_by_doc, NULL, file_size_doc);
                    SET doc_ver_id = last_insert_id();
                    UPDATE `fg_dm_documents` SET `current_revison` = doc_ver_id WHERE `id` = new_document_id;
                    INSERT INTO `fg_dm_assigment` (`document_id`, `reference_id`) VALUES (new_document_id, contact_id_doc);
                    INSERT INTO `migrate_contact_doc` (`club_id`, `file`) VALUES (doc_club_id, file_doc);
                END IF;
    END LOOP cms_documents_loop;
    CLOSE cmdocuments_cursor;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `new_procedure` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `new_procedure`()
BEGIN
	DECLARE contactidn integer;
	DECLARE company_namen, first_namen, last_namen TEXT;
	SELECT `contact_id`,9,2,23 INTO contactidn, company_namen,first_namen,last_namen FROM `tablecontact1234` WHERE `contact_id` = 370818;
	INSERT INTO `testArchive` (`data`) VALUES (contactidn);
INSERT INTO `testArchive` (`data`) VALUES (company_namen);
INSERT INTO `testArchive` (`data`) VALUES (first_namen);
INSERT INTO `testArchive` (`data`) VALUES (last_namen);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `RDcreateDateContactFieldTable` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `RDcreateDateContactFieldTable`()
BEGIN
	DECLARE cc_attribute_id, record_not_found, loop_counter INTEGER DEFAULT 0; 
	DECLARE cc_input_type, cc_fieldtype TEXT DEFAULT "";

	DECLARE attribute_cursor CURSOR FOR SELECT id FROM fg_cm_attribute AS ca  WHERE ca.is_system_field = 0 AND fieldtype='int';	
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;
	
	SET @s1 = CONCAT('CREATE TABLE `contact_date_fields` (`id` int(11) NOT NULL AUTO_INCREMENT, `club_id` int(11), `contact_id` int(11)');
	START TRANSACTION;
	
	
	OPEN attribute_cursor;
		loop_attribute: LOOP
			FETCH attribute_cursor INTO cc_attribute_id;			
				IF record_not_found THEN
					SET record_not_found = 0;
					LEAVE loop_attribute;
				END IF;
				SET loop_counter = loop_counter + 1;
				SET @s1 = CONCAT(@s1, ', `', loop_counter, '` DATETIME NULL DEFAULT NULL');					
			END LOOP loop_attribute;	
		CLOSE attribute_cursor;
		SET @s1 = CONCAT(@s1, ', PRIMARY KEY (`id`))');
		PREPARE stmt1 FROM @s1;
		EXECUTE stmt1;
		COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `RDcreateIntegerContactFieldTable` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `RDcreateIntegerContactFieldTable`()
BEGIN
	DECLARE cc_attribute_id, record_not_found, loop_counter INTEGER DEFAULT 0; 
	DECLARE cc_input_type, cc_fieldtype TEXT DEFAULT "";

	DECLARE attribute_cursor CURSOR FOR SELECT id FROM fg_cm_attribute AS ca  WHERE ca.is_system_field = 0 AND fieldtype='int';	
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;
	
	SET @s1 = CONCAT('CREATE TABLE `contact_integer_fields` (`id` int(11) NOT NULL AUTO_INCREMENT, `club_id` int(11), `contact_id` int(11)');
	START TRANSACTION;
	
	
	OPEN attribute_cursor;
		loop_attribute: LOOP
			FETCH attribute_cursor INTO cc_attribute_id;			
				IF record_not_found THEN
					SET record_not_found = 0;
					LEAVE loop_attribute;
				END IF;
				SET loop_counter = loop_counter + 1;
				SET @s1 = CONCAT(@s1, ', `', loop_counter, '` VARCHAR(160) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL');
					
			END LOOP loop_attribute;	
		CLOSE attribute_cursor;
		SET @s1 = CONCAT(@s1, ', PRIMARY KEY (`id`))');
		PREPARE stmt1 FROM @s1;
		EXECUTE stmt1;
		COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `RDcreateSystemContactFieldTable` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `RDcreateSystemContactFieldTable`()
BEGIN
	DECLARE cc_attribute_id, record_not_found, loop_counter INTEGER DEFAULT 0; 
	DECLARE cc_input_type, cc_fieldtype TEXT DEFAULT "";

	DECLARE attribute_cursor CURSOR FOR SELECT id, input_type, fieldtype FROM fg_cm_attribute AS ca  WHERE ca.is_system_field = 1;	
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;
	
	START TRANSACTION;
	SET @s1 = CONCAT('CREATE TABLE `contact_system_fields` (`id` int(11) NOT NULL AUTO_INCREMENT, `club_id` int(11), `contact_id` int(11)');
	
	
	OPEN attribute_cursor;
		loop_attribute: LOOP
			FETCH attribute_cursor INTO cc_attribute_id, cc_input_type, cc_fieldtype;			
				IF record_not_found THEN
					SET record_not_found = 0;
					LEAVE loop_attribute;
				END IF;
				SET loop_counter = loop_counter + 1;
				CASE cc_input_type
					WHEN 'multiline' THEN
						BEGIN
							SET @s1 = CONCAT(@s1, ', `', loop_counter, '` TEXT CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL ');
						END;	
					WHEN 'date' THEN
						BEGIN								
							IF (cc_fieldtype = 'date') THEN 
								SET @s1 = CONCAT(@s1, ', `', loop_counter, '` DATETIME NULL DEFAULT NULL');
							ELSE
								SET @s1 = CONCAT(@s1, ', `', loop_counter, '` VARCHAR(30) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL');
							END IF;							
							
						END;
					WHEN 'fileupload' THEN
						BEGIN	
							SET @s1 = CONCAT(@s1, ', `', loop_counter, '` VARCHAR(200) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL');
						END;
					WHEN 'imageupload' THEN
						BEGIN	
							SET @s1 = CONCAT(@s1, ', `', loop_counter, '` VARCHAR(200) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL');
						END;							
					WHEN 'singleline' THEN
						BEGIN
							SET @s1 = CONCAT(@s1, ', `', loop_counter, '` VARCHAR(160) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL');
						END;								
					ELSE
						BEGIN
							SET @s1 = CONCAT(@s1, ', `', loop_counter, '` VARCHAR(160) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL');
						END;
				END CASE;					
			END LOOP loop_attribute;	
		CLOSE attribute_cursor;
		SET @s1 = CONCAT(@s1, ', PRIMARY KEY (`id`))');
		PREPARE stmt1 FROM @s1;
		EXECUTE stmt1;
		COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `RDcreateTextContactFieldTable` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `RDcreateTextContactFieldTable`()
BEGIN
	DECLARE cc_attribute_id, record_not_found, loop_counter INTEGER DEFAULT 0; 
	DECLARE cc_input_type, cc_fieldtype TEXT DEFAULT "";

	DECLARE attribute_cursor CURSOR FOR SELECT id FROM fg_cm_attribute AS ca  WHERE ca.is_system_field = 0 AND fieldtype='text';	
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;
	
	START TRANSACTION;
	SET @s1 = CONCAT('CREATE TABLE `contact_text_fields` (`id` int(11)  NOT NULL AUTO_INCREMENT, `club_id` int(11), `contact_id` int(11)');
	
	
	OPEN attribute_cursor;
		loop_attribute: LOOP
			FETCH attribute_cursor INTO cc_attribute_id;			
				IF record_not_found THEN
					SET record_not_found = 0;
					LEAVE loop_attribute;
				END IF;
				SET loop_counter = loop_counter + 1;
				CASE cc_input_type
					WHEN 'multiline' THEN
						BEGIN
							SET @s1 = CONCAT(@s1, ', `', loop_counter, '` TEXT CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL ');
						END;	
					WHEN 'date' THEN
						BEGIN
							SET @s1 = CONCAT(@s1, ', `', loop_counter, '` VARCHAR(30) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL');
						END;
					WHEN 'fileupload' THEN
						BEGIN	
							SET @s1 = CONCAT(@s1, ', `', loop_counter, '` VARCHAR(200) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL');
						END;
					WHEN 'imageupload' THEN
						BEGIN	
							SET @s1 = CONCAT(@s1, ', `', loop_counter, '` VARCHAR(200) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL');
						END;							
					WHEN 'singleline' THEN
						BEGIN
							SET @s1 = CONCAT(@s1, ', `', loop_counter, '` VARCHAR(160) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL');
						END;								
					ELSE
						BEGIN
							SET @s1 = CONCAT(@s1, ', `', loop_counter, '` VARCHAR(160) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL');
						END;
				END CASE;					
			END LOOP loop_attribute;	
		CLOSE attribute_cursor;
		SET @s1 = CONCAT(@s1, ', PRIMARY KEY (`id`))');
		PREPARE stmt1 FROM @s1;
		EXECUTE stmt1;
		COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `removeFields` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `removeFields`(arrtbuteIN INT)
BEGIN

DECLARE sort_club_id, maxsort_odr, ret_attribute_id, attribute_id, record_not_found INTEGER DEFAULT 0;
DECLARE result_record, chr_type, s, exec_qry, insertqry, pre_query, char_type TEXT DEFAULT "";

DECLARE club_cursor CURSOR FOR SELECT `id` FROM `fg_club` WHERE is_deleted=0 AND (state = "C" OR state = "CF" OR state = "D")  ORDER BY `id`;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
    SELECT CONCAT('Sql Error', result_record);
    ROLLBACK;
END;
START TRANSACTION;
BLOCK1: BEGIN

OPEN club_cursor;
club_loop: LOOP
FETCH club_cursor INTO sort_club_id;

           IF record_not_found THEN
                SET record_not_found = 0;
                LEAVE club_loop;
            END IF;
SET result_record = sort_club_id;
	 


	
 SET @insertqry = CONCAT('ALTER TABLE ', ' `tablecontact', result_record, '`', ' ADD `' ,arrtbuteIN, '` ',' VARCHAR(160) NULL ','  CHARACTER SET utf8 COLLATE utf8_general_ci NULL ');		
PREPARE exec_qry FROM @insertqry;
            EXECUTE exec_qry;
            DEALLOCATE PREPARE exec_qry;



  
END LOOP club_loop;
    CLOSE club_cursor;
END BLOCK1;

COMMIT;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `resetInvoices` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `resetInvoices`(IN accountingid INTEGER, IN contactid INTEGER, IN clubid INTEGER)
BEGIN	
    DECLARE count_account INTEGER DEFAULT 0;
    DECLARE nxt_invoice_no TEXT DEFAULT "";
    DECLARE EXIT HANDLER FOR SQLEXCEPTION, SQLWARNING
    BEGIN
        ROLLBACK;
    END;
	START TRANSACTION;



                DELETE FROM `fg_im_invoice` WHERE `accouting_id`= accountingid AND `club_id`=clubid;


                DELETE FROM `fg_im_bankinterface` WHERE `accounting_id`= accountingid AND `club_id`=clubid;


                DELETE FROM `fg_im_creditnote` WHERE `accouting_id`= accountingid AND `club_id`=clubid;


                DELETE FROM `fg_im_journal` WHERE `accounting_id`= accountingid AND `club_id`=clubid;


                DELETE FROM `fg_im_journal_export` WHERE `accounting_id`= accountingid;



                DELETE FROM `fg_im_invoice_run` WHERE `accounting_id`= accountingid AND `club_id`=clubid;


                DELETE FROM `fg_im_fiscalyear` WHERE `accounting_id` =accountingid AND `club_id` =clubid AND `end_date` < CURDATE();


                UPDATE  `fg_im_accouting` SET  `last_reset_date` =  NOW(), `last_reset_by` =  contactid, `reference_no_current` = '1', `reference_no_next` = '1' WHERE `fg_im_accouting`.`id` = accountingid;	


                SELECT COUNT(*) INTO count_account FROM `fg_im_accouting` WHERE `club_id` = clubid AND `is_active` = 1;
                IF(count_account = 1)THEN
                    UPDATE `fg_settings` SET `value`= '10001' WHERE `club_id`= clubid AND `type` = 'CLUB' AND `name` = 'Next Credit Note';
                    SET nxt_invoice_no = CONCAT(YEAR(NOW()),'00001');
                    UPDATE `fg_settings` SET `value`= nxt_invoice_no WHERE `club_id`= clubid AND `type` = 'CLUB' AND `name` = 'Next Invoice';
                END IF;
		
	COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `restoreAttributeData` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `restoreAttributeData`()
BEGIN
	
	DECLARE record_not_found, contactId INTEGER DEFAULT 0;
	DECLARE dynamicSQL, updateQry, exec_qry, attributeData TEXT DEFAULT "";

	
	DECLARE field_cursor CURSOR FOR SELECT `contact_id`, `71891` FROM `tablecontact1111_back`;

	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;

	SET autocommit = 0;
	START TRANSACTION;

	OPEN field_cursor;
	loop_field: LOOP
		FETCH field_cursor INTO contactId, attributeData;

		IF record_not_found THEN
			SET record_not_found = 0;
			LEAVE loop_field;
		END IF;

		IF attributeData IS NULL THEN
			SET attributeData = "";
		END IF;

		
		UPDATE `tablecontact1111` SET `71891` = attributeData WHERE `contact_id` = contactId;

		
		INSERT INTO `fg_cm_attribute_value_text`(`attribute_id`, `contact_id`, `value`) VALUES (71891, contactId, attributeData) ON DUPLICATE KEY UPDATE `value` = attributeData;

	END LOOP loop_field;
	CLOSE field_cursor;

	COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `SaveLinkedContact` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`fairgate`@`localhost` PROCEDURE `SaveLinkedContact`(IN `clubId` INT, IN `in_contact_id` INT, IN `currentContactId` INT, IN `default_club_lang` CHAR(2))
BEGIN

DECLARE linked_relation_id INTEGER;
DECLARE record_not_found INTEGER DEFAULT 0; 
DECLARE temp_relation INTEGER;
DECLARE temp_count INTEGER;

DECLARE contact_cursor_value_contact INTEGER;
DECLARE contact_cursor_value_linked_contact INTEGER;
DECLARE contact_cursor_value_relation INTEGER;

DECLARE contact_cursor_value_contact_two INTEGER;
DECLARE contact_cursor_value_linked_contact_two INTEGER;
DECLARE contact_cursor_value_relation_two INTEGER;

DECLARE in_linked_contact_id INTEGER DEFAULT 0;
DECLARE in_relation_id INTEGER DEFAULT 0;

DECLARE connections_cursor CURSOR FOR SELECT `linked_contact_id`, `relation_id` FROM `fg_temp_add_connection` WHERE `club_id`=clubId AND `contact_id`=in_contact_id;

DECLARE contact_cursor CURSOR FOR
    SELECT `contact_id`, `linked_contact_id`, `relation_id` FROM `fg_cm_linkedcontact` WHERE (`contact_id` = in_contact_id  OR `contact_id` = in_linked_contact_id)  AND `type`='household' AND `club_id`=clubId;

DECLARE contact_cursor_one CURSOR FOR
    SELECT `contact_id`, `linked_contact_id`, `relation_id` FROM `fg_cm_linkedcontact` WHERE `contact_id` = in_contact_id AND `type`='household' AND `club_id`=clubId;
DECLARE contact_cursor_two CURSOR FOR
    SELECT `contact_id`, `linked_contact_id`, `relation_id` FROM `fg_cm_linkedcontact` WHERE `contact_id` = in_linked_contact_id AND `type`='household' AND `club_id`=clubId;

DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
	ROLLBACK;
END;
	
START TRANSACTION;


-- Connections loop starts --
OPEN connections_cursor;
loop_connections: LOOP

	FETCH connections_cursor INTO in_linked_contact_id, in_relation_id;
    
    	IF record_not_found THEN
		SET record_not_found = 0;
        	LEAVE loop_connections;
    	END IF;

    	SELECT `first_level_relation_id` INTO linked_relation_id FROM `fg_cm_relation_first_level` WHERE `relation_id` = in_relation_id;

	OPEN contact_cursor;
	loop_contact: LOOP

	FETCH contact_cursor INTO
	    contact_cursor_value_contact,
	    contact_cursor_value_linked_contact,
	    contact_cursor_value_relation;
	    
	    IF record_not_found THEN
		SET record_not_found = 0;
		        LEAVE loop_contact;
	    END IF;
	    
		IF (contact_cursor_value_contact = in_contact_id) THEN
	    
		    SELECT `second_level_relation_id` INTO temp_relation FROM `fg_cm_relation_second_level` 
		                WHERE  `relation_id` = linked_relation_id AND `first_level_relation_id` = contact_cursor_value_relation;
	    
				INSERT INTO `fg_cm_linkedcontact` (`id`, `contact_id`, `linked_contact_id`, `relation_id`, `type`, `club_id`) 
		        VALUES (NULL, in_linked_contact_id, contact_cursor_value_linked_contact, temp_relation, 'household', clubId);
		        
		    INSERT INTO `fg_cm_linkedcontact` (`id`, `contact_id`, `linked_contact_id`, `relation_id`, `type`, `club_id`) 
		        VALUES (NULL, contact_cursor_value_linked_contact, in_linked_contact_id, 
		        (SELECT `first_level_relation_id` FROM `fg_cm_relation_first_level` WHERE `relation_id` = temp_relation)
		        , 'household', clubId);

		    -- Connection Log Entry --
		    INSERT INTO `fg_cm_log_connection` (`contact_id`,`linked_contact_id`,`assigned_club_id`,`date`,`connection_type`,`relation`,`value_before`,`value_after`,`changed_by`) VALUES 
(in_linked_contact_id, contact_cursor_value_linked_contact, clubId, NOW(), 'Household contact', (SELECT IF(Ri18n.`title_lang`='',r.`name`,Ri18n.`title_lang`) as name FROM `fg_cm_relation` r LEFT JOIN `fg_cm_relation_i18n` Ri18n ON Ri18n.`id`=r.`id` AND Ri18n.`lang`=default_club_lang WHERE r.`id`=temp_relation), '-', contactName(contact_cursor_value_linked_contact), currentContactId),
(contact_cursor_value_linked_contact, in_linked_contact_id, clubId, NOW(), 'Household contact', (SELECT IF(Ri18n.`title_lang`='',r.`name`,Ri18n.`title_lang`) as name FROM `fg_cm_relation` r LEFT JOIN `fg_cm_relation_i18n` Ri18n ON Ri18n.`id`=r.`id` AND Ri18n.`lang`=default_club_lang WHERE r.`id`=(SELECT `first_level_relation_id` FROM `fg_cm_relation_first_level` WHERE `relation_id` = temp_relation)), '-', contactName(in_linked_contact_id), currentContactId);
				
		ELSE 
		        
		    SELECT `second_level_relation_id` INTO temp_relation FROM `fg_cm_relation_second_level` 
		                WHERE  `relation_id` = in_relation_id AND `first_level_relation_id` = contact_cursor_value_relation;
	    
				INSERT INTO `fg_cm_linkedcontact` (`id`, `contact_id`, `linked_contact_id`, `relation_id`, `type`, `club_id`) 
		        VALUES (NULL, in_contact_id, contact_cursor_value_linked_contact, temp_relation, 'household', clubId);
		        
		    INSERT INTO `fg_cm_linkedcontact` (`id`, `contact_id`, `linked_contact_id`, `relation_id`, `type`, `club_id`) 
		        VALUES (NULL, contact_cursor_value_linked_contact, in_contact_id, 
		        (SELECT `first_level_relation_id` FROM `fg_cm_relation_first_level` WHERE `relation_id` = temp_relation)
		        , 'household', clubId);

		    -- Connection Log Entry --
		    INSERT INTO `fg_cm_log_connection` (`contact_id`,`linked_contact_id`,`assigned_club_id`,`date`,`connection_type`,`relation`,`value_before`,`value_after`,`changed_by`) VALUES 
(in_contact_id, contact_cursor_value_linked_contact, clubId, NOW(), 'Household contact', (SELECT IF(Ri18n.`title_lang`='',r.`name`,Ri18n.`title_lang`) as name FROM `fg_cm_relation` r LEFT JOIN `fg_cm_relation_i18n` Ri18n ON Ri18n.`id`=r.`id` AND Ri18n.`lang`=default_club_lang WHERE r.`id`=temp_relation), '-', contactName(contact_cursor_value_linked_contact), currentContactId),
(contact_cursor_value_linked_contact, in_contact_id, clubId, NOW(), 'Household contact', (SELECT IF(Ri18n.`title_lang`='',r.`name`,Ri18n.`title_lang`) as name FROM `fg_cm_relation` r LEFT JOIN `fg_cm_relation_i18n` Ri18n ON Ri18n.`id`=r.`id` AND Ri18n.`lang`=default_club_lang WHERE r.`id`=(SELECT `first_level_relation_id` FROM `fg_cm_relation_first_level` WHERE `relation_id` = temp_relation)), '-', contactName(in_contact_id), currentContactId);
		        
		END IF;		
	    
	END LOOP loop_contact;
	CLOSE contact_cursor;


	INSERT INTO `fg_cm_linkedcontact` (`id`, `contact_id`, `linked_contact_id`, `relation_id`, `type`, `club_id`) 
										VALUES (NULL, in_contact_id, in_linked_contact_id, in_relation_id, 'household', clubId);
	INSERT INTO `fg_cm_linkedcontact` (`id`, `contact_id`, `linked_contact_id`, `relation_id`, `type`, `club_id`) 
										VALUES (NULL, in_linked_contact_id, in_contact_id, linked_relation_id, 'household', clubId);

	-- Connection Log Entry --
	INSERT INTO `fg_cm_log_connection` 
(`contact_id`,`linked_contact_id`,`assigned_club_id`,`date`,`connection_type`,`relation`,`value_before`,`value_after`,`changed_by`) VALUES 
(in_contact_id, in_linked_contact_id, clubId, NOW(), 'Household contact', (SELECT IF(Ri18n.`title_lang`='',r.`name`,Ri18n.`title_lang`) as name FROM `fg_cm_relation` r LEFT JOIN `fg_cm_relation_i18n` Ri18n ON Ri18n.`id`=r.`id` AND Ri18n.`lang`=default_club_lang WHERE r.`id`=in_relation_id), '-', contactName(in_linked_contact_id), currentContactId),
(in_linked_contact_id, in_contact_id, clubId, NOW(), 'Household contact', (SELECT IF(Ri18n.`title_lang`='',r.`name`,Ri18n.`title_lang`) as name FROM `fg_cm_relation` r LEFT JOIN `fg_cm_relation_i18n` Ri18n ON Ri18n.`id`=r.`id` AND Ri18n.`lang`=default_club_lang WHERE r.`id`=linked_relation_id), '-', contactName(in_contact_id), currentContactId);
		                            
		                            
	OPEN contact_cursor_one;
	loop_contact_one: LOOP

	FETCH contact_cursor_one INTO
	    contact_cursor_value_contact,
	    contact_cursor_value_linked_contact,
	    contact_cursor_value_relation;
	    
	    IF record_not_found THEN
		    SET record_not_found = 0;
		                LEAVE loop_contact_one;
	    END IF;
	
		OPEN contact_cursor_two;
		loop_contact_two: LOOP
	
		FETCH contact_cursor_two INTO
			contact_cursor_value_contact_two,
			contact_cursor_value_linked_contact_two,
			contact_cursor_value_relation_two;
		
		IF record_not_found THEN
		    SET record_not_found = 0;
		                LEAVE loop_contact_two;
		END IF;
		
		IF(contact_cursor_value_linked_contact != in_linked_contact_id) THEN 
		    IF(contact_cursor_value_linked_contact_two != in_contact_id) THEN 
		        IF(contact_cursor_value_linked_contact != contact_cursor_value_linked_contact_two) THEN 
		    
		    
		            SELECT `second_level_relation_id` INTO temp_relation FROM `fg_cm_relation_second_level` WHERE  `relation_id` = (
		                SELECT `second_level_relation_id` FROM `fg_cm_relation_second_level` WHERE  `relation_id` = (
		                    SELECT `first_level_relation_id` FROM `fg_cm_relation_first_level` WHERE `relation_id` = contact_cursor_value_relation
		                ) AND `first_level_relation_id` = in_relation_id
		            ) AND `first_level_relation_id` = contact_cursor_value_relation_two;
		            
		            SELECT count(*)  INTO temp_count FROM `fg_cm_linkedcontact` 
		                WHERE `contact_id` = contact_cursor_value_linked_contact AND `linked_contact_id` = contact_cursor_value_linked_contact_two AND `club_id`=clubId;
		                
		            IF(temp_count = 0) THEN 
		            
		                INSERT INTO `fg_cm_linkedcontact` (`id`, `contact_id`, `linked_contact_id`, `relation_id`, `type`, `club_id`) 
										VALUES (NULL, contact_cursor_value_linked_contact, contact_cursor_value_linked_contact_two, temp_relation, 'household', clubId);

				-- Connection Log Entry --
				INSERT INTO `fg_cm_log_connection` 
(`contact_id`,`linked_contact_id`,`assigned_club_id`,`date`,`connection_type`,`relation`,`value_before`,`value_after`,`changed_by`) VALUES 
(contact_cursor_value_linked_contact, contact_cursor_value_linked_contact_two, clubId, NOW(), 'Household contact', (SELECT IF(Ri18n.`title_lang`='',r.`name`,Ri18n.`title_lang`) as name FROM `fg_cm_relation` r LEFT JOIN `fg_cm_relation_i18n` Ri18n ON Ri18n.`id`=r.`id` AND Ri18n.`lang`=default_club_lang WHERE r.`id`=temp_relation), '-', contactName(contact_cursor_value_linked_contact_two), currentContactId);

		            END IF;
		                            
		            
		                            
		        END IF;
		    END IF;
		END IF;
	    
		END LOOP loop_contact_two;
	    CLOSE contact_cursor_two;	
	
		
	END LOOP loop_contact_one;
	CLOSE contact_cursor_one;

-- Connections loop ends --
END LOOP loop_connections;
CLOSE connections_cursor;

COMMIT;

DELETE FROM `fg_temp_add_connection` WHERE `club_id`=clubId AND `contact_id`=in_contact_id;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SaveOtherContact` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `SaveOtherContact`(in_contact_id INT, in_linked_contact_id INT, in_relation_id INT)
BEGIN

DECLARE relation_other INTEGER;
SET relation_other = in_relation_id;

SELECT `first_level_relation_id` INTO relation_other FROM `fg_cm_relation_first_level` WHERE `relation_id` = in_relation_id;

INSERT INTO `fg_cm_linkedcontact` (`id`, `contact_id`, `linked_contact_id`, `relation_id`, `relation`, `type`) 
    VALUES (NULL, in_contact_id, in_linked_contact_id, in_relation_id, NULL, 'otherpersonal');
INSERT INTO `fg_cm_linkedcontact` (`id`, `contact_id`, `linked_contact_id`, `relation_id`, `relation`, `type`) 
    VALUES (NULL, in_linked_contact_id, in_contact_id, relation_other, NULL, 'otherpersonal');

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `splitAttributesInTableSettings` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `splitAttributesInTableSettings`()
BEGIN
DECLARE delim CHAR DEFAULT ',';
DECLARE current_pos INT DEFAULT 1;
DECLARE sort_order INT DEFAULT 1;
DECLARE current, test, at_attributes CHAR DEFAULT '';
DECLARE  saTail,sHead VARCHAR(50) DEFAULT '';
DECLARE record_not_found, at_attr_id,iSeparLen INTEGER DEFAULT 0; 
DECLARE attrid_cursor CURSOR FOR SELECT  id FROM `fg_table_settings` WHERE id=1;


	BLOCK1: BEGIN
                OPEN attrid_cursor;
                loop_attr: LOOP
		        FETCH attrid_cursor INTO at_attr_id;
		        IF record_not_found THEN
		                SET record_not_found = 0;
		                LEAVE loop_attr;
		        END IF;
       
 
 
   	BLOCK2: BEGIN
               DECLARE attrbts_cursor CURSOR FOR SELECT `attributes` FROM `fg_table_settings` AS t WHERE t.`id`=at_attr_id;
                OPEN attrbts_cursor;
                split_ids: LOOP
                 FETCH attrbts_cursor INTO at_attributes;
		    IF record_not_found THEN
		            SET record_not_found = 0;
		            LEAVE split_ids;
		 END IF;
	    SET saTail = at_attributes;
            SET iSeparLen = LENGTH(delim);
	       create_layers:
            WHILE saTail != '' DO
  	    SET sHead = SUBSTRING_INDEX(saTail, delim, 1);
	    SET saTail = SUBSTRING( saTail, LENGTH(sHead) + 1 + iSeparLen );
	   
	    INSERT INTO fg_table_settings_columns ( attr_id,type,table_settings_id,sort_order,other) values(sHead,'attr',at_attr_id,sort_order,saTail);

	    SET sort_order = sort_order + 1;    
            END WHILE;
	  
	
        END LOOP split_ids;
        CLOSE attrbts_cursor;
   END; 
      END LOOP loop_attr;
        CLOSE attrid_cursor;
END;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `sponsorSetEnddate` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `sponsorSetEnddate`()
BEGIN
DECLARE bid INTEGER;
DECLARE record_not_found INTEGER DEFAULT 0;
DECLARE contact_cursor CURSOR FOR SELECT id FROM `fg_sm_bookings` WHERE `end_date` IS NOT NULL;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;

   START TRANSACTION;
        OPEN contact_cursor;
            loop_contact: LOOP
                FETCH contact_cursor INTO bid;
                    IF record_not_found THEN
                        SET record_not_found = 0;
                        LEAVE loop_contact;
                END IF;
                UPDATE  `fg_sm_bookings` SET `end_date` = CONCAT(DATE(`end_date`),' 23:59:59' ) WHERE `id`= bid;
                                     
            END LOOP loop_contact;   
        CLOSE contact_cursor;
    COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `systemFieldSort` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `systemFieldSort`()
BEGIN

DECLARE sort_club_id INTEGER DEFAULT 0;
DECLARE result_record TEXT DEFAULT "";

DECLARE club_cursor CURSOR FOR
SELECT `id` FROM `fg_club` ORDER BY `id` LIMIT 0, 5;

DECLARE EXIT HANDLER FOR NOT FOUND
BEGIN
    ROLLBACK;
    SELECT result_record;
END;

DECLARE EXIT HANDLER FOR SQLEXCEPTION, SQLWARNING
BEGIN
    ROLLBACK;
END;

BLOCK1: BEGIN

OPEN club_cursor;

club_loop: LOOP

START TRANSACTION;

FETCH club_cursor INTO sort_club_id;

SET result_record = sort_club_id;

END LOOP club_loop;

CLOSE club_cursor;

END BLOCK1;

COMMIT;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `tempInsertFgNotificationContacts` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `tempInsertFgNotificationContacts`()
BEGIN
	DECLARE cc_contact_id, cc_change_interval, cc_club_id INTEGER DEFAULT 0; 	
	DECLARE value_is_exist, record_not_found, is_superadmin, has_contact_admin_rights INTEGER DEFAULT 0; 
	
	DECLARE contact_cursor CURSOR FOR SELECT c.`contact_id`, c.`change_interval`, c.`club_id` FROM fg_cm_change_email AS c;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;

	START TRANSACTION;
		CREATE TABLE IF NOT EXISTS `fg_notification_contacts` (`id` int(11)  AUTO_INCREMENT, `notification_id` int(11) NOT NULL,
                `club_id` int(11) NOT NULL, `contact_id` int(11) NOT NULL, `period` int(11) NOT NULL, `is_active` tinyint(1) NOT NULL DEFAULT 0,
                `updated_at` datetime, PRIMARY KEY (`id`), FOREIGN KEY(`notification_id`) REFERENCES `fg_notification`(`id`) ON DELETE CASCADE ON 
                UPDATE CASCADE, FOREIGN KEY(`club_id`) REFERENCES `fg_club`(`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY(`contact_id`) REFERENCES
                `fg_cm_contact`(`id`) ON DELETE CASCADE ON UPDATE CASCADE);
		OPEN contact_cursor;
			loop_contact: LOOP
				FETCH contact_cursor INTO cc_contact_id, cc_change_interval, cc_club_id;
				IF record_not_found THEN
					SET record_not_found = 0;
					LEAVE loop_contact;
				END IF;
				SET is_superadmin = (SELECT u.`is_super_admin` FROM `sf_guard_user` AS u 
                                                                WHERE u.`contact_id` = cc_contact_id ORDER BY u.`id` ASC);
                                IF is_superadmin = 0 THEN
				     SET has_contact_admin_rights = (SELECT COUNT(ug.`group_id`) FROM `sf_guard_user` AS u INNER JOIN `sf_guard_user_group` AS ug
                                                                ON ug.`user_id` = u.`id`
                                                                WHERE u.`contact_id` = cc_contact_id AND ug.`group_id` IN (1,28) ORDER BY u.`id` ASC);
                                END IF;
                                IF ((has_contact_admin_rights != 0) OR (is_superadmin = 1)) THEN
				     SET value_is_exist = (SELECT COUNT(nc.`id`) FROM `fg_notification_contacts` AS nc WHERE nc.`contact_id` =
                                     cc_contact_id AND  nc.`notification_id` = 3 AND nc.`club_id` = cc_club_id ORDER BY nc.`id` ASC);
				     IF value_is_exist = 0 THEN
					 INSERT INTO `fg_notification_contacts` (`notification_id`, `club_id`, `contact_id`, `period`,`is_active` )
                                         VALUES (3, cc_club_id, cc_contact_id, cc_change_interval, 1);
				     END IF;	
                                END IF;		
			END LOOP loop_contact;	
		CLOSE contact_cursor;
	COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `tempInsertSfguardUser` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `tempInsertSfguardUser`()
BEGIN
	DECLARE cc_contact_id, cc_club_id INTEGER DEFAULT 0; 
	DECLARE date_now DATETIME;	
	DECLARE cc_email, value_rand, value_salt, value_password TEXT DEFAULT "";
	DECLARE value_is_exist, record_not_found INTEGER DEFAULT 0; 
	
	DECLARE contact_cursor CURSOR FOR SELECT ca.`contact_id`, ca.`value`, c.`club_id` FROM fg_cm_attribute_value_text AS ca LEFT JOIN fg_cm_contact AS c ON c.id= ca.contact_id LEFT JOIN sf_guard_user AS su ON su.contact_id = c.id  WHERE  c.is_deleted = 0 AND c.is_draft = 0 AND c.is_permanent_delete= 0  AND ca.attribute_id =3 AND ca.value!='' AND su.contact_id is null;	
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;
	SET	date_now = NOW();
	START TRANSACTION;
		CREATE TABLE IF NOT EXISTS `temp_contact_sf_guard_user` (`date` datetime, `contact_id` int(11),`email` VARCHAR(250), `club_id` int(11));
		OPEN contact_cursor;
			loop_contact: LOOP
				FETCH contact_cursor INTO cc_contact_id, cc_email, cc_club_id;
				IF record_not_found THEN
					SET record_not_found = 0;
					LEAVE loop_contact;
				END IF;
				SET value_is_exist = (SELECT sgu.`id` FROM `sf_guard_user` AS sgu INNER JOIN `fg_cm_contact` AS fcc ON sgu.`contact_id` = fcc.`id` 
								WHERE sgu.`username` = cc_email AND fcc.`club_id` = cc_club_id  AND fcc.is_deleted = 0 AND fcc.is_draft = 0 AND fcc.`is_permanent_delete` = 0 ORDER BY sgu.`id` ASC LIMIT 1);
				IF value_is_exist IS NULL OR  value_is_exist = '' THEN
					SET value_rand = (SELECT SUBSTRING(MD5(RAND()) FROM 1 FOR 6));
					SET value_salt = (SELECT MD5(value_rand));
					SET value_password = (SELECT SHA1(value_salt));

					INSERT INTO `sf_guard_user` (`first_name`, `last_name`, `username`, `email_address`, `salt`, `password`, `last_login`, `created_at`, 
					`updated_at`, `contact_id`) VALUES ('', '', cc_email, cc_email, value_salt, value_password, NULL, date_now, date_now, cc_contact_id);
					INSERT INTO `temp_contact_sf_guard_user` (`date`, `contact_id`, `email`, `club_id`) VALUES (date_now, cc_contact_id, cc_email, cc_club_id);
				END IF;			
				
			END LOOP loop_contact;	
		CLOSE contact_cursor;
	COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `test2` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `test2`()
begin
select ‘Hello World’;
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `testarchiveContactsV4` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`fairgate`@`%` PROCEDURE `testarchiveContactsV4`(IN tablename TEXT,IN currentuser INT,IN clubid INT,IN system_att_first_name VARCHAR(50),IN system_att_last_name VARCHAR(50),IN system_att_company_name VARCHAR(50),IN system_att_dob  VARCHAR(50),IN team_terminology VARCHAR(50),IN date_today DATETIME,IN str_todate DATETIME,IN simple_date DATETIME, IN present_time INT,IN leaving_date_in VARCHAR(50),club_heirarchy VARCHAR(50),currentClubType VARCHAR(50),primaryEmailSubs VARCHAR(255),salutaionSubs VARCHAR(255),genderSubs VARCHAR(255),userDefined_leavingDate VARCHAR(50))
BEGIN
    
    DECLARE loop_iteration_var,count_userid,count_user,user_contact_id,count_security,count_security1,role_log_id,count_con,contactid1,contactid2,contactid3 INTEGER;
    DECLARE gpcount,user_id_new,contact_cursor_is_member,contact_ids_cursor_contact_id,is_postal_address_val,comp_def_contact_new INTEGER DEFAULT "";
    DECLARE contact_cursor_contact_id,is_company1,is_company2,is_company3,is_company4,contact_id1,club_id1,contact_id_user,funid,user_contact_idy,count_securityn INTEGER;
    DECLARE cursor_linked_contact_id,group_id_new,role_id_new,is_executive_board_val,rcid,team_roster_category_id,contactid4,contactidn, is_companyn,contact_cursor_is_draft, contact_cursor_is_newsletter_subscriber,outReturnCode  INTEGER;
    DECLARE category_title_new,value_before_new,group_type_new,group_type1 TEXT;
    DECLARE sf_guard_user_var,usergroup_name,group_name1,group_name,group_name2,group_name3,group_title_new,role_title, succ_mess, sql_err TEXT DEFAULT "";
    DECLARE role_type,function_title,comp_def_contact_fun_new TEXT DEFAULT "";
    DECLARE group_name_var,contactname,contactname1,contactname2,default_contactname,company_name1, fst_nme,lst_nme,fst_nme1,lst_nme1,fst_nme2,lst_nme2,fst_nme3,lst_nme3 VARCHAR(50);
    DECLARE first_name1,last_name1,def_contact_name,company_name,first_name,last_name,company_name2,first_name2,last_name2, company_namen,contactnamen,lst_nmen,fst_nmen,value_after_change,value_before_active VARCHAR(50);
    DECLARE first_namen VARCHAR(50) DEFAULT NULL;
    DECLARE last_namen VARCHAR(50) DEFAULT NULL;
    DECLARE record_not_found INTEGER DEFAULT 0;
    DECLARE loop2query2 TEXT;DECLARE exec_qry,exec_qry1 TEXT;
    DECLARE insertqry, logstr1,logstr2,logstr3,logstr4,logstr5,logstr6,logstr7,logstr8,insertSubscriberLog TEXT;
    DECLARE pre_query, exec_sel_qry, dynamicSQL,insertEmailLog,insertFirstnameLog,insertLastnameLog,insertCompanyLog,insertGenderLog,insertSalutationLog TEXT;
    DECLARE mastertablename,linked_club_type,catagory_contact_assign VARCHAR(50);
    DECLARE linked_club_id,linked_contact_id_cursor INTEGER;
    DECLARE cat_id_new,cat_club,is_fed_cat,is_executive_board,last_inserted_role_log_id,household_contact_id,household_linked_contact_id,household_club_id,household_linked_club_id INTEGER;
    DECLARE archive_contact_name,cat_type,household_relation_name,household_linked_relation_name,currentClubtable VARCHAR(255);
    DECLARE other_contact_id,other_linkedcontact_id,other_relation_id,other_club_id,group_club_id,company_def_club_id,manual_role_type_count INTEGER;
    DECLARE other_relation, other_name, other_connection_type, mainContactName, mastertablenameMembership, heirarchy_club_type VARCHAR(255);
	DECLARE dummy VARCHAR(255) DEFAULT "";
    DECLARE contact_cursor_membership_cat_id, heirarchy_club_id, count, contact_cursor_is_fed_category,contact_cursor_is_former_fed_member INTEGER;
    DECLARE contactidscursor CURSOR FOR 
    SELECT `contact_id` FROM `archivecontactsto` WHERE `club_id`= clubid AND `author`=currentuser AND `archived_date`=date_today;
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
            ROLLBACK;
    END;
    START TRANSACTION;
    SET @insertqry = "INSERT INTO `fg_cm_change_log` (`contact_id`,`club_id`, `date`, `kind`, `field`,`value_before`, `value_after`,`changed_by`, `confirmed_by` ) VALUES";

    BLOCK1: BEGIN
        OPEN contactidscursor;
            contact_ids_one: LOOP
                FETCH contactidscursor INTO contact_ids_cursor_contact_id;
                IF record_not_found THEN
                        SET record_not_found = 0;
                        LEAVE contact_ids_one;
                END IF;
			   SELECT contactName(contact_ids_cursor_contact_id) INTO mainContactName;
                SELECT `is_company` INTO is_companyn FROM `fg_cm_contact` WHERE `id` = contact_ids_cursor_contact_id;
               /* BLOCK2: BEGIN
                    DECLARE contactcursor CURSOR FOR
                    SELECT c.`is_member`, c.`id`, c.`is_draft`, c.`is_newsletter_subscriber`,c.`membership_cat_id`,c.`is_former_fed_member`, m.`is_fed_category` FROM `fg_cm_contact` AS c LEFT JOIN `fg_cm_membership` AS m ON m.`id`= c.`membership_cat_id` WHERE c.`id`= contact_ids_cursor_contact_id;
                    OPEN contactcursor;
                        loop_contact: LOOP
                            FETCH contactcursor INTO contact_cursor_is_member, contact_cursor_contact_id, contact_cursor_is_draft, contact_cursor_is_newsletter_subscriber, contact_cursor_membership_cat_id,contact_cursor_is_former_fed_member, contact_cursor_is_fed_category ;
                            IF record_not_found THEN
                                SET record_not_found = 0;
                                LEAVE loop_contact;
                            END IF;

                            IF(contact_cursor_contact_id = contact_ids_cursor_contact_id)THEN
                                IF(contact_cursor_is_member = 1)THEN

                                    SET logstr1 = CONCAT("(",contact_cursor_contact_id,",NULL,","'",leaving_date_in,"'",",","'",'contact type',"'",",","'",'',"'",",","'",'Member',"'",",","'",'-',"'",",",currentuser,",",currentuser,")");
                                    SET @insertqry = CONCAT(@insertqry,logstr1,',');									  
                                END IF;
                                IF(contact_cursor_is_draft =1 AND contact_cursor_is_newsletter_subscriber =1)THEN
                                    SELECT `value_after` INTO value_after_change FROM `fg_cm_change_log`  WHERE `contact_id` = contact_cursor_contact_id AND `kind` = 'contact status' ORDER BY `id` DESC LIMIT 1;
                                    IF(value_after_change!='')THEN
                                        SET value_before_active =  value_after_change;
                                    ELSE
                                        SET value_before_active =  'Subscriber (Contact administration)';
                                    END IF;
                                ELSE
                                    SET value_before_active =   'Active'; 
                                END IF;


                                SET logstr2 = CONCAT("(",contact_cursor_contact_id,",NULL,","'",date_today,"'",",","'",'contact status',"'",",","'",'-',"'",",","'",value_before_active,"'",",","'",'Archived',"'",",",currentuser,",",currentuser,")");								
                                SET @insertqry = CONCAT(@insertqry,logstr2,',');									
                            END IF;
						 -- Updating fg_cm_contact 
                            IF(contact_cursor_membership_cat_id IS NOT NULL || contact_cursor_membership_cat_id !='') THEN
							IF(contact_cursor_is_fed_category = 1) THEN
								SET @logstr8 = CONCAT("UPDATE `fg_cm_contact` SET  `is_deleted`= '1', `is_newsletter_subscriber` = '0', `is_member` = '0', `archived_on`='",leaving_date_in,"', `leaving_date`='",userDefined_leavingDate,"',`last_updated`='",leaving_date_in,"',`is_former_fed_member`=1, `resigned_on`='",leaving_date_in,"', `membership_cat_id` = ", "NULL"," WHERE `id`= ",contact_ids_cursor_contact_id);
							ELSE 
								SET @logstr8 = CONCAT("UPDATE `fg_cm_contact` SET  `is_deleted`= '1', `is_newsletter_subscriber` = '0', `is_member` = '0', `archived_on`='",leaving_date_in,"', `leaving_date`='",userDefined_leavingDate,"',`last_updated`='",leaving_date_in,"', `membership_cat_id` = ", "NULL"," WHERE `id`= ",contact_ids_cursor_contact_id);
							END IF;
                            ELSE 
                                SET @logstr8 = CONCAT("UPDATE `fg_cm_contact` SET  `is_deleted`= '1', `is_newsletter_subscriber` = '0', `is_member` = '0' ,`archived_on`='",leaving_date_in,"',`last_updated`='",leaving_date_in,"', `membership_cat_id` = ","NULL"," WHERE `id`= ",contact_ids_cursor_contact_id);
                            END IF;

						SET @primaryEmailQry=CONCAT("SELECT `",primaryEmailSubs,"` INTO @primaryEmail FROM `master_system` WHERE `club_id`=",clubid," AND `contact_id`=",contact_cursor_contact_id); 
						PREPARE exec_sel_qry FROM @primaryEmailQry;
						EXECUTE exec_sel_qry ;	
						DEALLOCATE PREPARE exec_sel_qry;

						IF(currentClubType='federation' || currentClubType='sub_federation')THEN

							SET currentClubtable=CONCAT('master_federation_',clubid);
							IF((contact_cursor_is_fed_category != 1 OR contact_cursor_is_fed_category IS NULL) AND contact_cursor_is_former_fed_member !=1) THEN

								SET @dynamicMasterSelectClubSQL=CONCAT('SELECT `is_subscriber` INTO @isSubscriber FROM `',currentClubtable,'` WHERE `contact_id`=',contact_ids_cursor_contact_id);
								PREPARE exec_sel_qry FROM @dynamicMasterSelectClubSQL;
								EXECUTE exec_sel_qry ;	
								DEALLOCATE PREPARE exec_sel_qry;

								IF(@isSubscriber=1 AND @primaryEmail!='' AND @primaryEmail IS NOT NULL) THEN

									SET @updateOwnTable = CONCAT("UPDATE `",currentClubtable,"` SET `is_subscriber`=0 WHERE `contact_id`=",contact_ids_cursor_contact_id);
									PREPARE exec_up_qry FROM @updateOwnTable;
									EXECUTE exec_up_qry ;	
									DEALLOCATE PREPARE exec_up_qry;

									SET @selectUserDetails= CONCAT("INSERT INTO `fg_cn_subscriber` (`club_id`,`email`,`first_name`,`last_name`,`company`,`gender`,`salutation`,`created_at`,`created_by`) SELECT ",clubid,",'",@primaryEmail,"',`",system_att_first_name,"`,`",system_att_last_name,"`,`",system_att_company_name,"`,`",genderSubs,"`,`",salutaionSubs,"`,'",leaving_date_in,"',",currentuser," FROM `master_system` WHERE `club_id`=",clubid," AND `contact_id`=",contact_cursor_contact_id); 
									
									PREPARE exec_ins_qry FROM @selectUserDetails;
									EXECUTE exec_ins_qry ;	
									DEALLOCATE PREPARE exec_ins_qry;

									SELECT LAST_INSERT_ID() INTO @subscriberId;
									SET @systemValues=CONCAT("SELECT `",primaryEmailSubs,"`,`",system_att_first_name,"`,`",system_att_last_name,"`,`",system_att_company_name,"`,`",genderSubs,"`,`",salutaionSubs,"` INTO @primaryEmailSys,@firstnameSys,@lastnameSys,@companySys,@genderSys,@salutaionSys FROM `master_system` WHERE `club_id`=",clubid," AND `contact_id`=",contact_cursor_contact_id);
									
									PREPARE exec_sel_qry FROM @systemValues;
									EXECUTE exec_sel_qry ;	
									DEALLOCATE PREPARE exec_sel_qry;
									SET @insertSubscriberLog = "INSERT INTO `fg_cn_subscriber_log` (`subscriber_id`,`club_id`,`date`,`kind`,`field`,`value_before`,`value_after`,`changed_by`) VALUES";
									IF(@primaryEmailSys IS NOT NULL AND @primaryEmailSys !='' )THEN
										SET @insertSubscriberLog=CONCAT(@insertSubscriberLog," (",@subscriberId,",",clubid,",'",leaving_date_in,"','data','email','','",@primaryEmailSys,"',",currentuser,"),");
									END IF;
									IF(@firstnameSys IS NOT NULL AND @firstnameSys !='' )THEN
										SET @insertSubscriberLog=CONCAT(@insertSubscriberLog," (",@subscriberId,",",clubid,",'",leaving_date_in,"','data','first_name','','",@firstnameSys,"',",currentuser,"),");
									END IF;
									IF(@lastnameSys IS NOT NULL AND @lastnameSys !='' )THEN
										SET @insertSubscriberLog=CONCAT(@insertSubscriberLog," (",@subscriberId,",",clubid,",'",leaving_date_in,"','data','last_name','','",@lastnameSys,"',",currentuser,"),");
									END IF;
									IF(@companySys IS NOT NULL AND @companySys !='' )THEN
										SET @insertSubscriberLog=CONCAT(@insertSubscriberLog," (",@subscriberId,",",clubid,",'",leaving_date_in,"','data','company','','",@companySys,"',",currentuser,"),");
									END IF;
									IF(@genderSys IS NOT NULL AND @genderSys !='' )THEN
										SET @insertSubscriberLog=CONCAT(@insertSubscriberLog," (",@subscriberId,",",clubid,",'",leaving_date_in,"','data','gender','','",@genderSys,"',",currentuser,"),");
									END IF;
									IF(@salutaionSys IS NOT NULL AND @salutaionSys !='' )THEN
										SET @insertSubscriberLog=CONCAT(@insertSubscriberLog," (",@subscriberId,",",clubid,",'",leaving_date_in,"','data','salutation','','",@salutaionSys,"',",currentuser,")");
									END IF;
									
									SET @insertSubscriberLog = CONCAT(@insertSubscriberLog,'##');
									SET @insertSubscriberLog  = REPLACE(@insertSubscriberLog,',##','');
									PREPARE exec_ins_qry FROM @insertSubscriberLog;
									EXECUTE exec_ins_qry ;	
									DEALLOCATE PREPARE exec_ins_qry;
									
								END IF;

							END IF;

							
						ELSE
							SET currentClubtable=CONCAT('master_club_',clubid);
							SET @dynamicMasterSelectClubSQL=CONCAT('SELECT `is_subscriber` INTO @isSubscriber FROM `',currentClubtable,'` WHERE `contact_id`=',contact_ids_cursor_contact_id);
							PREPARE exec_sel_qry FROM @dynamicMasterSelectClubSQL;
							EXECUTE exec_sel_qry ;	
							DEALLOCATE PREPARE exec_sel_qry;

							IF(@isSubscriber=1 AND @primaryEmail!='' AND @primaryEmail IS NOT NULL) THEN
								SET @updateOwnTable = CONCAT("UPDATE `",currentClubtable,"` SET `is_subscriber`=0 WHERE `contact_id`=",contact_ids_cursor_contact_id);
								PREPARE exec_up_qry FROM @updateOwnTable;
								EXECUTE exec_up_qry ;	
								DEALLOCATE PREPARE exec_up_qry;

								SET @selectUserDetails= CONCAT("INSERT INTO `fg_cn_subscriber` (`club_id`,`email`,`first_name`,`last_name`,`company`,`gender`,`salutation`,`created_at`,`created_by`) SELECT ",clubid,",'",@primaryEmail,"',`",system_att_first_name,"`,`",system_att_last_name,"`,`",system_att_company_name,"`,`",genderSubs,"`,`",salutaionSubs,"`,'",leaving_date_in,"',",currentuser," FROM `master_system` WHERE `club_id`=",clubid," AND `contact_id`=",contact_cursor_contact_id); 
								
								PREPARE exec_ins_qry FROM @selectUserDetails;
								EXECUTE exec_ins_qry ;	
								DEALLOCATE PREPARE exec_ins_qry;

								SELECT LAST_INSERT_ID() INTO @subscriberId;
								SET @systemValues=CONCAT("SELECT `",primaryEmailSubs,"`,`",system_att_first_name,"`,`",system_att_last_name,"`,`",system_att_company_name,"`,`",genderSubs,"`,`",salutaionSubs,"` INTO @primaryEmailSys,@firstnameSys,@lastnameSys,@companySys,@genderSys,@salutaionSys FROM `master_system` WHERE `club_id`=",clubid," AND `contact_id`=",contact_cursor_contact_id);
								
								PREPARE exec_sel_qry FROM @systemValues;
								EXECUTE exec_sel_qry ;	
								DEALLOCATE PREPARE exec_sel_qry;

								SET @insertSubscriberLog = "INSERT INTO `fg_cn_subscriber_log` (`subscriber_id`,`club_id`,`date`,`kind`,`field`,`value_before`,`value_after`,`changed_by`) VALUES";
								IF(@primaryEmailSys IS NOT NULL AND @primaryEmailSys !='' )THEN
									SET @insertSubscriberLog=CONCAT(@insertSubscriberLog," (",@subscriberId,",",clubid,",'",leaving_date_in,"','data','email','','",@primaryEmailSys,"',",currentuser,"),");
								END IF;
								IF(@firstnameSys IS NOT NULL AND @firstnameSys !='' )THEN
									SET @insertSubscriberLog=CONCAT(@insertSubscriberLog," (",@subscriberId,",",clubid,",'",leaving_date_in,"','data','first_name','','",@firstnameSys,"',",currentuser,"),");
								END IF;
								IF(@lastnameSys IS NOT NULL AND @lastnameSys !='' )THEN
									SET @insertSubscriberLog=CONCAT(@insertSubscriberLog," (",@subscriberId,",",clubid,",'",leaving_date_in,"','data','last_name','','",@lastnameSys,"',",currentuser,"),");
								END IF;
								IF(@companySys IS NOT NULL AND @companySys !='' )THEN
									SET @insertSubscriberLog=CONCAT(@insertSubscriberLog," (",@subscriberId,",",clubid,",'",leaving_date_in,"','data','company','','",@companySys,"',",currentuser,"),");
								END IF;
								IF(@genderSys IS NOT NULL AND @genderSys !='' )THEN
									SET @insertSubscriberLog=CONCAT(@insertSubscriberLog," (",@subscriberId,",",clubid,",'",leaving_date_in,"','data','gender','','",@genderSys,"',",currentuser,"),");
								END IF;
								IF(@salutaionSys IS NOT NULL AND @salutaionSys !='' )THEN
									SET @insertSubscriberLog=CONCAT(@insertSubscriberLog," (",@subscriberId,",",clubid,",'",leaving_date_in,"','data','salutation','','",@salutaionSys,"',",currentuser,")");
								END IF;

								SET @insertSubscriberLog = CONCAT(@insertSubscriberLog,'##');
								SET @insertSubscriberLog  = REPLACE(@insertSubscriberLog,',##','');
								PREPARE exec_ins_qry FROM @insertSubscriberLog;
								EXECUTE exec_ins_qry ;	
								DEALLOCATE PREPARE exec_ins_qry;

							END IF;
						END IF;

						 -- This block is used to update fg_cm_membership_history and fg_cm_membership log
						 -- if the contact is a member
						 SET mastertablenameMembership='';
						 BLOCK9: BEGIN 
							DECLARE membershipcat_cursor CURSOR FOR 
							SELECT fc.`id` , fc.`club_type`
							FROM `fg_club` AS fc 
							WHERE FIND_IN_SET(fc.`id`,club_heirarchy);
							IF(contact_cursor_membership_cat_id IS NOT NULL ||contact_cursor_membership_cat_id != '')THEN 
								OPEN membershipcat_cursor;
									loopmembershipcat: LOOP
										FETCH membershipcat_cursor INTO heirarchy_club_id,heirarchy_club_type;
										IF record_not_found THEN
											SET record_not_found = 0;
											LEAVE loopmembershipcat;
										END IF;
										IF(heirarchy_club_type='federation' || heirarchy_club_type='sub_federation') THEN
											SET mastertablenameMembership=CONCAT('master_federation_',heirarchy_club_id);
										END IF;

										SET @dynamicMasterMembershipSQL=CONCAT('UPDATE `',mastertablenameMembership,'` SET `is_fed_member`=0,`is_seperate_invoice`=0',' WHERE `contact_id`=',contact_ids_cursor_contact_id);
										PREPARE exec_update_qry FROM @dynamicMasterMembershipSQL;
										EXECUTE exec_update_qry ;	
										DEALLOCATE PREPARE exec_update_qry;
				
									END LOOP loopmembershipcat;
								CLOSE membershipcat_cursor;

								SET @dynamicMastermemberClubSQL=CONCAT('UPDATE `',currentClubtable,'` SET `is_seperate_invoice`=0',' WHERE `contact_id`=',contact_ids_cursor_contact_id);
								PREPARE exec_update_qry FROM @dynamicMastermemberClubSQL;
								EXECUTE exec_update_qry ;	
								DEALLOCATE PREPARE exec_update_qry;

								INSERT INTO `fg_cm_membership_log` (`club_id`,`membership_id`,`date`,`kind`,`field`,`value_before`,`value_after`,`changed_by`) VALUES (clubid,contact_cursor_membership_cat_id,date_today,'assigned contacts','',mainContactName,'',currentuser);
								UPDATE `fg_cm_membership_history` SET `leaving_date`=userDefined_leavingDate WHERE `contact_id`=contact_cursor_contact_id AND `membership_id`=contact_cursor_membership_cat_id ORDER BY `id` DESC LIMIT 1;
							ELSE
								SET @dynamicMasterClubSQL=CONCAT('UPDATE `',currentClubtable,'` SET `is_seperate_invoice`=0',' WHERE `contact_id`=',contact_ids_cursor_contact_id);
								PREPARE exec_update_qry FROM @dynamicMasterClubSQL;
								EXECUTE exec_update_qry ;	
								DEALLOCATE PREPARE exec_update_qry;
							END IF;
						 END BLOCK9; 
						 -- Appending log entry query
                            PREPARE exec_qry1 FROM @logstr8;
                            EXECUTE exec_qry1;
                            DEALLOCATE PREPARE exec_qry1; 

                        END LOOP loop_contact;
                    CLOSE contactcursor;
                END BLOCK2; */
			   
			   SELECT contactName(contact_ids_cursor_contact_id) INTO contactnamen;

			   -- This section is used to update the household_head field in the master tables 
			   -- if the contact have a household connection
                SET mastertablename = '';
               /* BLOCK3: BEGIN  
                    DECLARE masterclubcursor CURSOR FOR 
                    SELECT distinct fgcmlc.`club_id` , fc.`club_type`,fgcmlc.`linked_contact_id`
                    FROM `fg_cm_linkedcontact` AS fgcmlc 
                    LEFT JOIN `fg_club` as fc ON fgcmlc.`club_id`= fc.`id`
                    WHERE fgcmlc.`contact_id` = contact_ids_cursor_contact_id AND fgcmlc.`type` = 'household';
                    OPEN masterclubcursor;
                        loopmasterclub: LOOP
                            FETCH masterclubcursor INTO linked_club_id,linked_club_type,linked_contact_id_cursor;
                            IF record_not_found THEN
                                SET record_not_found = 0;
                                LEAVE loopmasterclub;
                            END IF;
                            IF(linked_club_type='federation' || linked_club_type='sub_federation') THEN
                                SET mastertablename=CONCAT('master_federation_',linked_club_id);
                            ELSE
                                SET mastertablename=CONCAT('master_club_',linked_club_id);
                            END IF;

                            SET @dynamiclinkedSQL=CONCAT('SELECT `contact_id`,`is_household_head`',' INTO @master_table_contactId, @master_table_ishousehold FROM `',mastertablename,'` WHERE `contact_id` = ',contact_ids_cursor_contact_id);
                            PREPARE exec_sel_qry FROM @dynamiclinkedSQL;
                            EXECUTE exec_sel_qry ;	
                            DEALLOCATE PREPARE exec_sel_qry;

                            IF(@master_table_ishousehold = 1)THEN
                                SET @dynamicMasterupdateSQL=CONCAT('UPDATE `',mastertablename,'` SET `is_household_head`= ','0',' WHERE `contact_id`=',contact_ids_cursor_contact_id);
                                PREPARE exec_sel_qry FROM @dynamicMasterupdateSQL;
                                EXECUTE exec_sel_qry ;	
                                DEALLOCATE PREPARE exec_sel_qry;

							 SET SQL_SAFE_UPDATES = 0;

                                SET @dynamicMasterLinkedContactSQL=CONCAT('UPDATE `',mastertablename,'` AS mt LEFT JOIN `fg_cm_linkedcontact` AS fcl ON mt.`contact_id`=fcl.`linked_contact_id` AND fcl.`club_id`=',linked_club_id,' AND fcl.`contact_id`=',contact_ids_cursor_contact_id,' SET mt.`is_household_head`=0 ',' WHERE mt.`is_seperate_invoice`= 1 AND fcl.`contact_id`=',contact_ids_cursor_contact_id,' AND mt.`contact_id`=fcl.`linked_contact_id` AND fcl.`club_id`=',linked_club_id);
                                PREPARE exec_up_qry FROM @dynamicMasterLinkedContactSQL;
                                EXECUTE exec_up_qry ;	
                                DEALLOCATE PREPARE exec_up_qry;
								
                                SET @dynamicCountContact=CONCAT('SELECT COUNT(`linked_contact_id`)',' INTO @count_linked_contact_id FROM `fg_cm_linkedcontact` WHERE `contact_id` = ',contact_ids_cursor_contact_id,' AND `club_id`=',linked_club_id,' AND `type`="household"');
                                PREPARE exec_up_qry FROM @dynamicCountContact;
                                EXECUTE exec_up_qry ;	
                                DEALLOCATE PREPARE exec_up_qry;

                                IF(@count_linked_contact_id>1) THEN
                                    SET @dynamicMasterSetMainContactSQL=CONCAT('UPDATE `',mastertablename,'` AS mt SET `is_household_head`= ','1',' WHERE mt.`contact_id`=',linked_contact_id_cursor);
                                    PREPARE exec_up_qry FROM @dynamicMasterSetMainContactSQL;
                                    EXECUTE exec_up_qry ;	
                                    DEALLOCATE PREPARE exec_up_qry; 
                                END IF;
							 SET SQL_SAFE_UPDATES = 1;
                            END IF;

                        END LOOP loopmasterclub;
                    CLOSE masterclubcursor;
            	END BLOCK3; */
			   -- This section is used to make changes in the fg_cm_club_log and delete entry of the contact in the sf_guard_user table 
			   -- if the user have any user rights
                BLOCK4: BEGIN 
                    DECLARE sfguard_userrights_cursor CURSOR FOR
                    SELECT  gg.`id`, gg.`type`, r.`id`
                        FROM sf_guard_user AS gu
                        JOIN sf_guard_user_group AS gug ON gug.`user_id` = gu.`id`
                        LEFT JOIN sf_guard_group AS gg ON gg.`id` = gug.`group_id`
                        LEFT JOIN fg_security_admin AS fsa ON ( gug.`group_id` = fsa.`group_id` AND gu.`contact_id` = fsa.`contact_id`)
                        LEFT JOIN fg_rm_role AS r ON fsa.`role_id` = r.`id`
                        WHERE gu.`contact_id` =contact_ids_cursor_contact_id;
                    OPEN sfguard_userrights_cursor;
                        loop_sfguard_userrights: LOOP 
                            FETCH sfguard_userrights_cursor INTO group_id_new,group_type_new,role_id_new;    
                            IF record_not_found THEN
                                SET record_not_found = 0;
                                LEAVE loop_sfguard_userrights;
                            END IF;

                            BLOCK5: BEGIN 
                                DECLARE sfguard_user_id_cursor CURSOR FOR    
                                    SELECT `id` FROM `sf_guard_user` WHERE `contact_id` = contact_ids_cursor_contact_id;
                                OPEN sfguard_user_id_cursor;
                                    loop_sfguard_user_id: LOOP
                                        FETCH sfguard_user_id_cursor INTO user_id_new; 
                                        IF record_not_found THEN
                                            SET record_not_found = 0;
                                            LEAVE loop_sfguard_user_id;
                                        END IF;

                                        SELECT COUNT(u.`contact_id`), u.`contact_id`,u.`club_id`, gg.`name` INTO count_user, contact_id_user,group_club_id, group_name2 
                                        FROM `sf_guard_user_group` AS ug
                                        LEFT JOIN `sf_guard_user` AS u ON u.`id` = ug.`user_id`
                                        LEFT JOIN `sf_guard_group` AS gg ON ug.`group_id` = gg.`id`
                                        WHERE ug.`user_id` = user_id_new AND `group_id` =group_id_new;
									SET dummy=CONCAT(dummy,group_name2,",");
                                        IF(count_user>0)THEN
                                            SET logstr4 = CONCAT("(",contact_id_user,",",group_club_id,",'",date_today,"'",",","'",'user rights',"'",",","'",'-',"'",",","'",group_name2,"'",",","'",'-',"'",",",currentuser,",",currentuser,")");
                                            SET @insertqry = CONCAT(@insertqry,logstr4,',');										
                                        END IF;
                                        SELECT COUNT(`user_id`) INTO count_userid FROM `sf_guard_user_group` WHERE `group_id`= group_id_new AND `user_id`= user_id_new;

                                        IF(count_userid >0)THEN
                                            SELECT contact_id INTO user_contact_id FROM `sf_guard_user` WHERE `id`= user_id_new;
                            
                                            SELECT `name` INTO group_name3 FROM `sf_guard_group` WHERE `id`= group_id_new;
                                            INSERT INTO `fg_club_log` (`club_id`, `date`, `kind`, `field`,`value_before`, `value_after`,`changed_by` ) VALUES (group_club_id, str_todate, 'user rights', group_name3, contactName(user_contact_id),'-',currentuser);
                                        END IF; 
                                    END LOOP loop_sfguard_user_id;
                                CLOSE sfguard_user_id_cursor;                                
                            END BLOCK5; 
                       END LOOP loop_sfguard_userrights;
                    CLOSE sfguard_userrights_cursor;
SELECT  dummy;
                    /*DELETE FROM `sf_guard_user` WHERE `contact_id` = contact_ids_cursor_contact_id;*/
                END BLOCK4; 
			   -- Updating fg_cm_role_log,fg_cm_function_log,fg_cm_log_assignment and delete entry of the contact in the fg_rm_role_contact table 
			   -- if the user have any assignments
               /* BLOCK6: BEGIN
                    DECLARE fgrmrolecontact_cursor CURSOR FOR
                    SELECT rc.`id`, rcat.`title`,rcat.`id`, r.`id`, r.`type`, r.`title`,rf.`id`, rf.`title`,rcat.`club_id`,rcat.`is_fed_category`,r.`is_executive_board`,rcat.`contact_assign` FROM `fg_rm_role_contact` AS rc
                        LEFT JOIN fg_rm_category_role_function AS crf ON rc.`fg_rm_crf_id` = crf.`id`
                        INNER JOIN fg_rm_category AS rcat ON crf.`category_id` = rcat.`id`
                        INNER JOIN fg_rm_role AS r ON crf.`role_id` = r.`id`
                        LEFT JOIN fg_rm_function AS rf ON crf.`function_id` = rf.`id`
                        WHERE rc.`contact_id` = contact_ids_cursor_contact_id;
                    OPEN fgrmrolecontact_cursor;
                        loop_fgrmrolecontact: LOOP 
                            FETCH fgrmrolecontact_cursor INTO rcid, category_title_new, cat_id_new, role_id_new, role_type, role_title, funid, function_title,cat_club,is_fed_cat,is_executive_board,catagory_contact_assign;    
                            IF record_not_found THEN
                                SET record_not_found = 0;
                                LEAVE loop_fgrmrolecontact;
                            END IF;
                            IF(function_title != '')THEN
                                SET value_before_new = CONCAT(role_title," (",function_title,")");
                            ELSE
                                SET value_before_new = role_title ;
                            END IF;
                            IF(category_title_new = 'Team')THEN
                                SET category_title_new = team_terminology;
                            END IF;
						 IF(is_fed_cat=1)THEN
							SET cat_type='fed';
						 ELSE 
							SET cat_type='club';
						 END IF;
						 
						 INSERT INTO `fg_cm_log_assignment` (`contact_id`, `category_club_id`, `role_type`,`category_id`, `role_id`, `function_id`,`date`, `category_title`, `value_before`, `value_after`,`changed_by` ) VALUES (contact_ids_cursor_contact_id,cat_club,cat_type,cat_id_new,role_id_new,funid,date_today,category_title_new,value_before_new,'',currentuser);
						 INSERT INTO `fg_rm_role_log` (`role_id`, `date`, `kind`,`field`, `value_before`, `value_after`,`changed_by`) VALUES (role_id_new, date_today, 'assigned contacts', value_before_new, mainContactName, '', currentuser);
							 
                            IF(funid != '')THEN
                                INSERT INTO `fg_rm_function_log` (`date`, `role_id`, `kind`,`function_id`,`field`, `value_before`, `value_after`,`changed_by`) VALUES (date_today, role_id_new, 'assigned contacts', funid, function_title, contactnamen, '', currentuser);
                            END IF;
						 
                            DELETE FROM `fg_rm_role_contact` WHERE `id`= rcid;
                            
                        END LOOP loop_fgrmrolecontact;
                    CLOSE fgrmrolecontact_cursor;
                END BLOCK6; 
			   -- Updating fg_cm_log_connection if the user have any connections
			   BLOCK7: BEGIN  
					SET SQL_SAFE_UPDATES = 0;
					INSERT INTO `fg_cm_log_connection` (`contact_id`, `linked_contact_id`, `assigned_club_id`,`date`,`connection_type`, `relation`, `value_before`,`value_after`,`changed_by`) SELECT contact_ids_cursor_contact_id,fgcmlc.`linked_contact_id`,fgcmlc.`club_id`,date_today,'Household contact',fcr.`name`,contactName(fgcmlc.`linked_contact_id`),'',currentuser
					FROM `fg_cm_linkedcontact` AS fgcmlc 
					LEFT JOIN `fg_cm_relation` AS fcr ON fgcmlc.`relation_id`=fcr.`id`
					WHERE fgcmlc.`contact_id` = contact_ids_cursor_contact_id AND fgcmlc.`type` = 'household';
					
					INSERT INTO `fg_cm_log_connection` (`contact_id`, `linked_contact_id`, `assigned_club_id`,`date`,`connection_type`, `relation`, `value_before`,`value_after`,`changed_by`) SELECT fgcmlc.`contact_id`,contact_ids_cursor_contact_id,fgcmlc.`club_id`,date_today,'Household contact',fcr.`name`,contactName(contact_ids_cursor_contact_id),'',currentuser
					FROM `fg_cm_linkedcontact` AS fgcmlc 
					LEFT JOIN `fg_cm_relation` AS fcr ON fgcmlc.`relation_id`=fcr.`id`
					WHERE fgcmlc.`linked_contact_id` = contact_ids_cursor_contact_id AND fgcmlc.`type` = 'household';
					SET SQL_SAFE_UPDATES = 1;
                 END BLOCK7;
				-- Updating fg_cm_log_connection if the user have any connections
				BLOCK8: BEGIN 
					DECLARE other_connection_cursor CURSOR FOR 
					SELECT fgcmlc.`contact_id`,fgcmlc.`linked_contact_id`,fgcmlc.`relation_id`,fgcmlc.`relation`,fcr.`name`,fgcmlc.`type`,fgcmlc.`club_id`
					FROM `fg_cm_linkedcontact` AS fgcmlc 
					LEFT JOIN `fg_cm_relation` AS fcr ON fgcmlc.`relation_id`=fcr.`id`
					WHERE (fgcmlc.`contact_id` = contact_ids_cursor_contact_id OR fgcmlc.`linked_contact_id` = contact_ids_cursor_contact_id) AND (fgcmlc.`type`='otherpersonal' OR fgcmlc.`type`='othercompany');

					OPEN other_connection_cursor;
						loopotherconnection: LOOP
							FETCH other_connection_cursor INTO other_contact_id,other_linkedcontact_id,other_relation_id,other_relation,other_name,other_connection_type,other_club_id;
							IF record_not_found THEN
								SET record_not_found = 0;
								LEAVE loopotherconnection;
							END IF;
							SET SQL_SAFE_UPDATES = 0;
							IF(is_companyn=1) THEN
								CASE 
									WHEN other_connection_type='otherpersonal' THEN
										INSERT INTO `fg_cm_log_connection` (`contact_id`, `linked_contact_id`, `assigned_club_id`,`date`,`connection_type`, `relation`, `value_before`,`value_after`,`changed_by`) VALUES (other_contact_id, other_linkedcontact_id, other_club_id, date_today, 'Single person', other_relation, contactName(other_linkedcontact_id),'', currentuser);

									WHEN other_connection_type='othercompany' THEN
										INSERT INTO `fg_cm_log_connection` (`contact_id`, `linked_contact_id`, `assigned_club_id`,`date`,`connection_type`, `relation`, `value_before`,`value_after`,`changed_by`) VALUES (other_contact_id, other_linkedcontact_id, other_club_id, date_today, 'Company', other_relation, contactName(other_linkedcontact_id),'', currentuser);
								END CASE;
							ELSE
								CASE 
									WHEN other_connection_type='otherpersonal' THEN
										INSERT INTO `fg_cm_log_connection` (`contact_id`, `linked_contact_id`, `assigned_club_id`,`date`,`connection_type`, `relation`, `value_before`,`value_after`,`changed_by`) VALUES (other_contact_id, other_linkedcontact_id, other_club_id, date_today, 'Single person', other_name, contactName(other_linkedcontact_id),'', currentuser);

									WHEN other_connection_type='othercompany' THEN
										INSERT INTO `fg_cm_log_connection` (`contact_id`, `linked_contact_id`, `assigned_club_id`,`date`,`connection_type`, `relation`, `value_before`,`value_after`,`changed_by`) VALUES (other_contact_id, other_linkedcontact_id, other_club_id, date_today, 'Company', other_relation, contactName(other_linkedcontact_id),'', currentuser);
								END CASE;
							END IF;
							SET SQL_SAFE_UPDATES = 1;
						END LOOP loopotherconnection;
					CLOSE other_connection_cursor;
				END BLOCK8; */
                SET SQL_SAFE_UPDATES = 0;
              /*  DELETE FROM `fg_cm_linkedcontact` WHERE `contact_id` = contact_ids_cursor_contact_id OR `linked_contact_id` = contact_ids_cursor_contact_id; 

			   IF(is_companyn=0) THEN
					
					SET @companyContactConnections=CONCAT("INSERT INTO `fg_cm_log_connection` (`contact_id`, `linked_contact_id`, `assigned_club_id`,`date`, `connection_type`, `relation`,`value_before`, `value_after`, `changed_by`) SELECT `id`,",contact_ids_cursor_contact_id,",`club_id`,'",simple_date,"','Main contact',`comp_def_contact_fun`,contactName(fg_cm_contact.`comp_def_contact`),'',",currentuser," FROM fg_cm_contact WHERE `comp_def_contact`=",contact_ids_cursor_contact_id);
					PREPARE exec_ins_qry FROM @companyContactConnections;
					EXECUTE exec_ins_qry ;	
					DEALLOCATE PREPARE exec_ins_qry;

					SET @companyContactConnectionsNew=CONCAT("INSERT INTO `fg_cm_log_connection` (`contact_id`, `linked_contact_id`, `assigned_club_id`,`date`, `connection_type`, `relation`,`value_before`, `value_after`, `changed_by`) SELECT `comp_def_contact`,`id`,`club_id`,'",simple_date,"','Main contact of company',`comp_def_contact_fun`,contactName(fg_cm_contact.`id`),'',",currentuser," FROM fg_cm_contact WHERE `comp_def_contact`=",contact_ids_cursor_contact_id);
					PREPARE exec_ins_qry FROM @companyContactConnectionsNew;
					EXECUTE exec_ins_qry ;	
					DEALLOCATE PREPARE exec_ins_qry;

					UPDATE `fg_cm_contact` SET `comp_def_contact` = NULL, `comp_def_contact_fun` = NULL,`last_updated` = simple_date WHERE `comp_def_contact` = contact_ids_cursor_contact_id;

			   ELSE 

					SELECT `comp_def_contact`,`comp_def_contact_fun`,`club_id` INTO comp_def_contact_new, comp_def_contact_fun_new,company_def_club_id FROM `fg_cm_contact` WHERE `id` = contact_ids_cursor_contact_id;
					IF(comp_def_contact_new IS NOT NULL AND comp_def_contact_new !='' )THEN
					    UPDATE `fg_cm_contact` SET `comp_def_contact` = NULL, `comp_def_contact_fun` = NULL,`last_updated` = simple_date WHERE `id` = contact_ids_cursor_contact_id;
					    SELECT contactName(comp_def_contact_new) INTO def_contact_name;

					    INSERT INTO `fg_cm_log_connection` (`contact_id`, `linked_contact_id`, `assigned_club_id`,`date`, `connection_type`, `relation`,`value_before`, `value_after`, `changed_by`) VALUES (contact_ids_cursor_contact_id, comp_def_contact_new, company_def_club_id, simple_date, 'Main contact',comp_def_contact_fun_new,def_contact_name,'',currentuser);
					    INSERT INTO `fg_cm_log_connection` (`contact_id`, `linked_contact_id`, `assigned_club_id`,`date`, `connection_type`, `relation`,`value_before`, `value_after`, `changed_by`) VALUES (comp_def_contact_new, contact_ids_cursor_contact_id, company_def_club_id, simple_date, 'Main contact of company',comp_def_contact_fun_new,mainContactName,'',currentuser);
					END IF;	
			   END IF; */
			   SET SQL_SAFE_UPDATES = 1;


			/*DELETE FROM `fg_cm_bookmarks` WHERE `contact_id` = contact_ids_cursor_contact_id;
			DELETE FROM `fg_table_settings` WHERE `contact_id` = contact_ids_cursor_contact_id;
			DELETE FROM `fg_club_bookmarks` WHERE `contact_id` = contact_ids_cursor_contact_id;
			DELETE FROM `fg_club_table_settings` WHERE `contact_id` = contact_ids_cursor_contact_id; 
			DELETE FROM `fg_rm_role_manual_contacts` WHERE `contact_id` = contact_ids_cursor_contact_id; 
			DELETE FROM `fg_cn_recepients_mandatory` WHERE `contact_id` = contact_ids_cursor_contact_id; 
			DELETE FROM `fg_cn_recepients_exception` WHERE `contact_id` = contact_ids_cursor_contact_id; */

            END LOOP contact_ids_one;	
            SET @insertqry = CONCAT(@insertqry,'##');
            SET @pre_query  = REPLACE(@insertqry,',##','');
            PREPARE exec_qry FROM @pre_query;
            EXECUTE exec_qry;
            DEALLOCATE PREPARE exec_qry;
        CLOSE contactidscursor;
    END BLOCK1;
    /*INSERT INTO `fg_cache` (`tabletitle`, `club_id`, `updated_at`) VALUES ('common',clubid,present_time); */
COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `testcreateMasterClubAll` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `testcreateMasterClubAll`()
BEGIN
	DECLARE clubId, record_not_found, isFairgate, isFederation, isSubFederation INTEGER DEFAULT 0; 
	DECLARE clubType TEXT DEFAULT "";
	DECLARE clubcursor CURSOR FOR SELECT id, is_fairgate, is_federation, is_sub_federation FROM fg_club WHERE is_deleted <> 1 AND is_fairgate <>1;	
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;

	START TRANSACTION;
		OPEN clubcursor;
			loop_club: LOOP
				FETCH clubcursor INTO clubId, isFairgate, isFederation, isSubFederation;
					IF record_not_found THEN
						SET record_not_found = 0;
						LEAVE loop_club;
					END IF;
					SET clubType = 'club';					
					IF(isFederation = 1) THEN
						SET clubType = 'federation';
					END IF;
					IF(isSubFederation = 1) THEN
						SET clubType = 'sub_federation';
					END IF;			
					call `testMasterClubTable`( clubId, clubType);			
			END LOOP loop_club;	
		CLOSE clubcursor;
	COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `testIM` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `testIM`()
BEGIN
  DECLARE contact_ids,p_club_id TEXT DEFAULT '';
  SET p_club_id = '1424';
  SET contact_ids = CONCAT(contact_ids,',', 99135);
  SET contact_ids = CONCAT(contact_ids,',', 99136);
	SET contact_ids = (SELECT TRIM(BOTH ',' FROM contact_ids));
	SET @loop2query2= CONCAT("CALL insertIntoClubContactTable(",p_club_id,",'",contact_ids,"')");
	SELECT @loop2query2;
  
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `testMasterClubTable` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `testMasterClubTable`( IN clubId INTEGER, IN clubType TEXT)
BEGIN

	START TRANSACTION;
		IF(clubType ='federation' OR clubType ='sub_federation') THEN	
			SET @alterquery = CONCAT('ALTER TABLE `master_federation_',clubId,'` ADD `is_household_head` tinyint(1) default 0 AFTER `contact_id`, ADD is_seperate_invoice tinyint(1) default 0 AFTER `is_household_head`, ADD is_postal_address tinyint(1) default 0 AFTER `is_seperate_invoice`');
		ELSE
			SET @alterquery =CONCAT('ALTER TABLE `master_club_',clubId,'` ADD `is_household_head` tinyint(1) default 0 AFTER `contact_id`, ADD is_seperate_invoice tinyint(1) default 0 AFTER `is_household_head`, ADD is_postal_address tinyint(1) default 0 AFTER `is_seperate_invoice`');	
		END IF;
		PREPARE stmt FROM @alterquery;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
	COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `updateCacheTable` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `updateCacheTable`(IN table_title TEXT, IN clubid INTEGER)
BEGIN	
	DECLARE cache_id INTEGER;	
	SET cache_id = (SELECT id FROM fg_cache WHERE tabletitle = table_title AND club_id = clubid);
	IF cache_id IS NULL THEN
		INSERT INTO fg_cache(tabletitle, club_id, updated_at) VALUES(table_title, clubid, UNIX_TIMESTAMP());
	ELSE
		UPDATE fg_cache SET updated_at = UNIX_TIMESTAMP() WHERE id = cache_id;
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `updateClubClientStateAmount` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `updateClubClientStateAmount`(frontend1ModuleId INT, frontend2ModuleId INT, webhostingModuleId INT)
BEGIN
	
	DECLARE record_not_found, clubId, annualPackageIncome, annualModuleIncome, annualAdFreeIncome, totalAmount INTEGER DEFAULT 0;
	DECLARE fedQry, packageIncomeQry, moduleIncomeQry, adFreeIncomeQry, exec_qry TEXT DEFAULT '';
	DECLARE awe INTEGER DEFAULT 1;
	

	
	DECLARE field_cursor CURSOR FOR SELECT `id` FROM `fg_club` WHERE `is_deleted`=0 AND `is_fairgate`<>1 AND `state`<>'P';

	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;

	SET autocommit = 0;
	
	START TRANSACTION;
	OPEN field_cursor;
	loop_field: LOOP
		FETCH field_cursor INTO clubId;

		IF record_not_found THEN
			SET record_not_found = 0;
			LEAVE loop_field;
		END IF;

		


		SET @awe = 1;

		SELECT Club_id INTO @awe From(SELECT  @clubid AS Club_id,(SELECT  @clubid := parent_club_id FROM fg_club WHERE id = Club_id) AS parent, @level := @level+ 1 AS level FROM (SELECT  @clubid :=clubId, @level:= 0) vars, fg_club h WHERE @clubid <> 0) Parents_History inner join fg_club on fg_club.id = Parents_History.Club_id and fg_club.is_federation = 1 limit 1;

		BLOCK1: BEGIN
			
			SET @packageIncomeQry = CONCAT("SELECT (IF ((((d.cost > 0 && d.cost < c.cost && b.payment_type <> 'ONDEMAND') || (b.payment_type = 'ONDEMAND'))), (d.cost), (c.cost))) INTO @annualPackageIncome
		        FROM fg_mb_club_plan a 
		        LEFT JOIN fg_mb_packages b ON a.packages_id = b.id 
		        LEFT JOIN fg_mb_packages_federation c ON b.id = c.package_id 
		        LEFT JOIN fg_mb_package_individual_price d ON (b.id = d.packages_id AND d.club_id=",clubId,") 
		        WHERE a.club_id = ",clubId," AND a.status = 'ACTIVE' AND 
			c.federation_id IN (IF ((@awe), (@awe), (1))) 
		        GROUP BY a.packages_id 
		        ORDER BY a.signed_on DESC
		        LIMIT 1");

			PREPARE exec_qry FROM @packageIncomeQry;
			EXECUTE exec_qry ;
			DEALLOCATE PREPARE exec_qry;
			SET record_not_found = 0;
			
		END BLOCK1;

		BLOCK2: BEGIN
			
			SET @moduleIncomeQry = CONCAT("SELECT SUM(IF ((b.cost_yearly = ''), (0), (IF(((d.is_cost_yearly=1) && (d.cost_yearly IS NULL || (d.cost_yearly = '') || (d.cost_yearly <= b.cost_yearly))), (IF((d.cost_yearly >= 0), (d.cost_yearly), (0))), (IF((b.cost_yearly >= 0), (b.cost_yearly), (0))))))) 
			INTO @annualModuleIncome
		        FROM fg_mb_module a
		        LEFT JOIN fg_mb_module_federation b ON a.id = b.module_id
		        LEFT JOIN fg_mb_club_modules c ON ((c.club_id = ",clubId," AND c.module_id = a.id))
		        LEFT JOIN fg_mb_module_individual_price d ON ((d.club_id = ",clubId," AND d.module_id = a.id))
		        WHERE (a.is_visible = 1 AND c.club_id = ",clubId,"
			AND b.federation_id IN (IF ((@awe), (@awe), (1))) 
			AND ((DATEDIFF(NOW(), c.signed_on) >= 30) OR (a.id = ",frontend2ModuleId,") OR (a.id = ",webhostingModuleId,") OR ((a.id = ",frontend1ModuleId,") AND ((SELECT a1.id FROM fg_mb_club_modules a1 WHERE a1.club_id=c.club_id AND a1.module_id=",frontend2ModuleId,") IS NOT NULL))) 
		        AND b.is_default != 1)
		        ORDER BY a.sort_order ASC");

			PREPARE exec_qry FROM @moduleIncomeQry;
			EXECUTE exec_qry;
			DEALLOCATE PREPARE exec_qry;
			SET record_not_found = 0;
			
		END BLOCK2;

		BLOCK3: BEGIN
			
			SET @adFreeIncomeQry = CONCAT("SELECT SUM(a.cost) INTO @annualAdFreeIncome FROM fg_mb_club_adfree a LEFT JOIN fg_am_ads_type b ON a.ad_type_id = b.id WHERE (a.club_id = ",clubId," AND a.is_active = '1' AND a.is_selected = '1' AND (a.cost IS NOT NULL AND a.cost != '0'))");

			PREPARE exec_qry FROM @adFreeIncomeQry;
			EXECUTE exec_qry;
			DEALLOCATE PREPARE exec_qry;
			SET record_not_found = 0;
			
		END BLOCK3;

		IF ((@annualPackageIncome = '') || @annualPackageIncome IS NULL) THEN
			SET @annualPackageIncome = '0';
		END IF;
		IF ((@annualModuleIncome = '') || @annualModuleIncome IS NULL) THEN
			SET @annualModuleIncome = '0';
		END IF;
		IF ((@annualAdFreeIncome = '') || @annualAdFreeIncome IS NULL) THEN
			SET @annualAdFreeIncome = '0';
		END IF;

		SET @totalAmount = @annualPackageIncome + @annualModuleIncome + @annualAdFreeIncome;

		UPDATE `fg_club` SET `clientstate_amount` = @totalAmount WHERE `id` = clubId;

		
		

	END LOOP loop_field;
	CLOSE field_cursor;
	COMMIT;

	

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `updateClubClientStateAmount_test` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `updateClubClientStateAmount_test`(frontend1ModuleId INT, frontend2ModuleId INT)
BEGIN
	
	DECLARE record_not_found, clubId, annualPackageIncome, annualModuleIncome, annualAdFreeIncome, totalAmount INTEGER DEFAULT 0;
	DECLARE fedQry, packageIncomeQry, moduleIncomeQry, adFreeIncomeQry, exec_qry TEXT DEFAULT '';

	
	DECLARE field_cursor CURSOR FOR SELECT `id` FROM `fg_club` WHERE `is_deleted`=0 AND `is_fairgate`<>1 AND `state`<>'P';

	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;

	SET autocommit = 0;
	
	
	START TRANSACTION;
	OPEN field_cursor;
	loop_field: LOOP
		FETCH field_cursor INTO clubId;

		IF record_not_found THEN
			SET record_not_found = 0;
			LEAVE loop_field;
		END IF;

		select Club_id INTO @fedQry From(SELECT  @clubid AS Club_id,(SELECT  @clubid := parent_club_id
         FROM fg_club WHERE id = Club_id) AS parent,@level := @level+ 1 AS level FROM (SELECT  @clubid :=clubId, @level:= 0) vars, fg_club h WHERE @clubid <> 0) Parents_History inner join fg_club on fg_club.id = Parents_History.Club_id and fg_club.is_federation = 1 limit 1;
		 
		

		BLOCK1: BEGIN
			
			SET @packageIncomeQry = CONCAT("SELECT (IF ((((d.cost > 0 && d.cost < c.cost && b.payment_type <> 'ONDEMAND') || (b.payment_type = 'ONDEMAND'))), (d.cost), (c.cost))) INTO @annualPackageIncome
		        FROM fg_mb_club_plan a 
		        LEFT JOIN fg_mb_packages b ON a.packages_id = b.id 
		        LEFT JOIN fg_mb_packages_federation c ON b.id = c.package_id 
		        LEFT JOIN fg_mb_package_individual_price d ON (b.id = d.packages_id AND d.club_id=",clubId,") 
		        WHERE a.club_id = ",clubId," AND a.status = 'ACTIVE' AND 
		        c.federation_id IN (IF ((@fedQry), (@fedQry), (1))) 
		        GROUP BY a.packages_id 
		        ORDER BY a.signed_on DESC
		        LIMIT 1");

			PREPARE exec_qry FROM @packageIncomeQry;
			EXECUTE exec_qry ;
			DEALLOCATE PREPARE exec_qry;
			SET record_not_found = 0;
			
		END BLOCK1;

		BLOCK2: BEGIN
			
			SET @moduleIncomeQry = CONCAT("SELECT SUM(IF ((b.cost_yearly = ''), (0), (IF(((d.is_cost_yearly=1) && (d.cost_yearly IS NULL || (d.cost_yearly = '') || (d.cost_yearly <= b.cost_yearly))), (IF((d.cost_yearly >= 0), (d.cost_yearly), (0))), (IF((b.cost_yearly >= 0), (b.cost_yearly), (0))))))) 
			INTO @annualModuleIncome
		        FROM fg_mb_module a
		        LEFT JOIN fg_mb_module_federation b ON a.id = b.module_id
		        LEFT JOIN fg_mb_club_modules c ON ((c.club_id = ",clubId," AND c.module_id = a.id))
		        LEFT JOIN fg_mb_module_individual_price d ON ((d.club_id = ",clubId," AND d.module_id = a.id))
		        WHERE (a.is_visible = 1 AND c.club_id = ",clubId,"
		        AND b.federation_id IN
		        (IF ((@fedQry), (@fedQry), (1))) 
			AND ((DATEDIFF(NOW(), c.signed_on) >= 30) OR (a.id = ",frontend2ModuleId,") OR ((a.id = ",frontend1ModuleId,") AND ((SELECT a1.id FROM fg_mb_club_modules a1 WHERE a1.club_id=c.club_id AND a1.module_id=",frontend2ModuleId,") IS NOT NULL))) 
		        AND b.is_default != 1)
		        ORDER BY a.sort_order ASC");

			PREPARE exec_qry FROM @moduleIncomeQry;
			EXECUTE exec_qry;
			DEALLOCATE PREPARE exec_qry;
			SET record_not_found = 0;
			
		END BLOCK2;

		BLOCK3: BEGIN
			
			SET @adFreeIncomeQry = CONCAT("SELECT SUM(a.cost) INTO @annualAdFreeIncome FROM fg_mb_club_adfree a LEFT JOIN fg_am_ads_type b ON a.ad_type_id = b.id WHERE (a.club_id = ",clubId," AND a.is_active = '1' AND a.is_selected = '1' AND (a.cost IS NOT NULL AND a.cost != '0'))");

			PREPARE exec_qry FROM @adFreeIncomeQry;
			EXECUTE exec_qry;
			DEALLOCATE PREPARE exec_qry;
			SET record_not_found = 0;
			
		END BLOCK3;

		IF ((@annualPackageIncome = '') || @annualPackageIncome IS NULL) THEN
			SET @annualPackageIncome = '0';
		END IF;
		IF ((@annualModuleIncome = '') || @annualModuleIncome IS NULL) THEN
			SET @annualModuleIncome = '0';
		END IF;
		IF ((@annualAdFreeIncome = '') || @annualAdFreeIncome IS NULL) THEN
			SET @annualAdFreeIncome = '0';
		END IF;

		SET @totalAmount = @annualPackageIncome + @annualModuleIncome + @annualAdFreeIncome;

		UPDATE `fg_club` SET `clientstate_amount` = @totalAmount WHERE `id` = clubId;

	END LOOP loop_field;
	CLOSE field_cursor;
	COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `updateClubContactListTable` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `updateClubContactListTable`( IN contactId LONGTEXT, IN clubId INTEGER)
BEGIN
	DECLARE cc_attribute_id, record_not_found, at_count INTEGER DEFAULT 0; 
	DECLARE cc_fieldtype TEXT DEFAULT "";
	DECLARE club_attribute_cursor CURSOR FOR SELECT ca.attribute_id, a.fieldtype FROM fg_cm_club_attribute AS ca LEFT JOIN fg_cm_attribute AS a ON ca.attribute_id = a.id WHERE ca.club_id = clubId;	
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;
  DECLARE EXIT HANDLER FOR SQLEXCEPTION, SQLWARNING
  BEGIN
    ROLLBACK;
  END;
	START TRANSACTION;
		SET @s = CONCAT('UPDATE `Table',clubId, '` AS A SET ');
		OPEN club_attribute_cursor;
			loop_attribute: LOOP
				FETCH club_attribute_cursor INTO cc_attribute_id, cc_fieldtype;
					IF record_not_found THEN
						SET record_not_found = 0;
						LEAVE loop_attribute;
					END IF;
					SET at_count = at_count + 1;
					IF(at_count != 1) THEN
						SET @s = CONCAT(@s, ', ');
					END IF;
					CASE cc_fieldtype
						WHEN 'int' THEN
							BEGIN
								SET @s = CONCAT(@s, 'A.`',cc_attribute_id ,'` = (select `fg_cm_attribute_value_int`.`value` AS `value` from `fg_cm_attribute_value_int` where (`fg_cm_attribute_value_int`.`contact_id` = A.`contact_id`) and (`fg_cm_attribute_value_int`.`attribute_id` = ',cc_attribute_id, '))');
							END;
						WHEN 'date' THEN
							BEGIN
								SET @s = CONCAT(@s, 'A.`',cc_attribute_id ,'` = (select `fg_cm_attribute_value_date`.`value` AS `value` from `fg_cm_attribute_value_date` where (`fg_cm_attribute_value_date`.`contact_id` = A.`contact_id`) and (`fg_cm_attribute_value_date`.`attribute_id` = ',cc_attribute_id, '))');
							END;
						WHEN 'text' THEN
							BEGIN
								SET @s = CONCAT(@s, 'A.`',cc_attribute_id ,'` = (select `fg_cm_attribute_value_text`.`value` AS `value` from `fg_cm_attribute_value_text` where (`fg_cm_attribute_value_text`.`contact_id` = A.`contact_id`) and (`fg_cm_attribute_value_text`.`attribute_id` = ',cc_attribute_id, '))');
							END;
					END CASE;
					
			END LOOP loop_attribute;	
		CLOSE club_attribute_cursor;
		SET @s = CONCAT(@s, ' WHERE A.contact_id IN( ',contactId,')');			
		PREPARE stmt FROM @s;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
		SET @s = CONCAT('INSERT INTO `Table',clubId, '` (`contact_id`, `is_member`, `is_company`, `comp_def_contact`, `comp_def_contact_fun`, `is_sponsor`, `is_household_head`, `is_draft`, `is_newsletter_subscriber`, `is_deleted`, `is_permanent_delete`, `is_seperate_invoice`, `last_updated`, `member_id`, `dispatch_type_invoice`, `dispatch_type_dun`, `created_on`, `origin`, `team_name`, `last_login`) 
		(SELECT `id`, `is_member`, `is_company`, `comp_def_contact`, `comp_def_contact_fun`, `is_sponsor`, `is_household_head`, `is_draft`, `is_newsletter_subscriber`, `is_deleted`, `is_permanent_delete`, `is_seperate_invoice` , `last_updated` , `member_id` , `dispatch_type_invoice`, `dispatch_type_dun` , `created_at`,  `origin`, (select `fg_rm_role`.`title` from `fg_rm_role` where `fg_rm_role`.`id` = `fg_cm_contact`.`team_id`), (select `sf_guard_user`.`last_login` AS `last_login` from `sf_guard_user` where (`sf_guard_user`.`contact_id` = `fg_cm_contact`.`id`)) from `fg_cm_contact` where id IN(',contactId,'))
		ON DUPLICATE KEY UPDATE 
		`is_member` = VALUES(`is_member`), 
		`is_company` = VALUES(`is_company`),
		`comp_def_contact` = VALUES(`comp_def_contact`),
		`comp_def_contact_fun` = VALUES(`comp_def_contact_fun`),
		`is_sponsor` = VALUES(`is_sponsor`),
		`is_household_head` = VALUES(`is_household_head`),
		`is_draft` = VALUES(`is_draft`),
		`is_newsletter_subscriber` = VALUES(`is_newsletter_subscriber`),
		`is_deleted` = VALUES(`is_deleted`),
		`is_permanent_delete` = VALUES(`is_permanent_delete`),
		`is_seperate_invoice` = VALUES(`is_seperate_invoice`),
		`last_updated` = VALUES(`last_updated`),
		`member_id` = VALUES(`member_id`),
		`dispatch_type_invoice` = VALUES(`dispatch_type_invoice`),
		`dispatch_type_dun` = VALUES(`dispatch_type_dun`),
		`created_on` = VALUES(`created_on`),
		`origin` = VALUES(`origin`),
		`team_name` = VALUES(`team_name`),
		`last_login` = VALUES(`last_login`)
		');	
		PREPARE stmt FROM @s;
		EXECUTE stmt;
	COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `updateClubContactListView` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `updateClubContactListView`( IN clubId INTEGER)
BEGIN
	DECLARE cc_attribute_id, record_not_found INTEGER DEFAULT 0; 
	DECLARE cc_fieldtype TEXT DEFAULT "";
	DECLARE club_attribute_cursor CURSOR FOR SELECT ca.attribute_id, a.fieldtype FROM fg_cm_club_attribute AS ca LEFT JOIN fg_cm_attribute AS a ON ca.attribute_id = a.id WHERE ca.club_id = clubId;	
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;

	START TRANSACTION;
		SET @k = CONCAT('DROP VIEW IF EXISTS `View',clubId, '`');
		PREPARE stmt1 FROM @k;
		EXECUTE stmt1;	

		SET @s = CONCAT('CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `View',clubId, '` AS select `fg_cm_contact`.`id` AS `contact_id`,');
	
		OPEN club_attribute_cursor;
			loop_attribute: LOOP
				FETCH club_attribute_cursor INTO cc_attribute_id, cc_fieldtype;
					IF record_not_found THEN
						SET record_not_found = 0;
						LEAVE loop_attribute;
					END IF;
					CASE cc_fieldtype
						WHEN 'int' THEN
							BEGIN
								SET @s = CONCAT(@s, '(select `fg_cm_attribute_value_int`.`value` AS `value` from `fg_cm_attribute_value_int` where ((`fg_cm_attribute_value_int`.`contact_id` = `fg_cm_contact`.`id`) and (`fg_cm_attribute_value_text`.`attribute_id` = ',cc_attribute_id, '))) AS `',cc_attribute_id,'`,');
							END;
						WHEN 'date' THEN
							BEGIN
								SET @s = CONCAT(@s, '(select `fg_cm_attribute_value_date`.`value` AS `value` from `fg_cm_attribute_value_date` where ((`fg_cm_attribute_value_date`.`contact_id` = `fg_cm_contact`.`id`) and (`fg_cm_attribute_value_date`.`attribute_id` = ',cc_attribute_id, '))) AS `',cc_attribute_id,'`,');
							END;
						WHEN 'text' THEN
							BEGIN
								SET @s = CONCAT(@s, '(select `fg_cm_attribute_value_text`.`value` AS `value` from `fg_cm_attribute_value_text` where ((`fg_cm_attribute_value_text`.`contact_id` = `fg_cm_contact`.`id`) and (`fg_cm_attribute_value_text`.`attribute_id` = ',cc_attribute_id, '))) AS `',cc_attribute_id,'`,');
							END;
					END CASE;			
			END LOOP loop_attribute;	
		CLOSE club_attribute_cursor;
	SET @s = CONCAT(@s, '`fg_cm_contact`.`is_member` AS `is_member`,`fg_cm_contact`.`is_company` AS `is_company`,`fg_cm_contact`.`comp_def_contact` AS `comp_def_contact`,`fg_cm_contact`.`comp_def_contact_fun` AS `comp_def_contact_fun`,`fg_cm_contact`.`is_sponsor` AS `is_sponsor`,`fg_cm_contact`.`is_household_head` AS `is_household_head`,`fg_cm_contact`.`is_draft` AS `is_draft`,`fg_cm_contact`.`is_newsletter_subscriber` AS `is_newsletter_subscriber`,`fg_cm_contact`.`is_deleted` AS `is_deleted`,`fg_cm_contact`.`is_permanent_delete` AS `is_permanent_delete`,`fg_cm_contact`.`is_seperate_invoice` AS `is_seperate_invoice`,`fg_cm_contact`.`last_updated` AS `last_updated`,`fg_cm_contact`.`member_id` AS `member_id`,`fg_cm_contact`.`dispatch_type_invoice` AS `dispatch_type_invoice`, `fg_cm_contact`.`dispatch_type_dun` AS `dispatch_type_dun`,`fg_cm_contact`.`created_at` AS `created_on`, `fg_cm_contact`.`origin` AS `origin`, (select `fg_rm_role`.`title` from `fg_rm_role` where `fg_rm_role`.`id` = `fg_cm_contact`.`team_id`) AS team_name, (select `sf_guard_user`.`last_login` AS `last_login` from `sf_guard_user` where (`sf_guard_user`.`contact_id` = `fg_cm_contact`.`id`)) AS `last_login` 
	from `fg_cm_contact` where ((`fg_cm_contact`.`club_id` = ',clubId ,') and (`fg_cm_contact`.`is_permanent_delete` = 0))');
	PREPARE stmt FROM @s;
	EXECUTE stmt;		
	COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `updateContacts` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`fairgate`@`%` PROCEDURE `updateContacts`(tableName1 TEXT,tableName2 TEXT,p_club_id INT, changed_by INT, main_contact TEXT,own_table TEXT)
BEGIN
	DECLARE record_not_found, attr_set_id INTEGER DEFAULT 0;
    DECLARE attr_set_id_inv INTEGER DEFAULT 137;
    DECLARE id INTEGER DEFAULT 0;
	DECLARE same_as INTEGER DEFAULT 1;
    DECLARE has_MC TEXT DEFAULT '0';
	DECLARE is_mem TEXT DEFAULT '0';
	DECLARE is_company text;
    DECLARE dynamicSQL TEXT;
    DECLARE exec_qry TEXT;
    DECLARE exec_qry1 TEXT;
    DECLARE fieldname TEXT;
    DECLARE attributetable TEXT;
    DECLARE prevLoopTable TEXT DEFAULT '';
    DECLARE rowc INTEGER;
    DECLARE colfg TEXT;
    DECLARE coltitle TEXT;
    DECLARE attribquery,tableName TEXT DEFAULT '';
    DECLARE queryColumns TEXT DEFAULT '';
	DECLARE queryValues TEXT DEFAULT '';
    DECLARE logquery TEXT DEFAULT '';
    DECLARE queryDuplicate TEXT DEFAULT '';
    DECLARE fgCmContactColumns TEXT DEFAULT '';
    DECLARE fgCmContactValues TEXT DEFAULT '';
    DECLARE my_var TEXT DEFAULT '';
    DECLARE same_query TEXT DEFAULT '';
	DECLARE sf_query TEXT DEFAULT '';
    DECLARE filedname_joindate_val TEXT DEFAULT '';
    DECLARE joindate_query TEXT DEFAULT '';
    DECLARE impTable TEXT;
    DECLARE rowid_joindate INTEGER;
    DECLARE subClubQuery TEXT DEFAULT '';
	DECLARE subClubWhere TEXT DEFAULT '1';
	
	DECLARE CONTINUE HANDLER FOR
    NOT FOUND SET record_not_found = 1;
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        ROLLBACK;
    END;
	
	START TRANSACTION;
   
    DROP TABLE IF EXISTS `dynamic_Columncursor`;
    SET @dynamicSQL=CONCAT('CREATE TEMPORARY TABLE dynamic_Columncursor as SELECT * FROM ',tableName2,' WHERE imp_table="',tableName1,'" ORDER BY fg_table ASC' );
    PREPARE exec_qry FROM @dynamicSQL;
    EXECUTE exec_qry ;
    DEALLOCATE PREPARE exec_qry;
	
	IF (SUBSTRING(own_table,1,11) <> 'master_club') THEN 
		SET subClubQuery=CONCAT('LEFT JOIN master_federation_',p_club_id,' mf ON mf.contact_id=C.id ');
		SET subClubWhere=CONCAT('( mf.club_id=',p_club_id,' OR mf.is_fed_member=1)');
	END IF;

	BLOCK_CATEGORY: BEGIN
		
	DECLARE dynamiccolumnCursor CURSOR FOR  SELECT * FROM `dynamic_Columncursor`;
	-- get sub level clubs
	
	
	SET my_var='';
	-- get column name of contact_id field from table1
	SET @logquery= CONCAT("SELECT col_imp INTO @id FROM ",tableName2," WHERE imp_table='",tableName1,"' AND col_fg='contact_id' AND col_imp IS NOT NULL AND col_imp !=''");
	PREPARE exec_qry FROM @logquery;
	EXECUTE exec_qry ;
	DEALLOCATE PREPARE exec_qry;
	OPEN dynamiccolumnCursor;
		dynamiccolumnCursorLoop: LOOP
			FETCH dynamiccolumnCursor INTO rowc,fieldname,colFg,attributetable,impTable,colTitle;
			IF record_not_found THEN
					SET record_not_found = 0;
					LEAVE dynamiccolumnCursorLoop;
			END IF;	
			IF (fieldname !='' AND attributetable != 'fg_cm_contact') THEN
			SET tableName=SUBSTRING(attributetable,1,11);
			SET my_var=CONCAT(my_var,rowc,fieldname,colFg,attributetable,colTitle,'&&&&&');
			-- update sf_guard user
			IF(colFg ='3') THEN 
				SET @sf_query=CONCAT("UPDATE sf_guard_user su LEFT JOIN ",tableName1," tp ON (tp.",@id,"=su.contact_id AND tp.is_removed=0) LEFT JOIN fg_cm_contact C ON C.id=su.contact_id set `username`=tp.",fieldname,",`username_canonical`=tp.",fieldname,",`email`=tp.",fieldname,",`email_canonical`=tp.",fieldname," WHERE su.contact_id=tp.",@id," AND su.id !=0 AND tp.is_removed=0 AND C.is_permanent_delete='0'");
				PREPARE exec_qry FROM @sf_query;
				EXECUTE exec_qry ;
				DEALLOCATE PREPARE exec_qry;
			END IF;
			-- update log entry
			IF(fieldname !='') THEN                 
				SET @logquery= CONCAT("INSERT INTO fg_cm_change_log ( `date`, `changed_by`, `confirmed_by`,  `contact_id`,`kind`, `field`, `value_before`, `value_after`,`attribute_id`)(SELECT NOW(), ",changed_by,",",changed_by,", C.id, 'data','",colTitle,"',(SELECT `",colFg,"` FROM ",attributetable," WHERE contact_id=C.id) AS old_value,T.",fieldname,",cast('",colFg,"'as UNSIGNED) FROM ",tableName1," T LEFT JOIN fg_cm_contact C ON C.id=T.",@id," ",subClubQuery," WHERE ",subClubWhere," AND C.is_permanent_delete='0' AND T.is_removed='0' HAVING  old_value !=T.",fieldname,")");
				PREPARE exec_qry FROM @logquery;
				EXECUTE exec_qry ;
				DEALLOCATE PREPARE exec_qry;
			END IF;
			-- Build query so that each table updated only once by keeping table name of previous iteration.
			IF(prevLoopTable <> attributetable) THEN 
			BEGIN
				-- if not first iteration
				IF (queryColumns <>'') THEN
					set my_var=CONCAT(my_var,queryColumns,'==');
					SET @attribQuery= CONCAT(queryColumns,') (SELECT C.id',queryValues,' FROM ',tableName1,' T LEFT JOIN fg_cm_contact C ON C.id=T.',@id,' ',subClubQuery,' WHERE ',subClubWhere,' AND T.is_removed="0" AND C.is_permanent_delete="0" ) ',queryDuplicate);
					PREPARE exec_qry FROM @attribQuery;
					EXECUTE exec_qry ;
					DEALLOCATE PREPARE exec_qry;
					SET attribQuery='';
					SET queryColumns='';
					SET queryValues='';
				END IF;
				SET queryColumns=CONCAT("INSERT INTO ",attributetable," (`contact_id`,`",colFg,"`");
				SET queryValues= CONCAT(",T.",fieldname);
				SET queryDuplicate=CONCAT("ON DUPLICATE KEY UPDATE `",colFg,"`=VALUES(`",colFg,"`)");
				IF(tableName != 'master_club') THEN 
					SET queryColumns= CONCAT(queryColumns,", `club_id`");
					SET queryValues= CONCAT( queryValues,",C.club_id");
				END IF;
			END;
			ELSEIF(colFg <>'contact_id' AND fieldname !='' ) THEN 
			BEGIN
				SET queryColumns= CONCAT(queryColumns,", `",colFg,"`");
				SET queryValues= CONCAT( queryValues,",T.",fieldname);
				SET queryDuplicate=CONCAT(queryDuplicate,",`",colFg,"`=VALUES(`",colFg,"`)");
			END;
			END IF;
			
			SET prevLoopTable=attributetable;
			END IF;
		END LOOP dynamiccolumnCursorLoop;
	CLOSE dynamiccolumnCursor;
	END BLOCK_CATEGORY;
	
	-- insert last table set query
	IF queryColumns !='' THEN
		SET @attribQuery= CONCAT(queryColumns,') (SELECT C.id',queryValues,' FROM ',tableName1,' T LEFT JOIN fg_cm_contact C ON C.id=T.',@id,' ',subClubQuery,' WHERE ',subClubWhere,' AND T.is_removed="0" AND C.is_permanent_delete="0") ',queryDuplicate);
		PREPARE exec_qry FROM @attribQuery;
		EXECUTE exec_qry ;
		DEALLOCATE PREPARE exec_qry;
	END IF;
	select CONCAT(@sf_query,'==',@logquery);
	/*DROP TABLE `dynamic_Columncursor`;
	SET @same_query= CONCAT("DROP TABLE ",tableName1);
	PREPARE exec_qry FROM @same_query;
	EXECUTE exec_qry ;
	DEALLOCATE PREPARE exec_qry;
	
	SET @same_query= CONCAT("DELETE FROM ",tableName2," WHERE imp_table='",tableName1,"'");
	PREPARE exec_qry FROM @same_query;
	EXECUTE exec_qry ;
	DEALLOCATE PREPARE exec_qry; */

	COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `updateContactTableAttributes` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `updateContactTableAttributes`(IN clubId INTEGER, contactId LONGTEXT, attributeId LONGTEXT)
BEGIN
	DECLARE cc_attribute_id, record_not_found, at_count INTEGER DEFAULT 0; 
	DECLARE cc_fieldtype TEXT DEFAULT "";
	DECLARE club_attribute_cursor CURSOR FOR SELECT ca.attribute_id, a.fieldtype FROM fg_cm_club_attribute AS ca LEFT JOIN fg_cm_attribute AS a ON ca.attribute_id = a.id WHERE ca.club_id = clubId AND FIND_IN_SET(a.id,attributeId);	
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;
    DECLARE EXIT HANDLER FOR SQLEXCEPTION, SQLWARNING
    BEGIN
        ROLLBACK;
    END;
	START TRANSACTION;

		SET @s = CONCAT('UPDATE `tablecontact',clubId, '` AS A SET ');
		OPEN club_attribute_cursor;
			loop_attribute: LOOP
				FETCH club_attribute_cursor INTO cc_attribute_id, cc_fieldtype;
					IF record_not_found THEN
						SET record_not_found = 0;
						LEAVE loop_attribute;
					END IF;
					SET at_count = at_count + 1;
					IF(at_count != 1) THEN
						SET @s = CONCAT(@s, ', ');
					END IF;
					CASE cc_fieldtype
						WHEN 'int' THEN
							BEGIN
								SET @s = CONCAT(@s, 'A.`',cc_attribute_id ,'` = (select `fg_cm_attribute_value_int`.`value` AS `value` from `fg_cm_attribute_value_int` where (`fg_cm_attribute_value_int`.`contact_id` = A.`contact_id`) and (`fg_cm_attribute_value_int`.`attribute_id` = ',cc_attribute_id, '))');
							END;
						WHEN 'date' THEN
							BEGIN
								SET @s = CONCAT(@s, 'A.`',cc_attribute_id ,'` = (select `fg_cm_attribute_value_date`.`value` AS `value` from `fg_cm_attribute_value_date` where (`fg_cm_attribute_value_date`.`contact_id` = A.`contact_id`) and (`fg_cm_attribute_value_date`.`attribute_id` = ',cc_attribute_id, '))');
							END;
						WHEN 'text' THEN
							BEGIN
								SET @s = CONCAT(@s, 'A.`',cc_attribute_id ,'` = (select `fg_cm_attribute_value_text`.`value` AS `value` from `fg_cm_attribute_value_text` where (`fg_cm_attribute_value_text`.`contact_id` = A.`contact_id`) and (`fg_cm_attribute_value_text`.`attribute_id` = ',cc_attribute_id, '))');
							END;
					END CASE;
					
			END LOOP loop_attribute;	
		CLOSE club_attribute_cursor;
		SET @s = CONCAT(@s, ' WHERE A.contact_id IN( ',contactId,')');
    SELECT @s;
		PREPARE stmt FROM @s;
		EXECUTE stmt;				
	COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `updateCorresLanguageOfContact` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `updateCorresLanguageOfContact`()
BEGIN
	
	
	DECLARE new_club_id INTEGER;

	DECLARE record_not_found INTEGER DEFAULT 0; 
	
	DECLARE cc_club_id, cc_contact_id, default_lang, contact_row TEXT;	
	
	
	DECLARE club_cursor CURSOR FOR SELECT id FROM `fg_club` WHERE id  = 1119 AND `language_updated` = 0 AND is_deleted =0 LIMIT 0,10;	

	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;
	
	SET autocommit = 0;

	DROP TEMPORARY TABLE IF EXISTS `contact_table`;
	CREATE TEMPORARY TABLE `contact_table` (
	  `contact_id` int(11),
	  `club_id` int(11)
	);
	BLOCK1: BEGIN	
		OPEN club_cursor;
		loop_club: LOOP		
			FETCH club_cursor INTO cc_club_id;
			
			IF record_not_found THEN
				SET record_not_found = 0;
				LEAVE loop_club;
			END IF;
			
			START TRANSACTION;
				SELECT short_name INTO default_lang FROM fg_club_languages WHERE club_id = cc_club_id AND is_default= 1 AND is_active= 1;
				SET @loop2query2= CONCAT("INSERT INTO contact_table (`contact_id`, `club_id`) SELECT contact_id, '",cc_club_id,"' FROM  `View",cc_club_id, "` WHERE `515` IS NULL OR `515` = ''" ); 

				PREPARE exec_qry FROM @loop2query2;
				EXECUTE exec_qry ;
				
				DEALLOCATE PREPARE exec_qry;
				
				BLOCK2: BEGIN

					DECLARE contactcursor CURSOR FOR SELECT contact_id FROM `contact_table` WHERE `club_id`= cc_club_id;
					OPEN contactcursor;
						loop_contact: LOOP
							FETCH contactcursor INTO cc_contact_id;
							
							IF record_not_found THEN
								SET record_not_found = 0;
								LEAVE loop_contact;
							END IF;
							SET contact_row = (SELECT id FROM fg_cm_attribute_value_text WHERE contact_id = cc_contact_id AND attribute_id = 515);
							IF(contact_row IS NULL) THEN
								INSERT INTO  `fg_cm_attribute_value_text` (`contact_id`, `attribute_id`, `value`) VALUES(cc_contact_id, 515, default_lang);
							ELSE
								UPDATE `fg_cm_attribute_value_text` SET `value` = default_lang WHERE contact_id = cc_contact_id AND attribute_id = 515;
							END IF;
						
						END LOOP loop_contact;	
					CLOSE contactcursor;	
				END BLOCK2;
				
				TRUNCATE TABLE contact_table; 
				UPDATE fg_club SET language_updated = 1 WHERE id = 	cc_club_id; 
			COMMIT;
		END LOOP loop_club;	
		CLOSE club_cursor;
	END BLOCK1;
		
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `updateDefaultLang` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `updateDefaultLang`(default_lang VARCHAR(3),club_id INTEGER, is_default TINYINT)
main:BEGIN
IF is_default = 0 THEN
 LEAVE main;
END IF;
UPDATE fg_club_terminology a INNER JOIN fg_club_terminology_i18n b ON (a.id=b.id) SET a.singular=b.singular_lang, a.plural=b.plural_lang, b.is_active=1 WHERE b.lang=default_lang AND a.club_id=club_id;
UPDATE fg_team_category a INNER JOIN fg_team_category_i18n b ON (a.id=b.id) SET a.title=b.title_lang,b.is_active=1 WHERE b.lang=default_lang AND a.club_id=club_id;
UPDATE fg_rm_category a INNER JOIN fg_rm_category_i18n b ON (a.id=b.id) SET a.title=b.title_lang,b.is_active=1 WHERE b.lang=default_lang AND a.club_id=club_id;
UPDATE fg_rm_role a INNER JOIN fg_rm_role_i18n b ON (a.id=b.id) SET a.title=b.title_lang,a.description=b.description_lang,b.is_active=1 WHERE b.lang=default_lang AND a.club_id=club_id;
UPDATE fg_rm_function a INNER JOIN fg_rm_function_i18n b ON (a.id=b.id) INNER JOIN fg_rm_category c ON (a.category_id=c.id) SET a.title=b.title_lang,b.is_active=1 WHERE b.lang=default_lang AND c.club_id=club_id;
UPDATE fg_cm_attribute a INNER JOIN fg_cm_attribute_i18n b ON (a.id=b.id) INNER JOIN fg_cm_club_attribute c ON (a.id=c.attribute_id) SET a.fieldname=b.fieldname_lang,a.fieldname_short=b.fieldname_short_lang,b.is_active=1 WHERE b.lang=default_lang AND c.club_id=club_id AND a.is_system_field=0 AND a.is_fairgate_field=0;
UPDATE fg_cms_link_details a INNER JOIN fg_cms_link_details_i18n b ON (a.id=b.id) SET a.title=b.title_lang,b.is_active=1 WHERE b.lang=default_lang AND a.club_id=club_id;
UPDATE fg_cms_content_section a INNER JOIN fg_cms_content_section_i18n b ON (a.id=b.id) INNER JOIN fg_cms_link_details c ON (a.link_details_id=c.id) SET a.title=b.title_lang,b.is_active=1 WHERE b.lang=default_lang AND c.club_id=club_id;
UPDATE fg_cms_contact_list a INNER JOIN fg_cms_contact_list_i18n b ON (a.id=b.id) INNER JOIN fg_cms_standard_content c ON (a.standard_content_id=c.id) INNER JOIN fg_cms_content_section d ON (c.content_section_id=d.id) INNER JOIN fg_cms_link_details e ON (d.link_details_id=e.id) SET a.title=b.title_lang,a.content=b.content_lang,b.is_active=1 WHERE b.lang=default_lang AND e.club_id=club_id;
UPDATE fg_cms_map a INNER JOIN fg_cms_map_i18n b ON (a.id=b.id) INNER JOIN fg_cms_standard_content c ON (a.standard_content_id=c.id) INNER JOIN fg_cms_content_section d ON (c.content_section_id=d.id) INNER JOIN fg_cms_link_details e ON (d.link_details_id=e.id) SET a.title=b.title_lang,b.is_active=1 WHERE b.lang=default_lang AND e.club_id=club_id;
UPDATE fg_cms_form a INNER JOIN fg_cms_form_i18n b ON (a.id=b.id) INNER JOIN fg_cms_standard_content c ON (a.standard_content_id=c.id) INNER JOIN fg_cms_content_section d ON (c.content_section_id=d.id) INNER JOIN fg_cms_link_details e ON (d.link_details_id=e.id) SET a.title=b.title_lang,a.name=b.name_lang,a.email_subject=b.email_subject_lang,a.button_label=b.button_label_lang,a.reciever_label=b.reciever_label_lang,b.is_active=1 WHERE b.lang=default_lang AND e.club_id=club_id;
UPDATE fg_cms_form_fields a INNER JOIN fg_cms_form_fields_i18n b ON (a.id=b.id) INNER JOIN fg_cms_form c ON (a.form_id=c.id) INNER JOIN fg_cms_standard_content d ON (c.standard_content_id=d.id) INNER JOIN fg_cms_content_section e ON (d.content_section_id=e.id) INNER JOIN fg_cms_link_details f ON (e.link_details_id=f.id) SET a.label=b.label_lang,a.tip=b.tip_lang,b.is_active=1 WHERE b.lang=default_lang AND f.club_id=club_id;

SET SQL_SAFE_UPDATES=0;
UPDATE fg_cms_form_confirmation_message a INNER JOIN fg_cms_form_confirmation_message_i18n b ON (a.id=b.id) INNER JOIN fg_cms_form c ON (a.form_id=c.id) INNER JOIN fg_cms_standard_content d ON (c.standard_content_id=d.id) INNER JOIN fg_cms_content_section e ON (d.content_section_id=e.id) INNER JOIN fg_cms_link_details f ON (e.link_details_id=f.id) SET a.subject=b.subject_lang,a.content=b.content_lang,b.is_active=1 WHERE b.lang=default_lang AND f.club_id=club_id;
UPDATE fg_cms_form_receivers a INNER JOIN fg_cms_form_receivers_i18n b ON (a.id=b.id) INNER JOIN fg_cms_form c ON (a.form_id=c.id) INNER JOIN fg_cms_standard_content d ON (c.standard_content_id=d.id) INNER JOIN fg_cms_content_section e ON (d.content_section_id=e.id) INNER JOIN fg_cms_link_details f ON (e.link_details_id=f.id) SET a.name=b.name_lang,b.is_active=1 WHERE b.lang=default_lang AND f.club_id=club_id;
UPDATE fg_cms_text_content a INNER JOIN fg_cms_text_content_i18n b ON (a.id=b.id) INNER JOIN fg_cms_standard_content c ON (a.standard_content_id=c.id) INNER JOIN fg_cms_content_section d ON (c.content_section_id=d.id) INNER JOIN fg_cms_link_details e ON (d.link_details_id=e.id) SET a.title=b.title_lang,a.text=b.text_lang,b.is_active=1 WHERE b.lang=default_lang AND e.club_id=club_id;
UPDATE fg_cms_standard_content_media a INNER JOIN fg_cms_standard_content_media_i18n b ON (a.id=b.id) INNER JOIN fg_cms_text_content c ON (a.content_id=c.id) INNER JOIN fg_cms_standard_content d ON (c.standard_content_id=d.id) INNER JOIN fg_cms_content_section e ON (d.content_section_id=e.id) INNER JOIN fg_cms_link_details f ON (e.link_details_id=f.id) SET a.description=b.description_lang,b.is_active=1 WHERE b.lang=default_lang AND f.club_id=club_id;
UPDATE fg_cms_document_content a INNER JOIN fg_cms_document_content_i18n b ON (a.id=b.id) INNER JOIN fg_cms_standard_content c ON (a.standard_content_id=c.id) INNER JOIN fg_cms_content_section d ON (c.content_section_id=d.id) INNER JOIN fg_cms_link_details e ON (d.link_details_id=e.id) SET a.title=b.title_lang,b.is_active=1 WHERE b.lang=default_lang AND e.club_id=club_id;
UPDATE fg_cms_news_category a INNER JOIN fg_cms_news_category_i18n b ON (a.id=b.id) SET a.title=b.title_lang,b.is_active=1 WHERE b.lang=default_lang AND a.club_id=club_id;
UPDATE fg_cms_news a INNER JOIN fg_cms_news_i18n b ON (a.id=b.id) SET a.title=b.title_lang,a.teaser_text=b.teaser_text_lang,a.content_text=b.content_text_lang,b.is_active=1 WHERE b.lang=default_lang AND a.club_id=club_id;
UPDATE fg_em_calendar_category a INNER JOIN fg_em_calendar_category_i18n b ON (a.id=b.id) SET a.title=b.title_lang, b.is_active=1 WHERE b.lang=default_lang AND a.club_id=club_id;
UPDATE fg_em_calendar a INNER JOIN fg_em_calendar_i18n b ON (a.id=b.id) SET a.title=b.title_lang,a.description=b.description_lang, b.is_active=1 WHERE a.description_type='EDITOR' AND b.lang=default_lang AND a.club_id=club_id;
UPDATE fg_sm_media_label a INNER JOIN fg_sm_media_label_i18n b ON (a.id=b.id) SET a.title=b.title_lang,b.is_active=1 WHERE b.lang=default_lang AND a.club_id=club_id;
UPDATE fg_team_external_links a INNER JOIN fg_rm_role b ON (a.team_id=b.id) INNER JOIN fg_team_external_links_i18n c ON (a.id=c.id) SET a.link_name=c.link_name_lang,c.is_active=1 WHERE c.lang=default_lang AND b.club_id=club_id;
UPDATE fg_team_roster_category a INNER JOIN fg_team_roster_category_i18n b ON (a.id=b.id) SET a.title=b.title_lang,b.is_active=1 WHERE b.lang=default_lang AND a.club_id=club_id;
UPDATE fg_team_widgets_article a INNER JOIN fg_team_widgets b ON (b.id=a.widgets_id) INNER JOIN fg_team_widgets_article_i18n c ON (b.id=c.id) SET a.title=c.title_lang,c.is_active=1 WHERE c.lang=default_lang AND b.club_id=club_id;
UPDATE fg_team_widgets_calendar a INNER JOIN fg_team_widgets b ON (b.id=a.widget_id) INNER JOIN fg_team_widgets_text_i18n c ON (b.id=c.id) SET a.title=c.title_lang,c.is_active=1 WHERE c.lang=default_lang AND b.club_id=club_id;
UPDATE fg_team_widgets_text a INNER JOIN fg_team_widgets b ON (b.id=a.widget_id) INNER JOIN fg_team_widgets_text_i18n c ON (b.id=c.id) SET a.title=c.title_lang, a.description=c.description_lang,c.is_active=1 WHERE c.lang=default_lang AND b.club_id=club_id;
UPDATE fg_info a INNER JOIN fg_info_i18n b ON (a.id=b.id) SET a.info_text=b.info_text_lang, b.is_active=1 WHERE b.lang=default_lang;
UPDATE fg_cms_widgets a INNER JOIN fg_cms_widgets_i18n b ON (b.id=a.id) SET a.title=b.title_lang, a.freetext_content=b.freetext_content_lang, b.is_active=1 WHERE b.lang=default_lang AND a.club_id=club_id;
UPDATE fg_cms_sbo_text a INNER JOIN fg_cms_sbo_text_i18n b ON (b.id=a.id) SET a.page_title=b.page_title_lang, a.intro_text=b.intro_text_lang, a.bottom_text=b.bottom_text_lang, b.is_active=1 WHERE b.lang=default_lang AND a.club_id=club_id;
UPDATE fg_cms_content_section_memberlist a INNER JOIN fg_cms_content_section_memberlist_i18n b ON (b.id=a.id) SET a.title=b.title_lang, b.is_active=1 WHERE b.lang=default_lang AND a.club_id=club_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `updateJoiningAndLeavingDates` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `updateJoiningAndLeavingDates`()
BEGIN
	
	DECLARE record_not_found, contactId, clubId INTEGER DEFAULT 0;
	DECLARE joiningDate, leavingDate datetime DEFAULT '0000-00-00 00:00:00';

	
	DECLARE field_cursor CURSOR FOR SELECT a.`id`, a.`club_id` FROM `fg_cm_contact` a
					LEFT JOIN `fg_club` b ON (b.`id`=a.`club_id`) 
					WHERE a.`club_id` <> 1 AND (a.`is_fairgate` IS NULL OR a.`is_fairgate` = 0) AND a.`is_permanent_delete` <> 1 
					AND b.`is_fairgate` <> 1 AND b.`is_deleted`=0 AND b.`state`<>'P';

	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;

	SET autocommit = 0;
	
	START TRANSACTION;

	OPEN field_cursor;
	loop_field: LOOP
		FETCH field_cursor INTO contactId, clubId;

		IF record_not_found THEN
			SET record_not_found = 0;
			LEAVE loop_field;
		END IF;

		
		SET joiningDate = (SELECT IF(((SELECT A.`date` FROM `fg_cm_change_log` A WHERE A.`kind` = 'contact type' AND A.`value_after` = 'member' AND A.`contact_id` = contactId ORDER BY A.`date` DESC LIMIT 1) IS NOT NULL), (SELECT A.`date` FROM `fg_cm_change_log` A WHERE A.`kind` = 'contact type' AND A.`value_after` = 'member' AND A.`contact_id` = contactId ORDER BY A.`date` DESC LIMIT 1), ('0000-00-00 00:00:00')));

		
		SET leavingDate = (SELECT IF(((SELECT A.`date` FROM `fg_cm_change_log` A WHERE A.`kind` = 'contact type' AND A.`value_before` = 'member' AND A.`contact_id` = contactId AND A.`date` > joiningDate ORDER BY A.`date` DESC LIMIT 1) IS NOT NULL), (SELECT A.`date` FROM `fg_cm_change_log` A WHERE A.`kind` = 'contact type' AND A.`value_before` = 'member' AND A.`contact_id` = contactId AND A.`date` > joiningDate ORDER BY A.`date` DESC LIMIT 1), ('0000-00-00 00:00:00')));


		
		

		
		UPDATE `fg_cm_contact` SET `joining_date` = joiningDate, `leaving_date` = leavingDate WHERE `id` = contactId;


	END LOOP loop_field;
	CLOSE field_cursor;

	COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `updateLoginCountOfContacts` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `updateLoginCountOfContacts`()
BEGIN
	
	DECLARE record_not_found, contactId INTEGER DEFAULT 0;
	DECLARE loginCount INTEGER DEFAULT '0';

	
	DECLARE field_cursor CURSOR FOR SELECT a.`id` FROM `fg_cm_contact` a
					LEFT JOIN `fg_club` b ON (b.`id`=a.`club_id`) 
					WHERE a.`club_id` <> 1 AND (a.`is_fairgate` IS NULL OR a.`is_fairgate` = 0) AND a.`is_permanent_delete` <> 1 
					AND b.`is_fairgate` <> 1 AND b.`is_deleted`=0 AND b.`state`<>'P' AND a.`loginCountFlag`=1 LIMIT 0,10000;

	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;

	
	
	

	OPEN field_cursor;
	loop_field: LOOP
		FETCH field_cursor INTO contactId;

		IF record_not_found THEN
			SET record_not_found = 0;
			LEAVE loop_field;
		END IF;

		
		SET loginCount = (SELECT IF(((SELECT A.`value_after` FROM `fg_cm_change_log` A WHERE A.`contact_id` = contactId AND A.`kind` = 'login' AND A.`field` = 'Logged in' ORDER BY A.`id` DESC LIMIT 1) IS NOT NULL), (SELECT A.`value_after` FROM `fg_cm_change_log` A WHERE A.`contact_id` = contactId AND A.`kind` = 'login' AND A.`field` = 'Logged in' ORDER BY A.`id` DESC LIMIT 1), ('0')));

		
		UPDATE `fg_cm_contact` SET `login_count` = loginCount WHERE `id` = contactId;

	END LOOP loop_field;
	CLOSE field_cursor;

	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `updateRecipientContacts` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`fairgate`@`localhost` PROCEDURE `updateRecipientContacts`(recipientListId INT, selectQuery TEXT, fromQuery TEXT, whereQuery TEXT, parentEmailJoinQuery TEXT, mainEmailIds VARCHAR(255), substituteEmail VARCHAR(255), primaryEmailFieldId INT)
BEGIN

DECLARE record_not_found 	 INTEGER DEFAULT 0; 
DECLARE emailFieldId     	 VARCHAR(255);
DECLARE strLen           	 INT DEFAULT 0;
DECLARE SubStrLen 	  	 INT DEFAULT 0;
DECLARE insertQuery      	 TEXT;
DECLARE saveSubstituteEmailConts INT DEFAULT 1;
DECLARE execQuery, exec_qry	 TEXT;

DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;
DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
	ROLLBACK;
END;

START TRANSACTION;

-- Delete current recipient contacts --
DELETE FROM `fg_cn_recepients_mandatory` WHERE `recepient_list_id`=recipientListId;

-- Save filtered contacts having the selected main emails - starts --
loop_mainEmailIds: LOOP

	SET strLen = LENGTH(mainEmailIds);
	SET emailFieldId = SUBSTRING_INDEX(mainEmailIds, ',', 1);

	IF (emailFieldId = 'parent_email') THEN
	    SET insertQuery = CONCAT(selectQuery, ", '", primaryEmailFieldId, "' AS emailField, 'parentemail' AS emailType, (SELECT `", primaryEmailFieldId, "` FROM master_system WHERE master_system.contact_id=lc.contact_id) AS email, lc.contact_id AS linkedContId", " ", fromQuery, parentEmailJoinQuery, " ", whereQuery, " AND (((SELECT `", primaryEmailFieldId, "` FROM master_system WHERE master_system.contact_id=lc.contact_id) IS NOT NULL) AND ((SELECT `", primaryEmailFieldId, "` FROM master_system WHERE master_system.contact_id=lc.contact_id) != ''))");
	ELSE
	    SET insertQuery = CONCAT(selectQuery, ", '", emailFieldId, "' AS emailField, 'emailfield' AS emailType, `", emailFieldId, "` AS email, NULL AS linkedContId", " ", fromQuery, " ", whereQuery, " AND ((`", emailFieldId, "` IS NOT NULL) AND (`", emailFieldId, "` != ''))");
	END IF;

	SET @execQuery = CONCAT("INSERT INTO `fg_cn_recepients_mandatory` (`contact_id`, `recepient_list_id`, `salutation`, `corres_lang`, `email_field_id`, `email_type`, `email`, `linked_contact_id`) ", insertQuery);

	PREPARE exec_qry FROM @execQuery;
        EXECUTE exec_qry;
        DEALLOCATE PREPARE exec_qry;

	IF (emailFieldId = substituteEmail) THEN
	    SET saveSubstituteEmailConts = 0;
	END IF;

	SET SubStrLen = LENGTH(SUBSTRING_INDEX(mainEmailIds, ',', 1));
	SET mainEmailIds = MID(mainEmailIds, SubStrLen+2, strLen);
    
    	IF ((mainEmailIds = NULL) || (mainEmailIds = '')) THEN
		LEAVE loop_mainEmailIds;
    	END IF;

END LOOP loop_mainEmailIds;
-- Save filtered contacts having the selected main emails - ends --


-- Save filtered contacts having the selected substitute email if mail emails are not there - starts  --
IF ((substituteEmail != '') AND (saveSubstituteEmailConts = 1)) THEN

	IF (substituteEmail = 'parent_email') THEN
	    SET insertQuery = CONCAT(selectQuery, ", '", primaryEmailFieldId, "' AS emailField, 'parentemail' AS emailType, (SELECT `", primaryEmailFieldId, "` FROM master_system WHERE master_system.contact_id=lc.contact_id) AS email, lc.contact_id AS linkedContId", " ", fromQuery, parentEmailJoinQuery, " ", whereQuery, " AND (fg_cm_contact.id NOT IN (SELECT `contact_id` FROM `fg_cn_recepients_mandatory` WHERE `recepient_list_id`=",recipientListId,")) AND (((SELECT `", primaryEmailFieldId, "` FROM master_system WHERE master_system.contact_id=lc.contact_id) IS NOT NULL) AND ((SELECT `", primaryEmailFieldId, "` FROM master_system WHERE master_system.contact_id=lc.contact_id) != ''))");
	ELSE
	    SET insertQuery = CONCAT(selectQuery, ", '", substituteEmail, "' AS emailField, 'emailfield' AS emailType, `", substituteEmail, "` AS email, NULL AS linkedContId", " ", fromQuery, " ", whereQuery, " AND (fg_cm_contact.id NOT IN (SELECT `contact_id` FROM `fg_cn_recepients_mandatory` WHERE `recepient_list_id`=",recipientListId,")) AND ((`", substituteEmail, "` IS NOT NULL) AND (`", substituteEmail, "` != ''))");
	END IF;

	SET @execQuery = CONCAT("INSERT INTO `fg_cn_recepients_mandatory` (`contact_id`, `recepient_list_id`, `salutation`, `corres_lang`, `email_field_id`, `email_type`, `email`, `linked_contact_id`) ", insertQuery);

	PREPARE exec_qry FROM @execQuery;
        EXECUTE exec_qry;
        DEALLOCATE PREPARE exec_qry;

END IF;
-- Save filtered contacts having the selected substitute email if mail emails are not there - ends  --


-- Update recipient counts (contacts, mandatory, non-mandatory) - starts --

	-- Update contacts count -- 
	SET @execQuery = CONCAT("UPDATE `fg_cn_recepients` SET updated_at = NOW(), `contact_count` = (SELECT COUNT(DISTINCT fg_cm_contact.id) ", fromQuery, " ", whereQuery, ") WHERE `id` = ", recipientListId);
	PREPARE exec_qry FROM @execQuery;
        EXECUTE exec_qry;
        DEALLOCATE PREPARE exec_qry;

	-- Update mandatory count -- 
	UPDATE `fg_cn_recepients` SET `mandatory_count` = (SELECT COUNT(DISTINCT CONCAT(`email`, '#', `salutation`)) FROM `fg_cn_recepients_mandatory` WHERE `recepient_list_id`=recipientListId) WHERE `id` = recipientListId;

	-- Update non-mandatory count -- 
	SET @execQuery = CONCAT("UPDATE `fg_cn_recepients` SET `subscriber_count` = (SELECT COUNT(DISTINCT fg_cm_contact.id) ", fromQuery, " ", whereQuery, " AND ((`", primaryEmailFieldId, "` IS NOT NULL) AND (`", primaryEmailFieldId, "` != '')) AND (mc.is_subscriber = 1)) WHERE `id` = ", recipientListId);
	PREPARE exec_qry FROM @execQuery;
        EXECUTE exec_qry;
        DEALLOCATE PREPARE exec_qry;

-- Update recipient counts (contacts, mandatory, non-mandatory) - ends --

COMMIT;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `updateScheduledCaching` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `updateScheduledCaching`()
BEGIN
	
	DECLARE record_not_found1, record_not_found2, record_not_found3, record_not_found4, record_not_found5, record_id1, record_id2, record_id3, record_id4, record_id5, record_club_id1, record_club_id2, record_club_id3, record_club_id4 INTEGER DEFAULT 0;
	DECLARE record_start_date1, record_start_date2, record_start_date3, record_start_date4, record_start_date5, record_end_date1, record_end_date2, record_end_date3, record_end_date4, record_end_date5 DATETIME;	

    BLOCK1: BEGIN
	
	DECLARE field_cursor1 CURSOR FOR SELECT `id`,`club_id`,`start_date`,`expiry_date` FROM `fg_cms_news` WHERE `start_date`>CURDATE() OR `expiry_date`>CURDATE();

	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found1 = 1;
	
	SET autocommit = 0;
	OPEN field_cursor1;
	loop_field1: LOOP
	
		FETCH field_cursor1 INTO record_id1, record_club_id1, record_start_date1, record_end_date1;
		
		IF record_not_found1 THEN
			SET record_not_found1 = 0;
			LEAVE loop_field1;
		END IF;
		
		START TRANSACTION;	
			
			IF(record_start_date1 > '0000-00-00 00:00:00') THEN
			    INSERT INTO fg_cache (`tabletitle`,`club_id`,`updated_at`) VALUES ('newsDetails',record_club_id1,UNIX_TIMESTAMP(record_start_date1)), ('newsSliderDisplay',record_club_id1,UNIX_TIMESTAMP(record_start_date1));	
			END IF;
			IF(record_end_date1 > '0000-00-00 00:00:00') THEN
			    INSERT INTO fg_cache (`tabletitle`,`club_id`,`updated_at`) VALUES ('newsDetails',record_club_id1,UNIX_TIMESTAMP(record_end_date1)), ('newsSliderDisplay',record_club_id1,UNIX_TIMESTAMP(record_end_date1));
			END IF;
		COMMIT;
	END LOOP loop_field1;	
	CLOSE field_cursor1;
    END BLOCK1;

    BLOCK2: BEGIN
	
	DECLARE field_cursor2 CURSOR FOR SELECT `id`,`club_id`,`start_date`,`end_date` FROM `fg_em_calendar` WHERE `start_date`>CURDATE() OR `end_date`>CURDATE();

	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found2 = 1;
	
	SET autocommit = 0;
	OPEN field_cursor2;
	loop_field2: LOOP
	
		FETCH field_cursor2 INTO record_id2, record_club_id2, record_start_date2, record_end_date2;
		
		IF record_not_found2 THEN
			SET record_not_found2 = 0;
			LEAVE loop_field2;
		END IF;
		
		START TRANSACTION;	
			
			IF(record_start_date2 > '0000-00-00 00:00:00') THEN
			    INSERT INTO fg_cache (`tabletitle`,`club_id`,`updated_at`) VALUES ('calendarDisplay',record_club_id2,UNIX_TIMESTAMP(record_start_date2));
			END IF;
			IF(record_end_date2 > '0000-00-00 00:00:00') THEN
			    INSERT INTO fg_cache (`tabletitle`,`club_id`,`updated_at`) VALUES ('calendarDisplay',record_club_id2,UNIX_TIMESTAMP(record_end_date2));
			END IF;
		COMMIT;
	END LOOP loop_field2;	
	CLOSE field_cursor2;
    END BLOCK2;

    BLOCK3: BEGIN
	
	DECLARE field_cursor3 CURSOR FOR SELECT `id`,`club_id`,`scheduled_activation`,`scheduled_deactivation` FROM `fg_cms_link_details` WHERE `scheduled_activation`>CURDATE() OR `scheduled_deactivation`>CURDATE();

	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found3 = 1;
	
	SET autocommit = 0;
	OPEN field_cursor3;
	loop_field3: LOOP
	
		FETCH field_cursor3 INTO record_id3, record_club_id3, record_start_date3, record_end_date3;
		
		IF record_not_found3 THEN
			SET record_not_found3 = 0;
			LEAVE loop_field3;
		END IF;
		
		START TRANSACTION;	
			
			IF(record_start_date3 > '0000-00-00 00:00:00') THEN
			    INSERT INTO fg_cache (`tabletitle`,`club_id`,`updated_at`) VALUES ('navigation',record_club_id3,UNIX_TIMESTAMP(record_start_date3));
			END IF;
			IF(record_end_date3 > '0000-00-00 00:00:00') THEN
			    INSERT INTO fg_cache (`tabletitle`,`club_id`,`updated_at`) VALUES ('navigation',record_club_id3,UNIX_TIMESTAMP(record_end_date3));
			END IF;
		COMMIT;
	END LOOP loop_field3;	
	CLOSE field_cursor3;
    END BLOCK3;

    BLOCK4: BEGIN
	
	DECLARE field_cursor4 CURSOR FOR SELECT `id`,`club_id`,`begin_date`,`end_date` FROM `fg_sm_bookings` WHERE `begin_date`>CURDATE() OR `end_date`>CURDATE();

	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found4 = 1;
	
	SET autocommit = 0;
	OPEN field_cursor4;
	loop_field4: LOOP
	
		FETCH field_cursor4 INTO record_id4, record_club_id4, record_start_date4, record_end_date4;
		
		IF record_not_found4 THEN
			SET record_not_found4 = 0;
			LEAVE loop_field4;
		END IF;
		
		START TRANSACTION;	
			
			IF(record_start_date4 > '0000-00-00 00:00:00') THEN
			    INSERT INTO fg_cache (`tabletitle`,`club_id`,`updated_at`) VALUES ('sponserDisplay',record_club_id4,UNIX_TIMESTAMP(record_start_date4));
			END IF;
			IF(record_end_date4 > '0000-00-00 00:00:00') THEN
			    INSERT INTO fg_cache (`tabletitle`,`club_id`,`updated_at`) VALUES ('sponserDisplay',record_club_id4,UNIX_TIMESTAMP(record_end_date4));
			END IF;
		COMMIT;
	END LOOP loop_field4;	
	CLOSE field_cursor4;
    END BLOCK4;

    BLOCK5: BEGIN
	
	DECLARE field_cursor5 CURSOR FOR SELECT `id`,`scheduled_activation`,`scheduled_deactivation` FROM `fg_am_ads_duration` WHERE `scheduled_activation`>CURDATE() OR `scheduled_deactivation`>CURDATE();

	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found5 = 1;
	
	SET autocommit = 0;
	OPEN field_cursor5;
	loop_field5: LOOP
	
		FETCH field_cursor5 INTO record_id5, record_start_date5, record_end_date5;
		
		IF record_not_found5 THEN
			SET record_not_found5 = 0;
			LEAVE loop_field5;
		END IF;
		
		START TRANSACTION;	
			
			IF(record_start_date5 > '0000-00-00 00:00:00') THEN
			    INSERT INTO fg_cache (`tabletitle`,`club_id`,`updated_at`) VALUES ('promotion','1',UNIX_TIMESTAMP(record_start_date5));
			END IF;
			IF(record_end_date5 > '0000-00-00 00:00:00') THEN
			    INSERT INTO fg_cache (`tabletitle`,`club_id`,`updated_at`) VALUES ('promotion','1',UNIX_TIMESTAMP(record_end_date5));
			END IF;
		COMMIT;
	END LOOP loop_field5;	
	CLOSE field_cursor5;
    END BLOCK5;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `updateTableAttributesInFilter` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `updateTableAttributesInFilter`()
BEGIN
	
	DECLARE record_not_found, settings_id, fltr_id, fltr_contact_id, fltr_club_id INTEGER DEFAULT 0;
	DECLARE default_setting TEXT;	

	
	DECLARE field_cursor CURSOR FOR SELECT id,contact_id,club_id FROM fg_filter WHERE table_attributes IS NULL OR table_attributes = '';


	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;

	
	UPDATE fg_table_settings SET `type`= 'DATA' WHERE `type`='OTHER';
	
	
	SET autocommit = 0;
	OPEN field_cursor;
	loop_field: LOOP
	
		FETCH field_cursor INTO fltr_id,fltr_contact_id,fltr_club_id;
		
		IF record_not_found THEN
			SET record_not_found = 0;
			LEAVE loop_field;
		END IF;
		
		START TRANSACTION;
		
			
			SET settings_id = (SELECT id FROM fg_table_settings WHERE contact_id=fltr_contact_id AND club_id=fltr_club_id LIMIT 0,1);

			IF settings_id IS NULL THEN

				
				SET default_setting = (SELECT `value` FROM fg_settings WHERE name = 'DEFAULT_TABLE_SETTING');

				
				INSERT INTO fg_table_settings (`attributes`,`rows`,`contact_id`,`is_temp`,`type`,`club_id`) VALUES  (default_setting,'20',fltr_contact_id,'1','DATA',fltr_club_id);

				SELECT LAST_INSERT_ID() INTO settings_id;

			END IF;
			
			
			UPDATE fg_filter SET table_attributes=settings_id WHERE id=fltr_id;

	
		COMMIT;
	END LOOP loop_field;	
	CLOSE field_cursor;
		
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `updateTESTView` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `updateTESTView`( IN clubId INTEGER)
BEGIN
	DECLARE cc_attribute_id, record_not_found INTEGER DEFAULT 0; 
	DECLARE cc_fieldtype TEXT DEFAULT "";
	DECLARE club_attribute_cursor CURSOR FOR SELECT ca.attribute_id, a.fieldtype FROM fg_cm_club_attribute AS ca LEFT JOIN fg_cm_attribute AS a ON ca.attribute_id = a.id WHERE ca.club_id = clubId;	
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;

	START TRANSACTION;
		SET @k = CONCAT('DROP VIEW IF EXISTS `View',clubId, '`');
		PREPARE stmt1 FROM @k;
		EXECUTE stmt1;	

		SET @s = CONCAT('CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `View',clubId, '` AS select `fg_cm_contact`.`id` AS `contact_id`,');
	
		OPEN club_attribute_cursor;
			loop_attribute: LOOP
				FETCH club_attribute_cursor INTO cc_attribute_id, cc_fieldtype;
					IF record_not_found THEN
						SET record_not_found = 0;
						LEAVE loop_attribute;
					END IF;
					CASE cc_fieldtype
						WHEN 'int' THEN
							BEGIN
								SET @s = CONCAT(@s, '(select `fg_cm_attribute_value_int`.`value` AS `value` from `fg_cm_attribute_value_int` where ((`fg_cm_attribute_value_int`.`contact_id` = `fg_cm_contact`.`id`) and (`fg_cm_attribute_value_text`.`attribute_id` = ',cc_attribute_id, '))) AS `',cc_attribute_id,'`,');
							END;
						WHEN 'date' THEN
							BEGIN
								SET @s = CONCAT(@s, '(select `fg_cm_attribute_value_date`.`value` AS `value` from `fg_cm_attribute_value_date` where ((`fg_cm_attribute_value_date`.`contact_id` = `fg_cm_contact`.`id`) and (`fg_cm_attribute_value_date`.`attribute_id` = ',cc_attribute_id, '))) AS `',cc_attribute_id,'`,');
							END;
						WHEN 'text' THEN
							BEGIN
								SET @s = CONCAT(@s, '(select `fg_cm_attribute_value_text`.`value` AS `value` from `fg_cm_attribute_value_text` where ((`fg_cm_attribute_value_text`.`contact_id` = `fg_cm_contact`.`id`) and (`fg_cm_attribute_value_text`.`attribute_id` = ',cc_attribute_id, '))) AS `',cc_attribute_id,'`,');
							END;
					END CASE;			
			END LOOP loop_attribute;	
		CLOSE club_attribute_cursor;
	SET @s = CONCAT(@s, '`fg_cm_contact`.`is_member` AS `is_member`,`fg_cm_contact`.`is_company` AS `is_company`,`fg_cm_contact`.`comp_def_contact` AS `comp_def_contact`,`fg_cm_contact`.`comp_def_contact_fun` AS `comp_def_contact_fun`,`fg_cm_contact`.`is_sponsor` AS `is_sponsor`,`fg_cm_contact`.`is_household_head` AS `is_household_head`,`fg_cm_contact`.`is_draft` AS `is_draft`,`fg_cm_contact`.`is_newsletter_subscriber` AS `is_newsletter_subscriber`,`fg_cm_contact`.`is_deleted` AS `is_deleted`,`fg_cm_contact`.`is_permanent_delete` AS `is_permanent_delete`,`fg_cm_contact`.`is_seperate_invoice` AS `is_seperate_invoice`,`fg_cm_contact`.`last_updated` AS `last_updated`,`fg_cm_contact`.`member_id` AS `member_id`,`fg_cm_contact`.`dispatch_type_invoice` AS `dispatch_type_invoice`, `fg_cm_contact`.`dispatch_type_dun` AS `dispatch_type_dun`,(select `sf_guard_user`.`last_login` AS `last_login` from `sf_guard_user` where (`sf_guard_user`.`contact_id` = `fg_cm_contact`.`id`)) AS `last_login`, getSalutationOfContact(`fg_cm_contact`.`id`,`fg_cm_contact`.`club_id`)  AS `salutation`
	from `fg_cm_contact` where ((`fg_cm_contact`.`club_id` = ',clubId ,') and (`fg_cm_contact`.`is_permanent_delete` = 0))');
	PREPARE stmt FROM @s;
	EXECUTE stmt;		
	COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `updateTransDesc` */;
ALTER DATABASE `fairgate_v4` CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`admin`@`localhost` PROCEDURE `updateTransDesc`()
BEGIN
    DECLARE transdesc_id INTEGER DEFAULT 0;
    DECLARE club_language, cancelling_text, writeoffinvoice_text TEXT DEFAULT "";

    DECLARE desc_cursor CURSOR FOR
    SELECT fitd.`id`, fc.`backend_lang` FROM `fg_im_transaction_description` AS fitd 
    INNER JOIN fg_club AS fc ON fitd.`club_id` = fc.`id` ORDER BY fitd.`id`;

    DECLARE EXIT HANDLER FOR NOT FOUND
    BEGIN

        ROLLBACK;

        SELECT "SUCCESS";

    END;

    DECLARE EXIT HANDLER FOR SQLEXCEPTION, SQLWARNING
    BEGIN
        ROLLBACK;

        SELECT "ERROR";
    END;

    OPEN desc_cursor;
        desc_loop: LOOP
            START TRANSACTION;
                FETCH desc_cursor INTO transdesc_id, club_language;
                IF club_language = 'de' THEN
                    SET cancelling_text = 'Artikelstornierungen ({{{#}}})';
                    SET writeoffinvoice_text = 'Abschreibungen ({{{#}}})';
                ELSE
                    SET cancelling_text = 'Item cancellings ({{{#}}})';
                    SET writeoffinvoice_text = 'Write-off open invoice amounts ({{{#}}})';
                END IF;
                UPDATE  `fg_im_transaction_description` SET  `item_cancelling` =  cancelling_text,
                `writeoffinvoice_amount` =  writeoffinvoice_text  WHERE `fg_im_transaction_description`.`id` = transdesc_id;
            COMMIT;
        END LOOP desc_loop;
    CLOSE desc_cursor;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
ALTER DATABASE `fairgate_v4` CHARACTER SET utf8 COLLATE utf8_general_ci ;
/*!50003 DROP PROCEDURE IF EXISTS `V4createClub` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`fairgate`@`localhost` PROCEDURE `V4createClub`(IN parentClubId INTEGER, IN federationId INTEGER, IN urlIdentifier TEXT, IN clubTitle TEXT, IN clubType TEXT, IN website TEXT)
BEGIN
	DECLARE clubId VARCHAR(255) DEFAULT "";
	DECLARE record_not_found INTEGER DEFAULT 0;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;
	SET autocommit=0;
	START TRANSACTION;
	-- insert correspondance address -- 
/*
	INSERT INTO `fg_club_address` (`company`, `street`, `pobox`, `city`, `zipcode`, `state`, `country`, `language`, `created_at`, `updated_at`, `co`) VALUES
(clubTitle, CONCAT(clubTitle,' Bürglistrasse 31'), '00000', 'Winterthur', '121212', 'Zürich', 'switzerland', 'de', '2014-03-07 16:30:36', '2014-03-07 16:30:36', NULL);
*/
	INSERT INTO `fg_club_address` (`company`, `street`, `pobox`, `city`, `zipcode`, `state`, `country`, `language`, `created_at`, `updated_at`, `co`) VALUES
(clubTitle, '', '', '', '', '', '', 'de', '', '', NULL);

	SELECT LAST_INSERT_ID() INTO @corresAddressId;

	-- insert billing address -- 
	/* INSERT INTO `fg_club_address` (`company`, `street`, `pobox`, `city`, `zipcode`, `state`, `country`, `language`, `created_at`, `updated_at`, `co`) VALUES
--(clubTitle, CONCAT(clubTitle,' Bürglistrasse 31'), '000001', 'Winterthur', '121212', 'Zürich', 'switzerland', 'de', '2014-03-07 16:30:36', '2014-03-07 16:30:36', NULL);
	-- SELECT LAST_INSERT_ID() INTO @invoiceAddressId;
        */

	-- insert club -- 
	INSERT INTO fg_club 
			SET id = '', 
			parent_club_id = parentClubId,
                        federation_id = federationId,
			is_federation = IF(clubType ='federation', 1, 0),
			is_sub_federation = IF(clubType ='sub_federation', 1, 0),
			club_type = clubType,
			subfed_level = IF(clubType ='sub_federation', 1, 0),
			title = clubTitle,
			url_identifier = urlIdentifier,
                        website = website,
			`year` = '',
			correspondence_id = @corresAddressId,
			billing_id = @corresAddressId,
			`is_active` =1,
			responsible_contact_id =1,
			first_contact_type_id =1,
			assignment_country =1,
			assignment_state=2,
			assignment_activity=4,
			assignment_subactivity=8,
			backend_lang = 'de',
			created_at =NOW();
		SELECT LAST_INSERT_ID() INTO @clubId;
		-- insert club languages-- 
		INSERT INTO `fg_club_languages` ( `club_id`, `short_name`, `system_language_code`, `is_default`, `is_active`) VALUES ( @clubId, 'de', 'de', 1, 1);
		-- insert system contacts fields-- 
		INSERT INTO `fg_cm_club_attribute` (`attribute_id`, `club_id`, privacy_contact, is_confirm_contact, sort_order, is_required_type, profile_status) SELECT `attribute_id`, @clubId, privacy_contact, is_confirm_contact, sort_order, is_required_type, profile_status  FROM fg_cm_club_attribute WHERE club_id = 1;
                IF (clubType ='sub_federation' OR clubType ='federation_club' OR clubType ='sub_federation_club') THEN
                    INSERT INTO `fg_cm_club_attribute` (`attribute_id`, `club_id`) SELECT id, @clubId FROM fg_cm_attribute WHERE club_id = federationId;
                END IF;
                IF (clubType ='sub_federation_club') THEN
                    INSERT INTO `fg_cm_club_attribute` (`attribute_id`, `club_id`) SELECT id, @clubId FROM fg_cm_attribute WHERE club_id = parentClubId;
                END IF;

		-- insert team workgroup category-- 
		INSERT INTO `fg_rm_category` (`club_id`, `title`, `contact_assign`, `role_assign`, `function_assign`, `is_active`, `is_team`, `is_workgroup`, `sort_order`, `is_allowed_fedmember_subfed`, `is_allowed_fedmember_club`, `is_required_fedmember_subfed`, `is_required_fedmember_club`, `is_fed_category`) SELECT @clubId, `title`, `contact_assign`, `role_assign`, `function_assign`, `is_active`, `is_team`, `is_workgroup`, `sort_order`, `is_allowed_fedmember_subfed`, `is_allowed_fedmember_club`, `is_required_fedmember_subfed`, `is_required_fedmember_club`, `is_fed_category` FROM `fg_rm_category` WHERE club_id = 1;
		-- insert team workgroup category i18n entries-- 
		INSERT INTO `fg_rm_category_i18n` (`id`,`title_lang`,`lang`,`is_active`) SELECT rc.`id`, rc.`title`, cl.`short_name`, 1 FROM `fg_club_languages` AS cl LEFT JOIN fg_rm_category AS rc ON cl.club_id = rc.club_id WHERE cl.club_id =  @clubId;
		-- insert executive board into workgroup category --
		INSERT INTO `fg_rm_role` (`category_id`, `title`, `is_executive_board`, `sort_order`, `club_id`, `description`, `type`) SELECT id, 'Executive Board', 1, 1, @clubId, 'Executive Board', 'W' FROM `fg_rm_category` WHERE club_id = @clubId AND is_workgroup=1;
		SELECT LAST_INSERT_ID() INTO @executiveBrdId;
		-- insert executive board i18n entries--
		INSERT INTO `fg_rm_role_i18n` (`id`,`title_lang`, `description_lang`, `lang`,`is_active`) SELECT rmr.`id`, rmr.`title`, rmr.`description`, cl.`short_name`, 1 FROM `fg_club_languages` AS cl LEFT JOIN fg_rm_role AS rmr ON cl.club_id = rmr.club_id WHERE cl.club_id =  @clubId;
		IF(clubType ='federation' OR clubType ='standard_club') THEN
			-- insert executive board function entries--
			
			INSERT INTO `fg_rm_function` (`category_id`, `title`, `sort_order`, is_federation) SELECT id, 'Präsident', 1, 0 FROM `fg_rm_category` WHERE club_id = @clubId AND is_workgroup=1;
			SELECT LAST_INSERT_ID() INTO @executiveBrdFunId;
			-- insert executive board function  entries--
			INSERT INTO fg_rm_role_function (role_id, function_id) VALUES(@executiveBrdId, @executiveBrdFunId);
			
			IF(clubType ='federation') THEN
				-- insert club executive board function entries--
				INSERT INTO `fg_rm_function` (`category_id`, `title`, `sort_order`, is_federation) SELECT id, 'Präsident', 1, 1 FROM `fg_rm_category` WHERE club_id = @clubId AND is_workgroup=1;
				SELECT LAST_INSERT_ID() INTO @executiveBrdFunId;
				-- insert executive board function  entries--
				INSERT INTO fg_rm_role_function (role_id, function_id) VALUES(@executiveBrdId, @executiveBrdFunId);			
			END IF;
			-- insert executive board function i18n entries--
			INSERT INTO `fg_rm_function_i18n` (`id`,`title_lang`,`lang`) SELECT rf.`id`, rf.`title`, cl.`short_name` FROM `fg_club_languages` AS cl LEFT JOIN fg_rm_category AS rc ON cl.club_id = rc.club_id INNER JOIN fg_rm_function AS rf ON rc.id = rf.category_id WHERE cl.club_id = @clubId AND rc.is_workgroup=1;
			
		END IF;

                -- Default Recipient List --
                INSERT INTO `fg_cn_recepients` (`name`, `club_id`, `updated_at`, `filter_data`, `is_all_active`, `sort_order`) VALUES ('All Contacts', @clubId, NOW(), '', '1', '1');
                INSERT INTO `fg_cn_recepients_email`(recepient_list_id, email_type, email_field_id) SELECT LAST_INSERT_ID(), 'contact_field', '3';
		-- insert default membership --
		INSERT INTO `fg_cm_membership` (`club_id`, `title`, `sort_order`) VALUES (@clubId, 'Vereinsmitglied', 1);
		-- insert default membership i18n entries --
		INSERT INTO `fg_cm_membership_i18n` (`id`,`title_lang`, `lang`) SELECT cm.`id`, cm.`title`, cl.`short_name` FROM `fg_club_languages` AS cl LEFT JOIN fg_cm_membership AS cm ON cl.club_id = cm.club_id WHERE cl.club_id =  @clubId;
		-- insert default ads area --
		INSERT INTO `fg_sm_ad_area` (`club_id`, `title`, `is_system`) VALUES (@clubId, 'General', 1);
                -- Currency and fical year setting
                INSERT INTO `fg_club_settings` (`club_id`, `fiscal_year`, `currency`) VALUES(@clubId, '2015-01-01', 'AFA');
		-- create master table for the new club--
		IF(clubType ='federation' OR clubType ='sub_federation') THEN
			SET @query1 = CONCAT('CREATE TABLE `master_federation_',@clubId, '`(`club_id` int(11), `is_fed_member` tinyint(1), `contact_id` int(11), `is_sponsor` tinyint(1) NOT NULL DEFAULT 0, `is_subscriber` tinyint(1) NOT NULL DEFAULT 0, `is_household_head` tinyint(1) default 0, is_seperate_invoice tinyint(1) default 0, is_postal_address tinyint(1) default 0, PRIMARY KEY (`contact_id`, `club_id`)) ENGINE = InnoDB DEFAULT  CHARACTER SET utf8 COLLATE utf8_general_ci');
			SET @alterquery = CONCAT('ALTER TABLE `master_federation_',@clubId,'` ADD FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact`(`id`) ON DELETE CASCADE ON UPDATE NO ACTION, ADD FOREIGN KEY (`club_id`) REFERENCES `fg_club`(`id`) ON DELETE CASCADE ON UPDATE NO ACTION');
		ELSE
			SET @query1 = CONCAT('CREATE TABLE `master_club_',@clubId, '`(`contact_id` int(11), `is_sponsor` tinyint(1) NOT NULL DEFAULT 0, `is_subscriber` tinyint(1) NOT NULL DEFAULT 0,`is_household_head` tinyint(1) default 0, is_seperate_invoice tinyint(1) default 0, is_postal_address tinyint(1) default 0,PRIMARY KEY (`contact_id`)) ENGINE = InnoDB DEFAULT  CHARACTER SET utf8 COLLATE utf8_general_ci ');
			SET @alterquery =CONCAT('ALTER TABLE `master_club_',@clubId,'` ADD FOREIGN KEY (`contact_id`) REFERENCES `fg_cm_contact`(`id`) ON DELETE CASCADE ON UPDATE NO ACTION');
		END IF;	
		PREPARE stmt FROM @query1;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;

		PREPARE stmt FROM @alterquery;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
	COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `V4deleteClub` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`fairgate`@`localhost` PROCEDURE `V4deleteClub`(IN clubId INTEGER)
BEGIN	
        DECLARE masterTableName, clubType VARCHAR(255) DEFAULT "";
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		ROLLBACK;
	END;
	SET autocommit=0;
	START TRANSACTION;
        SELECT club_type INTO clubType FROM fg_club WHERE id = clubId;
	DELETE FROM fg_club WHERE id = clubId;

	IF(clubType = 'federation' OR clubType ='sub_federation') THEN
            SET masterTableName = CONCAT('master_federation_', clubId);
	ELSE
            SET masterTableName = CONCAT('master_club_', clubId);
	END IF;

        SET @dynamicSQL=CONCAT('DROP TABLE ', ' ', masterTableName);
        PREPARE exec_qry FROM @dynamicSQL;
        EXECUTE exec_qry ;
        DEALLOCATE PREPARE exec_qry;
	COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `V4MasterTableChangeFieldTemp` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
CREATE DEFINER=`fairgate`@`localhost` PROCEDURE `V4MasterTableChangeFieldTemp`()
BEGIN
	DECLARE clubId, clubType, clubTitle, urlIdentifier, website VARCHAR(255) DEFAULT "";
	DECLARE tableClubId, parentClubId, federationId INTEGER DEFAULT 0;
	DECLARE record_not_found INTEGER DEFAULT 0;
    DECLARE clubidCursor CURSOR FOR 
    SELECT `id`, `parent_club_id`, `federation_id`, `club_type` FROM `fg_club` WHERE is_sbo = 0 AND id <> 1 ORDER BY `id` ASC LIMIT 0, 10;
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET record_not_found = 1;    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
            ROLLBACK;
    END;
	SET autocommit=0;
	START TRANSACTION;
	
	OPEN clubidCursor;
            contactIdLoop: LOOP
                FETCH clubidCursor INTO tableClubId, parentClubId, federationId, clubType;
                IF record_not_found THEN
                        SET record_not_found = 0;
                        LEAVE contactIdLoop;
                END IF;				

				-- create master table for the new club--
				IF(clubType ='federation' OR clubType ='sub_federation') THEN
					-- SET @query1 = CONCAT('CREATE TABLE `master_federation_',@clubId, '`(`club_id` int(11), `is_fed_member` tinyint(1), `contact_id` int(11),`is_household_head` tinyint(1) default 0, is_seperate_invoice tinyint(1) default 0, is_postal_address tinyint(1) default 0, PRIMARY KEY (`contact_id`, `club_id`)) ENGINE = InnoDB DEFAULT  CHARACTER SET utf8 COLLATE utf8_general_ci');
					-- SET @alterquery = CONCAT('ALTER TABLE `master_federation_',tableClubId,"` ADD `is_subscriber` TINYINT(1) NOT NULL DEFAULT '0'  AFTER `contact_id`");
					SET @alterquery = CONCAT('ALTER TABLE `master_federation_',tableClubId,"` ADD `is_sponsor` TINYINT(1) NOT NULL DEFAULT '0'  AFTER `contact_id`");
				ELSE
					-- SET @query1 = CONCAT('CREATE TABLE `master_club_',@clubId, '`(`contact_id` int(11),`is_household_head` tinyint(1) default 0, is_seperate_invoice tinyint(1) default 0, is_postal_address tinyint(1) default 0,PRIMARY KEY (`contact_id`)) ENGINE = InnoDB DEFAULT  CHARACTER SET utf8 COLLATE utf8_general_ci ');
					-- SET @alterquery =CONCAT('ALTER TABLE `master_club_',tableClubId,"` ADD `is_subscriber` TINYINT(1) NOT NULL DEFAULT '0'  AFTER `contact_id`");
					SET @alterquery = CONCAT('ALTER TABLE `master_club_',tableClubId,"` ADD `is_sponsor` TINYINT(1) NOT NULL DEFAULT '0'  AFTER `contact_id`");
				END IF;	
				-- PREPARE stmt FROM @query1;
				-- EXECUTE stmt;
				-- DEALLOCATE PREPARE stmt;
				UPDATE `fg_club` SET is_sbo=1 WHERE id = tableClubId;

				PREPARE stmt FROM @alterquery;
				EXECUTE stmt;
				DEALLOCATE PREPARE stmt;
			END LOOP contactIdLoop;	
        CLOSE clubidCursor;		
	COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2015-07-16  9:54:35
