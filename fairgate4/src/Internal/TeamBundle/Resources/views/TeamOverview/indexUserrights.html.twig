{# src/Blogger/BlogBundle/Resources/views/Page/index.html.twig #}
{% extends app.request.xmlHttpRequest ? '::ajax-layout.html.twig' : '::internal/layout.html.twig' %}
{% set pageTitle = 'USER_RIGHTS_PAGE_TITLE'|trans %}
{% block pagecontent %}
    <!-- BEGIN CONTENT -->
    <!-- BEGIN PAGE HEADER-->
    <div class="row">
        <div class="col-md-12">
            <!-- BEGIN PAGE TITLE & BREADCRUMB-->
            <!-- BREADCRUMB STARTS -->
            {% include 'internal/breadcrumb.html.twig' with breadCrumb %}
            <!-- BREADCRUMB ENDS -->
            <div class="row">
                <div class="col-md-12">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="portlet-body fg-theme-blue">
                                <div class="col-md-4 fg-left-zero fg-page-title-nav">
                                    <div class="btn-group pull-left fg-full-width fg-internal-title">
                                        <h3 class="page-title fg-page-title">{{'USER_RIGHTS_PAGE_TITLE'|trans}} {{'FOR'|trans({'%rolename%':teamName})}}</h3>
                                    </div>
                                </div>              
                                <div class="clearfix"></div>
                                <form id="userRightsForm" onsubmit="return false;" class="form-horizontal"> 
                                    <div id="failcallbackServerSide" class="alert alert-danger" style="display:none;">
                                        <button class="close" data-close="alert"></button>
                                        <span>{{'FORM_ERROR_DISPLAY'|trans}}</span>
                                    </div>
                                    <div id="fg-dev-user-rights-div" style="display:none;"></div> 
                                    {% include 'internal/savebutton.html.twig' with {'backLink':backLink} %}
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
{% endblock %}
{% block underscoretemplate %} 
     {% include 'InternalTeamBundle:TeamOverview:templateUserrightsExisting.html.twig' %}
     {% include 'InternalTeamBundle:TeamOverview:new-userrights.html.twig' %}        
{% endblock %}
{% block javascripts %}
    <script src="{{ asset('fgcustom/js/page/fg_userrights.js') }}" type="text/javascript"></script>  
    <script>
            var type = '{{type}}';
            var exclude= JSON.stringify({{exclude|raw}});
            exclude = JSON.parse(exclude);
            var loggedContactId={{loggedContactId}};
            var groupAdmin = JSON.stringify({{groupAdmin|raw}});
            var dropDownList = JSON.stringify({{dropdown|raw}});
            var admins = JSON.stringify({{admins|raw}});
            admins = JSON.parse(admins);
            var clubAdmins = JSON.stringify({{clubAdmins|raw}});
            clubAdmins = JSON.parse(clubAdmins);
            var fedAdmins = JSON.stringify({{fedAdmins|raw}});
            fedAdmins = JSON.parse(fedAdmins);
            var roleId ='{{roleId}}';
            groupAdmin = JSON.parse(groupAdmin);
            dropDownList = JSON.parse(dropDownList);
            var roleList = _(dropDownList).filter(function(list){ return (list['type']==type);});
            var isClubOrSuperAdminOrFedAdmin = JSON.parse(JSON.stringify({{isClubOrSuperAdminOrFedAdmin|raw}}));
            var isTeamMember = JSON.parse(JSON.stringify({{isTeamMember|raw}}));
            var communityPath = '{{path('internal_community_profile',{'contactId': 'dummyContactId'})}}'; // Overview link
            var newExcludeRoleAdmins = new Array();
            var newExcludeRoleSectionAdmins = new Array();
            
        $(document).ready(function() {
            if(type == 'T'){
                if(exclude.existingUserDetails != null && exclude.existingUserDetails.length != 0) {
                    newExcludeRoleAdmins = exclude.existingUserDetails; // Assigning current details to auto complete array to exclude the same contacts from auto complete
                }
                if(exclude.existingSectionUser != null && exclude.existingSectionUser.length != 0) {
                    newExcludeRoleSectionAdmins = exclude.existingSectionUser; // Assigning current details to auto complete array to exclude the same contacts from auto complete
                } 
            }else{
                if(exclude.existingWGUserDetails != null && exclude.existingWGUserDetails.length != 0) {
                    newExcludeRoleAdmins = exclude.existingWGUserDetails; // Assigning current details to auto complete array to exclude the same contacts from auto complete
                }
                if(exclude.existingWGSectionUser != null && exclude.existingWGSectionUser.length != 0) {
                    newExcludeRoleSectionAdmins = exclude.existingWGSectionUser; // Assigning current details to auto complete array to exclude the same contacts from auto complete
                }  
            }
            initPageFunctions();
           // pageLoadFn();
            FgFormTools.changeColorOnDelete();
             // Global variable for user rights which need to be passed to js
                var options = {
                    newExclude                  : newExcludeRoleAdmins,
                    newExcludeRoleSectionAdmins : newExcludeRoleSectionAdmins,
                    contactNameUrl              : "{{contactNameUrl}}",
                    saveUrl                     : "{{path('save_role_user_rights')}}",
                    saveFlag                    : 0,
                    roleList                    : roleList,
                    admins                      : admins,
                    type                        : type,
                    roleId                     :  roleId
                };
            FgUserRights.initInternalRole(options); // Initing all the underlying functionalities of user rights including create and delete
        });
   
     function initPageFunctions(){
        FgInternal.breadcrumb(FgInternal.extraBreadcrumbTitle);
        var result_data = FGTemplate.bind('fg-dev-internal-team-userrights', {isTeamMember:isTeamMember,isClubOrSuperAdminOrFedAdmin:isClubOrSuperAdminOrFedAdmin,clubAdmins:clubAdmins,fedAdmins:fedAdmins,roleId:roleId,type:type,groupAdmin:groupAdmin,communityPath:communityPath,loggedContactId: loggedContactId,roleList:roleList,admins:admins});
        $('#fg-dev-user-rights-div').html(result_data); // Displaying user rights from underscore
        $('select.selectpicker').selectpicker('render');
        $('#fg-dev-user-rights-div').show();
        pageInit(); 
        FgFormTools.handleUniform();
        ComponentsDropdowns.init();
    }    
       // Page init
    function pageInit() {
        FgDirtyFields.init('userRightsForm', {
                dirtyFieldSettings :{
                    {#dirtyFormClass : "isDirty"#}
                }, 
                    enableDragDrop : false, 
                    enableUpdateSortOrder : false, 
                    enableDiscardChanges : false
               
            });
    }
   
</script>
<script src="{{ asset('fgassets/global/js/tokenfield/js/bootstrap-tokenfield.js') }}" type="text/javascript"></script>
<script src="{{asset('fgassets/assets/global/plugins/typeahead/typeahead.bundle.js')}}" type="text/javascript"></script>
{% endblock %} 
{% block customstylesheets %}
    <link href="{{ asset('fgassets/global/js/tokenfield/css/bootstrap-tokenfield.css')}}" rel="stylesheet" type="text/css"/> 
    <link href="{{ asset('assets/global/plugins/typeahead/typeahead.css') }}" type="text/css" rel="stylesheet" />
{% endblock %}
