<div class="modal-header fg-modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
    <h4 class="modal-title">{{titleText}}</h4>
</div>
<div class="modal-body fg-modal-text">
    <div class="row">
        <div class="col-md-12">
            <div class="portlet-body form">
                <!-- BEGIN FORM-->
                <form action="#" class="form-horizontal form-row-sepe" id="archivecontacts">
                    <div class="form-body">
                        
                        <div id="block_0" class="fg-dev-archive-content">
                            <p class="fg-dev-archive-status-txt">{{deleteDesc}}</p>
                        </div>

                    </div>
                    
                </form>
                <!-- END FORM-->
            </div>
        </div>
    </div>
</div>
 {% include 'clubadmin/savebuttonpopup.html.twig' with {'save_button_val':'DC_DELETE_BUTTON'|trans} %}

<script type="text/javascript">
    var clubId = '{{clubId}}';
    var clubType = '{{clubType}}';
    var actionType = '{{actionType}}';
    var selActionType = '{{selActionType}}';
    var selContIds = [];
    var docIds = '{{docIds}}';
    if (selActionType == 'selected') {
        $("input.dataClass:checked").each(function() {
           var contactId = $(this).attr('id');
           if ($.inArray(contactId, selContIds) == -1) {
               selContIds.push(contactId);
            }
        });
    }
    $(document).off('click', 'button[data-function=save], button[data-function=cancel]');
    $(document).on('click', 'button[data-function=save], button[data-function=cancel]', function() {
        var buttonId = this.id;
        if (buttonId == 'save') {
            deleteDocumentFun();
        }
    });
    function deleteDocumentFun() {
        var  selectedId = ''; 
        if (actionType == 'documentdelete') {
            selectedId =  JSON.stringify(docIds);
        } else if (actionType == 'documentVersionDelete'){
            selectedId = JSON.stringify(selContIds);
        } else if (actionType == 'documentOldVersionDelete') {
            selectedId = docIds;
        }
        if (actionType == 'documentOldVersionDelete') {
            $('#popup').modal('hide');
            var passingData = {'documentId': selectedId};
            FgXmlHttp.post('{{path("document_old_versions_delete")}}', passingData, false, callBackFn);
        } else {
            $('#popup').modal('hide');
            var passingData = {'selectedId':selectedId,'actionType': actionType};
            FgXmlHttp.post('{{path("document_settings_delete")}}', passingData, false, callBackFn);
        }
    }
    function callBackFn(resultParms) {
        if (actionType == 'documentdelete') {
            if (!$.isEmptyObject(documentTable)) {
                FgCountUpdate.update('remove', 'document', resultParms.type.toLowerCase(),resultParms.countdata,resultParms.count);
              
               documentTable.api().draw();
            } else {
                FgTable.init();
            }
        } else if ((actionType == 'documentVersionDelete') || (actionType == 'documentOldVersionDelete')) {
            FgVersionList.versionTable.ajax.reload();
        }
    }
</script>
