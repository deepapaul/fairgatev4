<?php

/** 
 * FgCnNewsletterTemplateSponsorRepository
 * 
 * This Repository is used for handling functions for Newsletter template sponsor content 
 * 
 * @package    CommonUtilityBundle 
 * @subpackage Repository 
 * @author     pitsolutions.ch 
 * @version    Fairgate V4 
 * 
 */

namespace Common\UtilityBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Common\UtilityBundle\Entity\FgCnNewsletterTemplateSponsor;

/**
 * FgCnNewsletterTemplateSponsorRepository
 *
 * This class was generated by the Doctrine ORM for handling functions for Newsletter template sponsor content 
 */
class FgCnNewsletterTemplateSponsorRepository extends EntityRepository {
    
    /**
     * Method to handle(delete/ insert/ update) newsletter template sponsor content 
     * 
     * @param object $templateObj         template Object
     * @param array  $sponsorContentArray sponsor-content array to update
     * 
     * @return boolean
     */
    public function updateTemplateSponsor($templateObj, $sponsorContentArray) {
        foreach($sponsorContentArray as $sponsorId => $sponsorContent) {
            //delete
            if(isset($sponsorContent['isDelete'])) {
                $this->deleteTemplateSponsor($sponsorId); 
                continue;
            }           
            $sponsorObj = $this->find($sponsorId);
            if($sponsorObj) { //update
                $this->editTemplateSponsor($sponsorObj, $sponsorContent); 
            } else { //insert
                $this->insertTemplateSponsor($templateObj, $sponsorContent); 
            }            
        }
        
        return true;
    }
    
    /**
     * Method to delete sponsor content of a particulat template
     * 
     * @param int $templateSponsorId
     */
    private function deleteTemplateSponsor($templateSponsorId) {
        $qb = $this->createQueryBuilder('TS')
                    ->delete()
                    ->where('TS.id=:sponsorId')
                    ->setParameter('sponsorId', $templateSponsorId);
        $qb->getQuery()->execute();        
    }
    
    /**
     * Method to insert sponsor content of a template
     * 
     * @param object $templateObj         template Object
     * @param array  $sponsorContent sponsor-content array to update
     */
    private function insertTemplateSponsor($templateObj, $sponsorContent) {                   
        $templateSponsorObj = new FgCnNewsletterTemplateSponsor();          
        $templateSponsorObj->setTemplate($templateObj)
                ->setTitle($sponsorContent['title'])
                ->setSortOrder($sponsorContent['sort_order'])
                ->setPosition($sponsorContent['position'])                
                ->setSponsorAdWidth($sponsorContent['width'])                    
               ;
        if(isset($sponsorContent['adarea'])) {
            $adAreaObj = $this->_em->getRepository('CommonUtilityBundle:FgSmAdArea')->find($sponsorContent['adarea']);
            $templateSponsorObj->setSponsorAdArea($adAreaObj);
        }
        $this->_em->persist($templateSponsorObj);
        $this->_em->flush();
        //insert sponsor services
        $this->_em->getRepository('CommonUtilityBundle:FgCnNewsletterTemplateServices')->insertSponsorServices($templateSponsorObj, $sponsorContent['services']);                                 
    } 
    
    /**
     * Method to edit sponsor content of a template
     * 
     * @param object $sponsorObj     template Object
     * @param array  $sponsorContent sponsor-content array to update
     */
    private function editTemplateSponsor($sponsorObj, $sponsorContent) {    
        if(isset($sponsorContent['adarea'])) {
            $adAreaObj = $this->_em->getRepository('CommonUtilityBundle:FgSmAdArea')->find($sponsorContent['adarea']);
            $sponsorObj->setSponsorAdArea($adAreaObj);
        }        
        if(array_key_exists('title', $sponsorContent)) { 
            $sponsorObj->setTitle($sponsorContent['title']);
        }
        if(isset($sponsorContent['sort_order'])) {
            $sponsorObj->setSortOrder($sponsorContent['sort_order']);
        }
        if(isset($sponsorContent['position'])) {
            $sponsorObj->setPosition($sponsorContent['position']);
        }
        if(isset($sponsorContent['width'])) {
            $sponsorObj->setSponsorAdWidth($sponsorContent['width']);
        }             
        $this->_em->flush();
        //update sponsor services
        if(isset($sponsorContent['services'])) {
            $this->_em->getRepository('CommonUtilityBundle:FgCnNewsletterTemplateServices')->updateSponsorServices($sponsorObj, $sponsorContent['services']);
        }                                         
    } 
    
}
    