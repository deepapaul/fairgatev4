<?php

/**
 * FgCmsPortraitContainerRepository.
 *
 * @package 	WebsiteCMSBundle
 * @subpackage 	Repository
 * @author     	pitsolutions.ch
 * @version    	Fairgate V4
 *
 */
namespace Common\UtilityBundle\Repository\Cms;

use Doctrine\ORM\EntityRepository;
use Common\UtilityBundle\Entity\FgCmsPortraitContainer;

/**
 * FgCmsPortraitContainerRepository
 *
 * This class was generated by the Doctrine ORM. 
 */
class FgCmsPortraitContainerRepository extends EntityRepository
{

    /**
     * Method to insert to portrait container
     * 
     * @param int $portraitId     portraitId
     * @param int $portraitPerRow portraitPerRow 
     * @param int $colSize        dropped column size
     */
    public function insertPortraitContainer($portraitId, $portraitPerRow, $colSize)
    {
        $containerObj = $this->findOneBy(array('portrait' => $portraitId));
        $containerSize = floor($colSize / $portraitPerRow);
        //insert container
        if (empty($containerObj)) {
            $portraitObj = $this->_em->getRepository('CommonUtilityBundle:FgCmsContactTable')->find($portraitId);
            $containerObj = new FgCmsPortraitContainer();
            $containerObj->setPortrait($portraitObj);
            $containerObj->setSortOrder(1);
            $containerObj->setSize($containerSize);
            $this->_em->persist($containerObj);
            $this->_em->flush();
            if ($containerObj->getId()) {
                $this->_em->getRepository('CommonUtilityBundle:FgCmsPortraitContainerColumn')->insertContainerColumn($containerObj, $containerSize);
            }
        }
    }

    /**
     * This function is used to update the portrait container size on page container resize
     * 
     * @param int $portraitId            The portrait id
     * @param int $portraitContainerSize The portrait container size
     */
    public function updatePortraitContainerSize($portraitId, $portraitContainerSize)
    {
        $qb = $this->createQueryBuilder();
        $query = $qb->update('CommonUtilityBundle:FgCmsPortraitContainer', 'CPC')
            ->set('CPC.size', ':size')
            ->where('CPC.portrait=:portraitId')
            ->setParameters(array('portraitId' => $portraitId, 'size' => $portraitContainerSize))
            ->getQuery();
        $query->execute();
    }

    /**
     * This function is used to create a new portrait container
     * 
     * @param int   $portraitId            The portrait id
     * @param array $portraitContainerData The portrait container data
     * 
     * @return int The newly inserted portrait container id
     */
    public function createPortraitContainer($portraitId, $portraitContainerData)
    {
        $portraitObj = $this->_em->getReference('CommonUtilityBundle:FgCmsContactTable', $portraitId);
        $portraitContainerObj = new FgCmsPortraitContainer();
        $portraitContainerObj->setPortrait($portraitObj);
        $portraitContainerObj->setSize($portraitContainerData['size']);
        $portraitContainerObj->setSortOrder($portraitContainerData['sortOrder']);
        $this->_em->persist($portraitContainerObj);
        $this->_em->flush();

        return $portraitContainerObj->getId();
    }

    /**
     * This function is used to update an existing portrait container
     * 
     * @param int   $portraitContainerId   The portrait container id
     * @param array $portraitContainerData The portrait container data
     * 
     * @return int The updated portrait container id
     */
    public function updatePortraitContainer($portraitContainerId, $portraitContainerData)
    {
        $portraitContainerObj = $this->_em->getRepository('CommonUtilityBundle:FgCmsPortraitContainer')->find($portraitContainerId);
        $portraitContainerObj->setSize($portraitContainerData['size']);
        $portraitContainerObj->setSortOrder($portraitContainerData['sortOrder']);
        $this->_em->persist($portraitContainerObj);
        $this->_em->flush();

        return $portraitContainerObj->getId();
    }

    /**
     * This function is used to delete the portrait container data
     * 
     * @param int $portraitContainerId The portrait container id
     */
    public function deletePortraitContainer($portraitContainerId)
    {
        $portraitContainerObj = $this->_em->getRepository('CommonUtilityBundle:FgCmsPortraitContainer')->find($portraitContainerId);
        if (!empty($portraitContainerObj)) {
            $this->_em->remove($portraitContainerObj);
            $this->_em->flush();
        }
    }
}
