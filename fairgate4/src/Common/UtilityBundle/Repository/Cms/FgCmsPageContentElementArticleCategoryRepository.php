<?php 
/**
 * FgCmsPageContentElementAreaRepository 
 *
 * @package 	CommonUtilityBundle
 * @subpackage 	Repository
 * @author      pitsolutions.ch
 * @version     Fairgate V4
 */
namespace Common\UtilityBundle\Repository\Cms;

use Doctrine\ORM\EntityRepository;

/**
 * FgCmsPageContentElementArticleCategoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FgCmsPageContentElementArticleCategoryRepository extends EntityRepository
{

    /**
     * Function to save article element categories
     *
     * @param int   $elementId  element id
     * @param array $categories categories to be saved
     *
     * @return
     */
    public function saveArticleElementCategory($elementId, $categories)
    {
        $elementObj = $this->_em->getReference('CommonUtilityBundle:FgCmsPageContentElement', $elementId);
        foreach ($categories as $categoryId) {
            $articleCatObj = $this->_em->getRepository('CommonUtilityBundle:FgCmsPageContentElementArticleCategory')->findOneBy(array('element' => $elementId, 'category' => $categoryId));
            if (empty($articleCatObj)) {
                $articleCatObj = new \Common\UtilityBundle\Entity\FgCmsPageContentElementArticleCategory();
            }
            $catObj = $this->_em->getReference('CommonUtilityBundle:FgCmsArticleCategory', $categoryId);
            $articleCatObj->setElement($elementObj);
            $articleCatObj->setCategory($catObj);
            $this->_em->persist($articleCatObj);
        }
        $this->_em->flush();

        return;
    }

    /**
     * Function to delete existing element category when all categories is saved
     *
     * @param int $elementId  element id
     *
     * @return
     */
    public function deleteExistingElementCategory($elementId)
    {
        $articleCatObjs = $this->_em->getRepository('CommonUtilityBundle:FgCmsPageContentElementArticleCategory')->findBy(array('element' => $elementId));
        if (!empty($articleCatObjs)) {
            foreach ($articleCatObjs as $articleCatObj) {
                $this->_em->remove($articleCatObj);
            }

            $this->_em->flush();
        }
        return;
    }
}
