<?php

/**
 * FgCmsPortraitContainerColumnRepository.
 *
 * @package 	WebsiteCMSBundle
 * @subpackage 	Repository
 * @author     	pitsolutions.ch
 * @version    	Fairgate V4
 *
 */
namespace Common\UtilityBundle\Repository\Cms;

use Doctrine\ORM\EntityRepository;
use Common\UtilityBundle\Entity\FgCmsPortraitContainerColumn;

/**
 * FgCmsPortraitContainerColumnRepository
 *
 * This class was generated by the Doctrine ORM. 
 */
class FgCmsPortraitContainerColumnRepository extends EntityRepository
{

    /**
     * Method to insert to FgCmsPortraitContainerColumn
     * 
     * @param object $containerObj   FgCmsPortraitContainer object
     * @param int    $containerSize  containerSize
     */
    public function insertContainerColumn($containerObj, $containerSize)
    {
        $containerColObj = new FgCmsPortraitContainerColumn();
        $containerColObj->setContainer($containerObj);
        $containerColObj->setSize(floor($containerSize));
        $containerColObj->setSortOrder(1);
        $this->_em->persist($containerColObj);
        $this->_em->flush();
    }

    /**
     * This function is used to get the portrait container column details
     * 
     * @param int $containerId The container id
     * 
     * @return array $columnDetails The column details
     */
    public function getPortraitContainerColumnDetails($containerId)
    {
        $qb = $this->createQueryBuilder('PCC')
            ->select('PCC.id AS portraitColumnId, PCC.sortOrder AS portraitColumnSortOrder, PCC.size AS portraitColumnSize')
            ->where('PCC.container=:containerId')
            ->orderBy('PCC.sortOrder', 'DESC')
            ->setParameter('containerId', $containerId);
        $columnDetails = $qb->getQuery()->getArrayResult();

        return $columnDetails;
    }

    /**
     * This function is used to delete a portrait container column
     * 
     * @param int $columnId The column id
     */
    public function deletePortraitContainerColumn($columnId)
    {
        $portaitContainerColumnObj = $this->find($columnId);
        if ($portaitContainerColumnObj) {
            $this->_em->remove($portaitContainerColumnObj);
            $this->_em->flush();
        }
    }

    /**
     * This function is used to update the portrait container column size on page container resize
     * 
     * @param int $portraitColumnId   The portrait column id
     * @param int $portraitColumnSize The portrait column size
     */
    public function updatePortraitContainerColumnSize($portraitColumnId, $portraitColumnSize)
    {
        $query = $this->createQueryBuilder()
            ->update('CommonUtilityBundle:FgCmsPortraitContainerColumn', 'PCC')
            ->set('PCC.size', ":size")
            ->where('PCC.id=:columnId')
            ->setParameters(array('columnId' => $portraitColumnId, 'size' => $portraitColumnSize))
            ->getQuery();
        $query->execute();
    }

    /**
     * This function is used to create a portrait container column
     * 
     * @param int   $containerId The container id
     * @param array $columnData  The column data
     * 
     * @return int The portrait container column id
     */
    public function createPortraitContainerColumn($containerId, $columnData)
    {
        $portraitContainerObj = $this->_em->getReference('CommonUtilityBundle:FgCmsPortraitContainer', $containerId);
        $portraitContainerColumnObj = new FgCmsPortraitContainerColumn();
        $portraitContainerColumnObj->setContainer($portraitContainerObj);
        $portraitContainerColumnObj->setSize($columnData['columnSize']);
        $portraitContainerColumnObj->setSortOrder($columnData['sortOrder']);
        $this->_em->persist($portraitContainerColumnObj);
        $this->_em->flush();

        return $portraitContainerColumnObj->getId();
    }

    /**
     * This function is used to update the portrait container column
     * 
     * @param int   $columnId   The column id 
     * @param array $columnData The column data to be updated
     * 
     * @return int The portrait container column id
     */
    public function updatePortraitContainerColumn($columnId, $columnData)
    {
        $portraitContainerColumnObj = $this->_em->getRepository('CommonUtilityBundle:FgCmsPortraitContainerColumn')->find($columnId);
        if (isset($columnData['columnSize'])) {
            $portraitContainerColumnObj->setSize($columnData['columnSize']);
        }
        if (isset($columnData['sortOrder'])) {
            $portraitContainerColumnObj->setSortOrder($columnData['sortOrder']);
        }
        $this->_em->persist($portraitContainerColumnObj);
        $this->_em->flush();

        return $portraitContainerColumnObj->getId();
    }
}
