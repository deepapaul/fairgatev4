<?php 
/**
 * FgCmsPageContentElementAreaRepository 
 *
 * @package 	CommonUtilityBundle
 * @subpackage 	Repository
 * @author      pitsolutions.ch
 * @version     Fairgate V4
 */
namespace Common\UtilityBundle\Repository\Cms;

use Doctrine\ORM\EntityRepository;

/**
 * FgCmsPageContentElementAreaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FgCmsPageContentElementAreaRepository extends EntityRepository
{

    /**
     * Function to save article element areas
     *
     * @param int   $elementId  element id
     * @param array $areas      areas to be saved
     *
     * @return
     */
    public function saveElementArea($elementId, $areas)
    {
        $elementObj = $this->_em->getReference('CommonUtilityBundle:FgCmsPageContentElement', $elementId);
        foreach ($areas as $roleId) {
            $areaObj = $this->_em->getRepository('CommonUtilityBundle:FgCmsPageContentElementArea')->findOneBy(array('element' => $elementId, 'role' => $roleId));
            if (empty($areaObj)) {
                $areaObj = new \Common\UtilityBundle\Entity\FgCmsPageContentElementArea();
            }
            $roleObj = $this->_em->getReference('CommonUtilityBundle:FgRmRole', $roleId);
            $areaObj->setElement($elementObj);
            $areaObj->setRole($roleObj);
            $this->_em->persist($areaObj);
        }
        $this->_em->flush();

        return true;
    }

    /**
     * Function to delete existing element areas when all areas is saved
     *
     * @param int   $elementId  element id
     *
     * @return
     */
    public function deleteExistingElementArea($elementId)
    {
        $areaObjs = $this->_em->getRepository('CommonUtilityBundle:FgCmsPageContentElementArea')->findBy(array('element' => $elementId));
        if (!empty($areaObjs)) {
            foreach ($areaObjs as $areaObj) {
                $this->_em->remove($areaObj);
            }
            $this->_em->flush();
        }
        return;
    }
}
