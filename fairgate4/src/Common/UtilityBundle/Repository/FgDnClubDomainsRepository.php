<?php

namespace Common\UtilityBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * FgDnClubDomains
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FgDnClubDomainsRepository extends EntityRepository
{

    /**
     * This function is used to get the club details from the domain name incase of the accessing form a club domain
     * 
     * @param string $domain Domain name of the club
     * 
     * @return Array Returns the club details including the club url identifier
     */
    public function getClubDetails($domain)
    {
        $resultQuery = $this->createQueryBuilder('d')
            ->select('c.urlIdentifier, c.id as clubId, d.domainType')
            ->leftJoin('d.club', 'c')
            ->where('d.domain=:domain')
            ->setParameter('domain', $domain);

        return $resultQuery->getQuery()->getResult()[0];
    }
    
    /**
     * Function is used to check whether the club has a domain or not
     * 
     * @param int $clubId Club id
     * 
     * @return boolean/string
     */
    public function checkClubHasDomain($clubId)
    {
        $dType = 'main';
        $resultQuery = $this->createQueryBuilder('d')
            ->select('d.domain','d.isSecure')
            ->leftJoin('d.club', 'c')
            ->where('d.club=:clubId')
            ->andWhere('d.domainType=:dType')
            ->setParameter('clubId', $clubId)
            ->setParameter('dType', $dType);

        $result = $resultQuery->getQuery()->getResult();
        
        if (count($result) > 0) {
            $result = $result[0];
            if ($result['isSecure']) {
                $result['domain'] = 'https://'.$result['domain'];

                return $result;
            } else {
                $result['domain'] = 'http://'.$result['domain'];

                return $result;
            }
        } else {
            return false;
        }
    }
}
