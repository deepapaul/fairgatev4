<?php

namespace Common\UtilityBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Common\UtilityBundle\Util\FgSettings;

/**
 * FgDmDocumentsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FgDmVersionRepository extends EntityRepository
{
    /**
     * Function to get version list of a document
     * 
     * @param int $documentId Document id to get version detail
     *  
     * @return array
     */
    public function getDocumentVersionDetails($documentId)
    {
        $doctrineConfig = $this->getEntityManager()->getConfiguration();
        $doctrineConfig->addCustomStringFunction('DATE_FORMAT', 'Common\UtilityBundle\Extensions\DateFormat');
        $dateFormat = FgSettings::getMysqlDateTimeFormat();
        $doctrineConfig->addCustomStringFunction('contactName', 'Common\UtilityBundle\Extensions\FetchContactName');
        $resultQuery = $this->createQueryBuilder('v')
                ->select("v.id, v.file, v.size, (DATE_FORMAT(v.createdAt,'" . $dateFormat . "')) as uploadedOn, contactName(v.createdBy) AS uploadedBy")
                ->leftJoin('CommonUtilityBundle:FgDmDocuments', 'd', 'WITH', 'v.document = d.id')
                ->where('v.document = :documentId')
                ->andWhere('v.id != d.currentRevision')
                ->orderBy('v.createdAt', 'DESC')
                ->setParameters(array('documentId' => $documentId));
        $result = $resultQuery->getQuery()->getArrayResult();
        $count = count($result);
        $versionArray = array();
        foreach ($result as $key => $version) {
            $versionArray[] = array($version['id'], $count, $version['size'], $version['uploadedOn'], $version['uploadedBy']);
            $count--;
        }

        return $versionArray;
    }
}
