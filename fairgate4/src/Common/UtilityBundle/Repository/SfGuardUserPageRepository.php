<?php namespace Common\UtilityBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Common\UtilityBundle\Util\FgSettings;

/**
 * SfGuardUserPageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SfGuardUserPageRepository extends EntityRepository
{

    /**
     * Function to get existing user page rights
     *
     * @param type $contactKey Contact id
     * @param type $groupKey   Group Id
     *
     * @return type Array
     */
    public function getExistingUserPages($contactKey, $groupKey)
    {
        $sql = "SELECT page_id from sf_guard_user_page sfgup
                LEFT JOIN fg_cms_page p ON sfgup.page_id=p.id
                LEFT JOIN sf_guard_user sfu ON sfu.id=sfgup.user_id
                WHERE  sfgup.group_id=:groupKey and sfu.contact_id=:contactKey and p.type IN ('page','article','gallery','calendar') ";
        $stmt = $this->_em->getConnection()->prepare($sql);
        $stmt->bindValue('contactKey', $contactKey);
        $stmt->bindValue('groupKey', $groupKey);
        $stmt->execute();
        $result = $stmt->fetchAll();
        return $result;
    }

    /**
     * Method to get page  admins
     * 
     * @param int $clubId clubId
     * 
     * @return array $result result array
     */
    public function getPageAdmins($clubId, $contactId = 0)
    {
        $dateFormat = FgSettings::getMysqlDateFormat();
        $contactCond = ($contactId != 0) ? " AND sfu.contact_id = $contactId " : " ";

        $sql = "SELECT DATE_FORMAT(sfug.created_at, '$dateFormat') as createdAt, sfu.id as user_id,g.type, sfug.user_id,g.module_type,
             contactNameYOB(sfu.contact_id) as contactName,contactNameNoSort(sfu.contact_id,0) as contactname, sfug.page_id as pageId, page.title as page,
              sfu.contact_id, CONCAT('c_',sfu.contact_id ) as contactId , fcc.is_stealth_mode as stealth
              FROM sf_guard_user_page sfug
              LEFT JOIN fg_cms_page page ON page.id = sfug.page_id
              LEFT JOIN sf_guard_user sfu ON sfu.id=sfug.user_id
              LEFT JOIN sf_guard_group g ON g.id=sfug.group_id
              LEFT JOIN fg_cm_contact fcc ON fcc.id = sfu.contact_id
              WHERE sfu.club_id=:club AND g.type = 'page' AND g.module_type='cms' $contactCond  
              ORDER BY contactNameNoSort(sfu.contact_id,0) ASC";
        $stmt = $this->_em->getConnection()->prepare($sql);
        $stmt->bindValue('club', $clubId);
        $stmt->execute();
        $result = $stmt->fetchAll();
        return $result;
    }
    
    /**
     * get the names of page admin in a club
     * @param object $conn
     * @param int $club club id
     * @return array
     */
    public function getPageAdminNames($conn,$club){
        $sql = "SELECT contactName(sfu.contact_id) as contactname,sfu.contact_id as contact "
            . "from sf_guard_user_page sfup "
            . "left join sf_guard_user sfu on sfu.id = sfup.user_id "
            . "left join fg_cms_page cp on cp.id = sfup.page_id "
            . "where cp.club_id =:club";
        
        $result = $conn->fetchAll($sql, array(":club" => $club));

        return $result;
    }
    
    /**
     * Method to get page  admins
     * 
     * @param int $clubId clubId
     * 
     * @return array $result result array
     */
    public function getMyPageAndNavigation($clubId, $contactId)
    {
        $dateFormat = FgSettings::getMysqlDateFormat();
        $contactCond = ($contactId != 0) ? " AND sfu.contact_id = $contactId " : " ";

        $sql = "SELECT page.id AS page_id, navigation.id AS nav_id
                FROM sf_guard_user_page sfug
                LEFT JOIN fg_cms_page page ON page.id = sfug.page_id
                LEFT JOIN fg_cms_navigation navigation ON navigation.page_id = page.id
                LEFT JOIN sf_guard_user sfu ON sfu.id=sfug.user_id
                LEFT JOIN sf_guard_group g ON g.id=sfug.group_id
                WHERE sfu.club_id=:club AND g.type = 'page' AND g.module_type='cms' AND sfu.contact_id =:contactId";
        $stmt = $this->_em->getConnection()->prepare($sql);
        $stmt->bindValue('club', $clubId);
        $stmt->bindValue('contactId', $contactId);
        $stmt->execute();
        $result = $stmt->fetchAll();
        return $result;
    }
}
