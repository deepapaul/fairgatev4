<?php

namespace Common\UtilityBundle\Repository\Message;

use Doctrine\ORM\EntityRepository;
use Common\UtilityBundle\Entity\FgMessageData;

/**
 * FgMessageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FgMessageDataRepository extends EntityRepository {

     /**
     * Method to insert the message content details
     * @param array $messageDetailArray 
     * @return void
     */
    public function insertMessageContent($messageContentArray) {
        
        $messageObj = new FgMessageData();
        $messageObj->setMessage($messageContentArray['messagecontent']);
        $messageObj->setMessage2($messageContentArray['messageid']);
        $messageObj->setSender($messageContentArray['senderid']);
        $messageObj->setUpdatedAt(new \DateTime("now"));
        
        $this->_em->persist($messageObj);
        $this->_em->flush();
        return $messageObj->getId();
    }

    /**
     * Method to update the message content details
     * @param array $messageDetailArray 
     * @return int
     */
    public function updateMessageContent($messageContentArray) {
        
       $messageObj = $this->_em->getRepository('CommonUtilityBundle:FgMessageData')->find($messageContentArray['id']);
       $messageObj->setMessage($messageContentArray['messagecontent']);
       
       $this->_em->persist($messageObj);
       $this->_em->flush();
       return ;
    }
        
     /**
     * Function to get the first message data of the message
     * @param int $messageId 
     * @return int
     */
    public function getFirstMessage($messageId) {
        
        $qb = $this->createQueryBuilder('m')
                    ->select('m.message','m.id')
                    ->orderBy('m.id', 'ASC')
                    ->where('m.message2=:messageid')
                    ->setParameter('messageid', $messageId);
        
        $result = $qb->getQuery()->getOneOrNullResult();
        return $result;
    }
     /**
     * Function to get the last message data of the message
     * @param int $messageId 
     * @return int
     */
    public function getLastMessage($messageId) {
        
        $qb = $this->createQueryBuilder('m')
                    ->select('m.message','m.id')
                    ->orderBy('m.id', 'DESC')
                    ->where('m.message2=:messageid')
                    ->setMaxResults(1)
                    ->setParameter('messageid', $messageId);
        
        $result = $qb->getQuery()->getOneOrNullResult();
        return $result;
    }
}

