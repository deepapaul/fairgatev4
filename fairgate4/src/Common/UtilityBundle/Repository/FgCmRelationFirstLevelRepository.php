<?php

namespace Common\UtilityBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * FgCmRelationFirstLevelRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FgCmRelationFirstLevelRepository extends EntityRepository
{

    /**
     * Function to get opposite relations for given relation(s)
     *
     * @param int/array $relationId Relation Id or Array of Relation Ids
     * @param object    $conn       Connection variable
     *
     * @return array    $resultArray Result array of relation and opposite relations
     */
    public function getOppositeRelation($relationId, $conn = false)
    {
        $hasConnection = $conn ? true : false;
        if (!$hasConnection) {
            $conn = $this->getEntityManager()->getConnection();
        }
        $relationIdStr = is_array($relationId) ? implode(',', $relationId) : $relationId;
        $oppRelations = $conn->fetchAll("SELECT GROUP_CONCAT(`relation_id`) AS relationIds, GROUP_CONCAT(`first_level_relation_id`) AS oppRelationIds "
            . "FROM `fg_cm_relation_first_level` WHERE `relation_id` IN ($relationIdStr)");
        if (!$hasConnection) {
            $conn->close();
        }
        $resultArray = array();
        if (count($oppRelations)) {
            $relationIds = explode(',', $oppRelations['0']['relationIds']);
            $oppRelationIds = explode(',', $oppRelations['0']['oppRelationIds']);
            $resultArray = array_combine($relationIds, $oppRelationIds);
        }

        return $resultArray;
    }
}
